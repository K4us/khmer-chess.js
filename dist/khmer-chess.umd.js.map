{"version":3,"file":"khmer-chess.umd.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./KhmerChess.ts","webpack:///./brain/HVPont.ts","webpack:///./brain/MoveHelper.ts","webpack:///./brain/Rectangle.ts","webpack:///./brain/boardHelper.ts","webpack:///./brain/constant.ts","webpack:///./brain/genMask.ts","webpack:///./brain/index.ts","webpack:///./brain/jsis.ts","webpack:///./index.ts","webpack:///./kpgn/Captured.ts","webpack:///./kpgn/KPGN.ts","webpack:///./kpgn/Move.ts","webpack:///./kpgn/Player.ts","webpack:///./kpgn/Result.ts","webpack:///./kpgn/Timer.ts","webpack:///./kpgn/index.ts","webpack:///./other/EventHandler.ts","webpack:///./other/index.ts","webpack:///./other/table.ts","webpack:///./ren/Board.ts","webpack:///./ren/CountDown.ts","webpack:///./ren/Graveyard.ts","webpack:///./ren/KAttacked.ts","webpack:///./ren/KqJumped.ts","webpack:///./ren/Piece.ts","webpack:///./ren/PieceIndex.ts","webpack:///./ren/Point.ts","webpack:///./ren/REN.ts","webpack:///./ren/constant.ts","webpack:///./ren/index.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import config from '../package.json';\nimport KPGN from './kpgn/KPGN';\nimport Move from './kpgn/Move';\nimport asciiTable from './other/table';\nimport { PieceIndex } from './ren';\nimport Point from './ren/Point';\nimport REN from './ren/REN';\n\nexport default class KhmerChess {\n    static title = config.name;\n    static version = config.version;\n    kpgn: KPGN;\n    constructor(renStr?: string) {\n        const ren = REN.fromString(renStr);\n        this.kpgn = new KPGN(ren);\n    }\n\n    loadKpng(option: object) {\n        this.kpgn.fromJson(option);\n    }\n\n    resetBoard() {\n        this.kpgn.ren = REN.fromString();\n    }\n\n    getCanMoves(): PieceIndex[] {\n        const pieceIndices = this.kpgn.ren.genAllCanMoves();\n        return pieceIndices;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const canMovePoints = this.kpgn.ren.getCanMovePointsByPoint(point);\n        return canMovePoints;\n    }\n\n    validateRENStr(renStr: string) {\n        try {\n            REN.fromString(renStr);\n            return { valid: true, error_number: 0, error: 'No errors.' };\n        } catch (error) {\n            return { valid: false, error_number: 1, error: error.message };\n        }\n    }\n\n    getRENStr() {\n        return this.kpgn.ren.toString();\n    }\n\n    get piecesInBoardMultiArray() {\n        return this.kpgn.ren.board.piecesMultiArray;\n    }\n\n    get piecesInBoard() {\n        return this.kpgn.ren.board.pieces;\n    }\n\n    get piecesInGraveyard() {\n        return this.kpgn.ren.graveyard.pieces;\n    }\n\n    // Khmer Portable Game Notation <file-name>.kpgn.json\n    getKPGN() {\n        return this.kpgn.toJson();\n    }\n\n    loadKpgn(kpgnJosn: any, options: any) {\n        this.kpgn = new KPGN(this.kpgn.ren);\n    }\n\n    drawAscii() {\n        return asciiTable(this.kpgn.ren);\n    }\n\n    get turn() {\n        return this.kpgn.ren.turn;\n    }\n\n    set turn(turn: string) {\n        this.kpgn.ren.turn = turn;\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const move = this.kpgn.ren.move(moveFromIndex, moveToIndex);\n        this.kpgn.moves.push(move);\n        return move;\n    }\n\n    /**\n     * Move all pieces to graveyard except kings\n     * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n     */\n    clearBoard() {\n        this.kpgn.ren = REN.fromString('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n    }\n\n    getHistories() {\n        return this.kpgn.moves;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { HORIZONTAL_CODE_LETTERS } from './constant';\nimport jsis from './jsis';\n\nexport default class HVPont {\n    h: string;\n    v: number;\n    get x() {\n        return HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n    }\n    get y() {\n        return this.v - 1;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    constructor(h: string, v?: string | number) {\n        if (jsis.isUndefined(v)) {\n            h = h[0];\n            v = h[1];\n        }\n        this.h = h;\n        this.v = Number(v);\n    }\n\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from '../ren/Piece';\nimport PieceIndex from '../ren/PieceIndex';\nimport Point from '../ren/Point';\nimport boardHelper from './boardHelper';\nimport { PIECE_COLOR_BLACK, PIECE_COLOR_WHITE } from './constant';\n// abcdecbaooooooooffffffffoooooooooooooooommmmmmmmoooooooohijlkjih\nexport type OptionsType = {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n};\nexport type CalCountPropsType = {\n    color: string,\n    piecesString: string;\n    force: boolean;\n};\nexport default class MoveHelper implements OptionsType {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n\n    whiteMoves: PieceIndex[];\n    blackMoves: PieceIndex[];\n    whiteKingInDanger: Point[] | null;\n    whiteKingWillInDanger: Point[] | null;\n    blackKingInDanger: Point[] | null;\n    blackKingWillInDanger: Point[] | null;\n    winColor: string | null;\n    stuckColor: string | null;\n\n    get isWhiteTurn() {\n        return Piece.isWhiteColor(this.currentTurn);\n    }\n    init(option: OptionsType) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isQueenMoved = option.isQueenMoved;\n        this.isKingMoved = option.isKingMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieceIndices: PieceIndex[]) => {\n            pieceIndices.forEach((pieceIndex) => {\n                let isHaveMoved = this.isKingMoved;\n                if (!pieceIndex.piece.isTypeKing) {\n                    isHaveMoved = pieceIndex.piece.isTypeQueen ? this.isQueenMoved : false;\n                }\n                const canMovePoints = this.genCanMovePointsByPiecePoint(\n                    pieceIndex.point,\n                    pieceIndex.piece,\n                    this.piecesString,\n                    isHaveMoved\n                );\n                pieceIndex.canMovePoints = canMovePoints;\n            });\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces: any[]) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMovePoints.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (this.isWhiteTurn && !this.whiteMoves.length) {\n            this.stuckColor = PIECE_COLOR_WHITE;\n        } else if (!this.isWhiteTurn && !this.blackMoves.length) {\n            this.stuckColor = PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves: PieceIndex[] = [];\n        if (this.genCanMove) {\n            moves = this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves: PieceIndex[] = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = !this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n\n    calcState(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n            blackCountable: boardHelper.checkCountable(\n                PIECE_COLOR_BLACK,\n                this.piecesString\n            ),\n            whiteCountable: boardHelper.checkCountable(\n                PIECE_COLOR_WHITE,\n                this.piecesString\n            ),\n        };\n    }\n\n    calCount({ color, piecesString, force }: CalCountPropsType) {\n        return boardHelper.checkCount(color, piecesString, force);\n    }\n\n    genCanMovePointsByPiecePoint(point: Point, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        return boardHelper.genCanMovePointsByPiecePoint(\n            point.index,\n            piece,\n            piecesString,\n            isHasMoved\n        );\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { Point } from '../ren';\nimport { ROW_LAST_INDEX } from './constant';\n\nexport default class Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    isContainsPoint(point: Point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n\n    static isValidPoint(point: Point) {\n        return new Rectangle(0, 0, ROW_LAST_INDEX, ROW_LAST_INDEX).isContainsPoint(point);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import jsis from './jsis';\nimport genMask from './genMask';\nimport {\n    PIECE_COLOR_WHITE,\n    PIECE_COLOR_BLACK,\n    EMPTY_PIECE,\n    ROW_NUMBER,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    CELL_COUNT,\n} from './constant';\nimport Point from '../ren/Point';\nimport Piece from '../ren/Piece';\nimport Rectangle from './Rectangle';\nimport { PieceIndex } from '../ren';\n\nconst mask = genMask();\n\nclass BoardHelper {\n    getCharPieceFromString(piecesString: string, index: number) {\n        if (Point.isIndexInBoard(index) && piecesString.length === CELL_COUNT) {\n            return piecesString[index];\n        }\n        return EMPTY_PIECE;\n    }\n    getCharPieceInPos(index: number, piecesString: string) {\n        return this.getCharPieceFromString(piecesString, index);\n    }\n    getPieceByIndex(index: number, piecesString: string): {\n        isValidPiece: boolean, piece: Piece | null\n    } {\n        const charCode = this.getCharPieceInPos(index, piecesString);\n        return {\n            isValidPiece: Piece.isValidPiece(charCode),\n            piece: Piece.fromCharCode(charCode),\n        };\n    }\n    convertMask = (point1: Point, index: number, color: string) => {\n        const sign = Piece.isWhiteColor(color) ? 1 : -1;\n        const point2 = Point.fromIndex(index);\n        point1.x = point1.x * sign + point2.x;\n        point1.y = point1.y * sign + point2.y;\n        return Rectangle.isValidPoint(point1) ? point1.index : null;\n    };\n    getPieceCanMovePoses(index: number, piece: Piece) {\n        const pieceIndices: number[] = [];\n        mask[piece.type].forEach((_pos: number[]) => {\n            const newIndex = this.convertMask(new Point(_pos[0], _pos[1]), index, piece.color);\n            if (!jsis.isNull(newIndex)) {\n                pieceIndices.push(newIndex);\n            }\n        });\n        return pieceIndices;\n    }\n    getPieceCanMovePosesValid(index: number, piece: Piece, piecesString: string) {\n        const _poses = this.getPieceCanMovePoses(index, piece);\n        const pieceIndices = [];\n        const n = _poses.length;\n        const thisPos = Point.fromIndex(index);\n        for (let i = 0; i < n; i++) {\n            let p = Point.fromIndex(_poses[i]);\n            const distPiece = this.getPieceByIndex(p.index, piecesString);\n            if (distPiece.isValidPiece) {\n                if (piece.color === distPiece.piece.color ||\n                    (piece.isTypeFish && p.x === thisPos.x)) {\n                    p = null;\n                }\n            } else {\n                if (piece.isTypeFish && p.x !== thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && piece.isTypeBoat) {\n                const _x = thisPos.x;\n                const _y = thisPos.y;\n                if (p.x === thisPos.x) {\n                    let _n = Math.abs(p.y - thisPos.y);\n                    const _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x, _y + _s * _n), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    let _n = Math.abs(p.x - thisPos.x);\n                    const _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x + _s * _n, _y), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                pieceIndices.push(_poses[i]);\n            }\n        }\n        return pieceIndices;\n    }\n    replacePiecesStringAtIndex(piecesString: string, charCode: string, index: number) {\n        return piecesString.substring(0, index) + charCode + piecesString.substring(index + 1);\n    }\n    injectPiece(piecesString: string, index1: number, index2: number) {\n        const c = piecesString[index1];\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesStringAtIndex(piecesString, EMPTY_PIECE, index1);\n        piecesString = this.replacePiecesStringAtIndex(piecesString, c, index2);\n        return piecesString;\n    }\n    getKingWillInDanger(color: string, piecesString: string) {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color &&\n                p.piece.isTypeBoat) {\n                const _poses = this.getPieceCanMovePoses(i, p.piece);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getKingInDanger(color: string, piecesString: string): Point[] | null {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color) {\n                const _poses = this.getPieceCanMovePosesValid(i, p.piece, piecesString);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    genCanMovePointsByPiecePoint(index: number, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        const _poses = this.getPieceCanMovePosesValid(index, piece, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (piece.isTypeKing) {\n            if (!isHaveCaptured && !isHasMoved) {\n                let p = this.convertMask(new Point(2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(new Point(-2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (piece.isTypeQueen) {\n            if (!isHaveCaptured && !isHasMoved) {\n                const p = this.convertMask(new Point(-0, 2), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const points: Point[] = [];\n        for (let i = 0; i < n; i++) {\n            const str = this.injectPiece(piecesString, index, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(piece.color, str))) {\n                points.push(Point.fromIndex(_poses[i]));\n            }\n        }\n        return points;\n    }\n    isCharPiecesInBoard(code: string, piecesString: string) {\n        return !!~piecesString.indexOf(code);\n    }\n    getPiecesInBoard(piecesString: string) {\n        return piecesString.split('').filter((charCode: string) => {\n            return Piece.isValidPiece(charCode);\n        });\n    }\n    isHaveCaptured(piecesString: string) {\n        return this.getPiecesInBoard(piecesString).length < ROW_NUMBER * 4;\n    }\n    filterPieceInBoard(piecesString: string) {\n        const whitePieces: PieceIndex[] = [];\n        const blackPieces: PieceIndex[] = [];\n        for (let i = 0; i < piecesString.length; i++) {\n            const charCode = piecesString[i];\n            if (Piece.isValidPiece(charCode)) {\n                const pieceIndex = new PieceIndex(Point.fromIndex(i), Piece.fromCharCode(charCode));\n                if (pieceIndex.piece.isColorWhite) {\n                    whitePieces.push(pieceIndex);\n                } else {\n                    blackPieces.push(pieceIndex);\n                }\n            }\n        }\n        return {\n            whitePieces,\n            blackPieces,\n        };\n    }\n    extractPiecesToArray(piecesString: string) {\n        const piecesStringArr = piecesString.split('');\n        const pieceAll: { [key: string]: string[] } = {\n            [PIECE_COLOR_BLACK]: [],\n            [PIECE_COLOR_WHITE]: [],\n        };\n        piecesStringArr.forEach((charCode: string) => {\n            if (charCode === EMPTY_PIECE) {\n                return;\n            }\n            const piece = Piece.fromCharCode(charCode);\n            pieceAll[piece.color].push(piece.type);\n        });\n        return pieceAll;\n    }\n    isStateCount(c: string, piecesString: string) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    }\n    checkCountable(color: string, piecesString: string) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    }\n    checkCount(color: string, piecesString: string, force: boolean) {\n        const countChar = (str: string[], c: string) => {\n            return str.join('').split(c).length - 1;\n        };\n        const charExist = (str: string[], c: string) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, PIECE_TYPE_FISH)) {\n                let count = 64;\n                const toukCount = countChar(stronger, PIECE_TYPE_BOAT);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, PIECE_TYPE_HORSE) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL)) {\n                    count = 44;\n                }\n                return [stronger.length + 1, count];\n            }\n            return [0, 64];\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return [0, 64];\n        }\n        return null;\n    }\n    isUpgradable(piece: Piece, point: Point) {\n        if (piece.isTypeFish) {\n            if (piece.isColorBlack && point.y <= 2) {\n                return true;\n            }\n            if (piece.isColorWhite && point.y >= 5) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nexport default new BoardHelper();\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export const PIECE_COLOR_WHITE = 'w';\nexport const PIECE_COLOR_BLACK = 'b';\nexport const COLOR_NAMES: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'ខ្មៅ',\n    [PIECE_COLOR_WHITE]: 'ស',\n};\nexport const COLOR_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'black',\n    [PIECE_COLOR_WHITE]: 'white',\n};\n\nexport const PIECE_TYPE_BOAT = 'b'; // Boat\nexport const PIECE_TYPE_HORSE = 'h'; // Horse\nexport const PIECE_TYPE_GENERAL = 'g'; // General\nexport const PIECE_TYPE_KING = 'k'; // King\nexport const PIECE_TYPE_QUEEN = 'q'; // Queen\nexport const PIECE_TYPE_FISH = 'f'; // Fish\nexport const PIECE_TYPE_TRANSFORM_FISH = 't'; // Transform fish\nexport const PIECE_NAMES: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'ទូក',\n    [PIECE_TYPE_HORSE]: 'សេះ',\n    [PIECE_TYPE_GENERAL]: 'គោល',\n    [PIECE_TYPE_KING]: 'ស្តេច',\n    [PIECE_TYPE_QUEEN]: 'នាង',\n    [PIECE_TYPE_FISH]: 'ត្រី',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'ត្រីបក',\n};\nexport const PIECE_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'boat',\n    [PIECE_TYPE_HORSE]: 'horse',\n    [PIECE_TYPE_GENERAL]: 'general',\n    [PIECE_TYPE_KING]: 'king',\n    [PIECE_TYPE_QUEEN]: 'queen',\n    [PIECE_TYPE_FISH]: 'fish',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'transformed-fish',\n};\nexport const EMPTY_PIECE = '.';\nexport const PIECE_COLOR_EMPTY = '.';\nexport const BOARD_SEPARATOR = '/';\n\nexport const ROW_NUMBER = 8;\nexport const ROW_FIRST_INDEX = 0;\nexport const ROW_LAST_INDEX = 7;\nexport const CELL_COUNT = ROW_NUMBER * ROW_NUMBER;\n\nexport const HORIZONTAL_CODE_LETTERS = 'abcdefgh';\nexport const HORIZONTAL_NOTE_LETTERS = ['ក', 'ខ', 'គ', 'ឃ', 'ង', 'ច', 'ឆ', 'ជ'];\nexport const VERTICAL_NOTE_LETTERS = ['១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩', '១០',\n    '១១', '១២', '១៣', '១៤', '១៥', '១៦', '១៧', '១៨', '១៩', '២០',\n    '២១', '២២', '២៣', '២៤', '២៥', '២៦', '២៧', '២៨', '២៩', '៣០'];\nexport const HORIZONTAL_NOTE_LETTERS_ENGLISH = 'abcdefgh';\nexport const VERTICAL_NOTE_LETTERS_ENGLISH = Array.from({ length: 30 }, (_, i) => `${i + 1}`);\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_QUEEN,\n} from './constant';\n\nexport default function genMask() {\n    const mask: { [key: string]: number[][] } = {};\n    mask[PIECE_TYPE_BOAT] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[PIECE_TYPE_HORSE] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[PIECE_TYPE_QUEEN] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_GENERAL] = mask[PIECE_TYPE_QUEEN].concat([\n        [0, 1],\n    ]);\n    mask[PIECE_TYPE_KING] = mask[PIECE_TYPE_GENERAL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[PIECE_TYPE_FISH] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_TRANSFORM_FISH] = mask[PIECE_TYPE_QUEEN];\n    return mask;\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Rectangle } from './Rectangle';\nexport { default as boardHelper } from './boardHelper';\nexport { default as genMask } from './genMask';\nexport { default as jsis } from './jsis';\nexport { default as HVPont } from './HVPont';\nexport { default as MoveHelper } from './MoveHelper';\nexport { OptionsType, CalCountPropsType } from './MoveHelper';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","const jsis = {\n    isValid(v: any) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v: any) {\n        return v === null;\n    },\n    isUndefined(v: any) {\n        return typeof v === 'undefined';\n    },\n    isString(str: any) {\n        return this.isValid(str) && typeof str === 'string';\n    },\n    isNotEmpty(str: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isValidString(str) && str != '';\n    },\n    isNumber(n: any) {\n        return this.isValid(n) && typeof n === 'number';\n    },\n    isStringNumber(n: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isString(n) && n != '' && !isNaN(Number(n));\n    },\n    isArray(arr: any) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f: any) {\n        return this.isValid(f) && typeof f === 'function';\n    },\n    isObject(o: any) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b: any) {\n        return this.isValid(b) && typeof b === 'boolean';\n    },\n    isTrue(b: any) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b: any) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p: { x: any; y: any; }) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size: { width: any; height: any; }) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n: number) {\n        return !!(n % 2);\n    },\n    isEven(n: any) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str: string) {\n        return str === str.toUpperCase();\n    },\n};\n\nexport default jsis;\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export * from './brain';\nexport * from './kpgn';\nexport * from './ren';\nexport * from './other';\nexport { default as KhmerChess } from './KhmerChess';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\n\nexport type CapturedPropType = {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n};\nexport default class Captured implements CapturedPropType {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n    constructor({ piece, fromBoardPoint: fromBoardPoint, toGraveyardPoint: toGraveyardPoint }: CapturedPropType) {\n        this.piece = piece;\n        this.fromBoardPoint = fromBoardPoint;\n        this.toGraveyardPoint = toGraveyardPoint;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\nimport Move from './Move';\nimport Player from './Player';\nimport Result from './Result';\nimport Timer from './Timer';\nimport type { Option as TimeOption } from './Timer';\nimport type { Option as ResultOption } from './Result';\nimport type { Option as PlayerOption } from './Player';\n\nexport type Option = {\n    event?: string;\n    date?: string;\n    location?: string;\n    players?: {\n        white: PlayerOption;\n        black: PlayerOption;\n    };\n    result?: {\n        last: {\n            whiteWin: boolean;\n            blackWin: boolean;\n        };\n        white: ResultOption;\n    };\n    moves?: string[];\n    ren?: string;\n    timer?: TimeOption;\n};\n\nexport default class KPGN {\n    event: string = '';\n    date: Date | null = null;\n    location: string = '';\n    players = {\n        white: new Player({}),\n        black: new Player({}),\n    };\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false,\n        },\n        white: new Result({}),\n    };\n\n    moves: Move[];\n    ren: REN;\n    timer: Timer = new Timer({});\n\n    constructor(ren: REN) {\n        this.ren = ren;\n        this.moves = [];\n    }\n\n    get latestMove() {\n        return this.moves[this.moves.length - 1] || null;\n    }\n\n    loadRENStr(renStr?: string) {\n        this.ren = REN.fromString(renStr);\n    }\n\n    loadMovesStrings(moves: string[]) {\n        let currentRen = this.ren;\n        this.moves = moves.reverse().map((moveStr) => {\n            const move = Move.fromString(moveStr, currentRen);\n            currentRen = currentRen.backRen(move);\n            return move;\n        }).reverse();\n    }\n\n    validateOption(option: Option) {\n        // TODO: throw when invalid option's properties\n    }\n\n    fromJson(option: Option) {\n        this.validateOption(option);\n        const { ren, moves, timer, result,\n            players, location, date, event } = option;\n\n        this.event = event || this.event;\n        this.date = date ? new Date(date) : this.date;\n        this.location = location || this.location;\n        if (players) {\n            this.players = {\n                white: new Player(players.white),\n                black: new Player(players.black),\n            };\n        }\n        if (result) {\n            this.result = {\n                last: result.last,\n                white: new Result(result.white),\n            };\n        }\n        this.ren = REN.fromString(ren || '');\n        this.loadMovesStrings(moves || []);\n        this.timer = new Timer(timer || {});\n    }\n\n    toJson(): Option {\n        return {\n            event: this.event,\n            date: this.date ? this.date.toString() : '',\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin,\n                },\n                white: this.result.white.toJson(),\n            },\n            timer: this.timer.toJson(),\n            moves: this.moves.map((m) => m.toString()),\n            ren: this.ren.toString(),\n        };\n    }\n\n    fromBase64(str: string) {\n        // TODO:\n    }\n    toBase64() {\n        // TODO:\n        return '';\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport { boardHelper } from '../brain';\nimport { KqJumped, PieceIndex, REN } from '../ren';\nimport {\n    PIECE_FLAG_JUMP,\n    PIECE_FLAG_KILL,\n    PIECE_FLAG_START_COUNTING,\n    PIECE_FLAG_UPGRADE,\n} from '../ren/constant';\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\nimport Captured from './Captured';\n\nexport type Option = {\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isUpgrading?: boolean;\n    captured?: Captured;\n};\nexport default class Move {\n    renStr: string;\n    boardStatus: {\n        attacker: PieceIndex | null,\n        winColor: string | null,\n        stuckColor: string | null,\n        startCountingColor: string | null,\n        countingDownColor: string | null,\n        drawCountColor: string | null,\n    } = {\n            attacker: null,\n            winColor: null,\n            stuckColor: null,\n            startCountingColor: null,\n            countingDownColor: null,\n            drawCountColor: null,\n        };\n    startCountingFrom = 0;\n    kqJumping: KqJumped\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isUpgrading: boolean;\n    captured: Captured | null;\n    constructor({ piece, moveFrom, moveTo,\n        isUpgrading, captured,\n    }: Option) {\n        this.piece = piece;\n        this.moveFrom = moveFrom;\n        this.moveTo = moveTo;\n        this.isUpgrading = !!isUpgrading;\n        this.captured = captured || null;\n        if (boardHelper.isUpgradable(piece, moveTo)) {\n            this.isUpgrading = true;\n            piece.upgrade();\n        }\n        this.kqJumping = new KqJumped();\n    }\n\n    setRen(ren: REN) {\n        ren.checkBoardStatus(this);\n        ren.kqJumped.checkKQMoved(this);\n        this.renStr = ren.toString();\n    }\n\n    get isWhiteKingJumping() {\n        return !!this.kqJumping.whiteKing;\n    }\n    get isWhiteQueenJumping() {\n        return !!this.kqJumping.whiteQueen;\n    }\n    get isBlackKingJumping() {\n        return !!this.kqJumping.blackKing;\n    }\n    get isBlackQueenJumping() {\n        return !!this.kqJumping.blackQueen;\n    }\n\n    get attacker() {\n        return this.boardStatus.attacker || null;\n    }\n\n    get winColor() {\n        return this.boardStatus.winColor || null;\n    }\n\n    get stuckColor() {\n        return this.boardStatus.stuckColor || null;\n    }\n\n    get drawCountColor() {\n        return this.boardStatus.drawCountColor || null;\n    }\n\n    get isDraw() {\n        return this.stuckColor || this.drawCountColor;\n    }\n\n    get isGameOver() {\n        return this.winColor || this.isDraw;\n    }\n\n    static fromString(str: string, ren: REN) {\n        const piece = Piece.fromCharCode(str[0]);\n        const moveFrom = Point.fromIndexCode(str.substr(1, 2));\n        const moveTo = Point.fromIndexCode(str.substr(3, 2));\n        const move = new Move({\n            piece,\n            moveFrom,\n            moveTo,\n        });\n        const killIndex = str.indexOf(PIECE_FLAG_KILL);\n        if (!!~killIndex) {\n            const gyIndex = Number(str.substr(killIndex + 1).match(/^(\\d+)/)[1]);\n            const capturedPiece = ren.graveyard.get(gyIndex);\n            if (!capturedPiece) {\n                throw new Error('Invalid captured index');\n            }\n            move.captured = new Captured({\n                fromBoardPoint: moveTo,\n                toGraveyardPoint: Point.fromIndexGraveyardIndex(gyIndex),\n                piece: capturedPiece,\n            });\n\n        }\n        const jumpingIndex = str.indexOf(PIECE_FLAG_JUMP);\n        if (!!~jumpingIndex) {\n            const n = Number(str.substr(jumpingIndex + 1).match(/^(\\d+)/)[1]);\n            move.kqJumping = KqJumped.fromNumber(n);\n        }\n        const startCountingIndex = str.indexOf(PIECE_FLAG_START_COUNTING);\n        if (!!~startCountingIndex) {\n            move.startCountingFrom = Number(str.substr(startCountingIndex + 1).match(/^(\\d+)/)[1]);\n        }\n        move.setRen(ren);\n        return move;\n    }\n    toString() {\n        const pCode = this.piece.pieceCharCode;\n        const fIndexCode = this.moveFrom.indexCode;\n        const tIndexCode = this.moveTo.indexCode;\n        let flags = '';\n        if (this.captured) {\n            flags += PIECE_FLAG_KILL + this.captured.toGraveyardPoint.index;\n\n        }\n        if (this.kqJumping.isJumped) {\n            flags += PIECE_FLAG_JUMP + this.kqJumping.toNumber();\n        }\n        if (this.isUpgrading) {\n            flags += PIECE_FLAG_UPGRADE;\n        }\n        if (this.startCountingFrom) {\n            flags += PIECE_FLAG_START_COUNTING + this.startCountingFrom;\n        }\n        return `${pCode}${fIndexCode}${tIndexCode}${flags}`;\n    }\n\n    getJumpingMessage(isEnglish?: boolean) {\n        let jump = '';\n        if (isEnglish) {\n            if (this.isWhiteKingJumping) {\n                jump += ' white king jumping';\n            }\n            if (this.isWhiteQueenJumping) {\n                jump += ' white queen jumping';\n            }\n            if (this.isBlackKingJumping) {\n                jump += ' black king jumping';\n            }\n            if (this.isBlackQueenJumping) {\n                jump += ' black queen jumping';\n            }\n        } else {\n            if (this.isWhiteKingJumping) {\n                jump += ' ស្តេច​ស​ភ្លោះ';\n            }\n            if (this.isWhiteQueenJumping) {\n                jump += ' នាង​ស​ភ្លោះ';\n            }\n            if (this.isBlackKingJumping) {\n                jump += ' ស្តេច​ខ្មៅ​ភ្លោះ';\n            }\n            if (this.isBlackQueenJumping) {\n                jump += ' នាង​ខ្មៅ​ភ្លោះ';\n            }\n        }\n        return jump;\n    }\n    getMessage(isEnglish?: boolean) {\n        if (isEnglish) {\n            let captured = '';\n            if (this.captured) {\n                captured = ` captures ${this.captured.piece.titleEnglish}`;\n            }\n            const upgrade = this.isUpgrading ? ' transforms' : '';\n            const jump = this.getJumpingMessage(isEnglish);\n            return `${this.piece.titleEnglish} moved from ${this.moveFrom.titleEnglish} to ${this.moveTo.titleEnglish}${upgrade}${captured} ${jump}`;\n        } else {\n            let captured = '';\n            if (this.captured) {\n                captured = ` ស៊ី${this.captured.piece.title}`;\n            }\n            const upgrade = this.isUpgrading ? ' បក' : '';\n            const jump = this.getJumpingMessage(isEnglish);\n            return `${this.piece.title} ដើរ​ពី ${this.moveFrom.title} ទៅ ${this.moveTo.title}${upgrade}${captured} ${jump}`;\n        }\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    id?: string;\n    name?: string;\n};\nexport default class Player {\n    name: string | null;\n    id: string | null;\n    constructor({ id, name }: Option) {\n        this.id = id || '';\n        this.name = name || '';\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    win?: number;\n    draw?: number;\n    lost?: number;\n};\nexport default class Result {\n    win: number;\n    draw: number;\n    lost: number;\n    constructor({ win, draw, lost }: Option) {\n        this.win = win || 0;\n        this.draw = draw || 0;\n        this.lost = lost || 0;\n    }\n\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost,\n        };\n    }\n}\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    totalSecond?: number;\n    bonusTime?: number;\n    currentWhite?: number;\n    currentBlack?: number;\n};\nexport default class Timer {\n    bonusTime: number;\n    totalSecond: number;\n    currentWhite: number;\n    currentBlack: number;\n    constructor({ totalSecond, bonusTime, currentWhite, currentBlack }: Option) {\n        this.bonusTime = bonusTime || 0;\n        this.totalSecond = totalSecond || 0;\n        this.currentWhite = currentWhite || 0;\n        this.currentBlack = currentBlack || 0;\n    }\n\n    fromJson() {\n\n    }\n\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            bonusTime: this.bonusTime,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as KPGN } from './KPGN';\nexport { default as Move } from './Move';\nexport type { Option as MoveOption } from './Move';\nexport { default as Captured } from './Captured';\nexport { CapturedPropType } from './Captured';\nexport { default as Player } from './Player';\nexport { default as Result } from './Result';\nexport { default as Timer } from './Timer';\nexport type { Option as KPGNOption } from './KPGN';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type ListenerType<T> = (data?: T) => any;\r\n\r\nexport default class EventHandler {\r\n    _onEventListeners: { [key: string]: any } = {};\r\n    _propEvent: any = [];\r\n    events: any;\r\n    _isLockProp: boolean;\r\n    constructor(options: { events: any }) {\r\n        this._onEventListeners = {};\r\n        this._propEvent = [];\r\n        this.events = options.events;\r\n    }\r\n\r\n    _checkPropEvent() {\r\n        if (this._isLockProp) {\r\n            return;\r\n        }\r\n        while (this._propEvent.length) {\r\n            const event = this._propEvent.shift();\r\n            this._checkOnEvent(event.name, event.data);\r\n        }\r\n    }\r\n\r\n    _addPropEvent(event: string, data?: any) {\r\n        this._propEvent.push({\r\n            name: event,\r\n            data,\r\n        });\r\n        this._checkPropEvent();\r\n    }\r\n\r\n    _guardEventName(eventName?: string) {\r\n        if (!eventName) {\r\n            throw new Error('invalid event name');\r\n        }\r\n    }\r\n\r\n    _checkOnEvent(eventName: string, data?: any) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].forEach((listener: ListenerType<any>) => {\r\n            listener(data);\r\n        });\r\n    }\r\n\r\n    _addOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].push(listener);\r\n    }\r\n\r\n    _removeOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        const index = this._onEventListeners[eventName].indexOf(listener);\r\n        ~index && this._onEventListeners[eventName].splice(index, 1);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","export { default as EventHandler } from './EventHandler';\nexport { ListenerType } from './EventHandler';\nexport { default as table } from './table';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\n\nexport default function asciiTable(ren: REN) {\n  const arr = ren.board.piecesMultiArray;\n  const str = '  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓';\n  const result = arr.reverse().reduce((s, subArr, i) => {\n    const rs = subArr.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n    const bottom = i === arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n    s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n    return s;\n  }, str);\n  const gyTStr = ren.graveyard.pieces.map(() => '━━━').join('┳');\n  const gyStr = ren.graveyard.pieces.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n  const gyBStr = ren.graveyard.pieces.map(() => '━━━').join('┻');\n  const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n  return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`;\n}\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\nimport PieceIndex from './PieceIndex';\nimport { DEFAULT_BOARD_STR } from './constant';\nimport { BOARD_SEPARATOR, CELL_COUNT, EMPTY_PIECE, ROW_NUMBER } from '../brain/constant';\nimport Point from './Point';\n\n/**\n * BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\n\nexport default class Board {\n    pieceIndices = Array.from({\n        length: CELL_COUNT,\n    }, (_, i) => {\n        const point = Point.fromIndex(i);\n        return new PieceIndex(point, null);\n    });\n\n    constructor(boardStr?: string) {\n        if (!boardStr) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < CELL_COUNT ||\n            !Piece.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.pieceIndices = newBoardStr.split('').map((charCode: string, i: number) => {\n            const point = Point.fromIndex(i);\n            return new PieceIndex(point, charCode === EMPTY_PIECE ? null : Piece.fromCharCode(charCode));\n        });\n    }\n\n    get piecesMultiArray() {\n        const arr: Piece[][] = [[], [], [], [], [], [], [], []];\n        this.pieceIndices.forEach((pieceIndex) => {\n            arr[pieceIndex.point.y][pieceIndex.point.x] = pieceIndex.piece;\n        });\n        return arr;\n    }\n\n    get pieces() {\n        return this.pieceIndices.map((pieceIndex) => {\n            return pieceIndex.piece;\n        });\n    }\n\n    get whiteKing() {\n        return this.pieceIndices.find((pieceIndex) => {\n            return pieceIndex.piece && pieceIndex.piece.isTypeKing && pieceIndex.piece.isColorWhite;\n        });\n    }\n\n    get blackKing() {\n        return this.pieceIndices.find((pieceIndex) => {\n            return pieceIndex.piece && pieceIndex.piece.isTypeKing && pieceIndex.piece.isColorBlack;\n        });\n    }\n\n    getKing(color: string) {\n        return Piece.isWhiteColor(color) ? this.whiteKing : this.blackKing;\n    }\n\n    compress(str: string) {\n        const reg = new RegExp(`(\\\\${EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1: any) => $1.length);\n    }\n\n    extract(str: string) {\n        return str.replace(/(\\d+)/g, ($1: any) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1,\n            }, () => EMPTY_PIECE).join('');\n        });\n    }\n\n    toStringFull(pieceIndices: PieceIndex[] = this.pieceIndices) {\n        const str = pieceIndices.map((pieceIndex, i) => {\n            const p = pieceIndex.toPieceCharCode();\n            if (i && i % ROW_NUMBER === 0 && i !== CELL_COUNT) {\n                return `${BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toStringFullNoSeparate() {\n        let str = this.toStringFull();\n        str = str.replace(/\\//g, '');\n        return str;\n    }\n\n    toString(pieceIndices?: PieceIndex[]) {\n        let str = this.toStringFull(pieceIndices);\n        str = this.compress(str);\n        return str;\n    }\n\n    getPieceAtIndex(index: number): Piece | null {\n        return this.pieceIndices[index].piece;\n    }\n\n    setPieceAtIndex(index: number, piece: Piece | null) {\n        this.pieceIndices[index].piece = piece;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { NOT_SET } from './constant';\n\n// 23.-\nexport default class CountDown {\n    countingDownFromNumber: number | null = null;\n    whiteCountingDownNumber: number | null = null;\n    blackCountingDownNumber: number | null = null;\n\n    get isCountDownWhite() {\n        return this.whiteCountingDownNumber !== null;\n    }\n    get isCountDownBlack() {\n        return this.blackCountingDownNumber !== null;\n    }\n\n    get isCountingDown() {\n        return this.countingDownFromNumber !== null;\n    }\n\n    static fromString(countdownStr: string) {\n        if (!countdownStr) {\n            countdownStr = `${NOT_SET}.${NOT_SET}@${NOT_SET}`;\n        }\n        const countDown = new CountDown();\n        const countingDown = countdownStr.split('@');\n        if (countingDown[1] !== NOT_SET) {\n            countDown.countingDownFromNumber = Number(countingDown[1]);\n        }\n        const countingDownWB = countingDown[0].split('.');\n        if (countingDownWB[0] !== NOT_SET) {\n            countDown.whiteCountingDownNumber = Number(countingDownWB[0]);\n        }\n        if (countingDownWB[1] !== NOT_SET) {\n            countDown.blackCountingDownNumber = Number(countingDownWB[1]);\n        }\n        return countDown;\n    }\n\n    toString() {\n        let str = `${this.isCountDownWhite ? this.whiteCountingDownNumber : NOT_SET}`;\n        str += `.${this.isCountDownBlack ? this.blackCountingDownNumber : NOT_SET}`;\n        str += `@${this.isCountingDown ? this.countingDownFromNumber : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\n\nexport default class Graveyard {\n    pieces: Piece[] = [];\n    get lastIndex() {\n        return this.pieces.length - 1;\n    }\n    get(index: number) {\n        return this.pieces[index];\n    }\n    removeAtIndex(index: number) {\n        if (!!this.get(index)) {\n            this.pieces.splice(index, 1);\n        }\n        return true;\n    }\n    constructor(graveyardStr?: string) {\n        if (graveyardStr) {\n            if (graveyardStr.length > 30 ||\n                !Piece.isValidPiecesString(graveyardStr, true)) {\n                throw new Error(`Invalid graveyard string ${graveyardStr}`);\n            }\n            this.pieces = graveyardStr.split('').map((charCode, i) => {\n                const p = Piece.fromCharCode(charCode);\n                if (p.isTypeKing) {\n                    throw new Error(`King cannot die graveyard:${graveyardStr}`);\n                }\n                return p;\n            });\n        }\n    }\n\n    toString() {\n        return this.pieces.map((p) => {\n            return p.pieceCharCode;\n        }).join('');\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING } from '../brain/constant';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King has attacked, this will effect jumping\n */\nexport default class KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr?: string) {\n        if (kAttackedStr) {\n            this.whiteKing = !!~kAttackedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.blackKing = !!~kAttackedStr.indexOf(PIECE_TYPE_KING);\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING, PIECE_TYPE_QUEEN } from '../brain/constant';\nimport { Move } from '../kpgn';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King or Queen has jumped, the will effect jumping\n */\nexport default class KqJumped {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    keyCodes: { [key: string]: string } = {\n        blackKing: Piece.toWhiteCharCode(PIECE_TYPE_QUEEN),\n        whiteKing: Piece.toWhiteCharCode(PIECE_TYPE_KING),\n        whiteQueen: PIECE_TYPE_KING,\n        blackQueen: PIECE_TYPE_QUEEN,\n    };\n    codeKeys: { [key: string]: string } = {\n        [Piece.toWhiteCharCode(PIECE_TYPE_QUEEN)]: 'blackKing: ',\n        [Piece.toWhiteCharCode(PIECE_TYPE_KING)]: 'whiteKing: ',\n        [PIECE_TYPE_KING]: 'whiteQueen: ',\n        [PIECE_TYPE_QUEEN]: 'blackQueen: ',\n    };\n    constructor(kqJumpedStr?: string) {\n        if (kqJumpedStr) {\n            this.whiteKing = !!~kqJumpedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.whiteQueen = !!~kqJumpedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_QUEEN));\n            this.blackKing = !!~kqJumpedStr.indexOf(PIECE_TYPE_KING);\n            this.blackQueen = !!~kqJumpedStr.indexOf(PIECE_TYPE_QUEEN);\n        }\n    }\n\n    get isJumped() {\n        return this.whiteKing || this.whiteQueen || this.blackKing || this.blackQueen;\n    }\n\n    setProp(key: string, value: boolean) {\n        (this as any)[key] = value;\n    }\n    applyJumping(propKey: string, move: Move) {\n        if (!(this as any)[propKey]) {\n            move.kqJumping.setProp(propKey, true);\n            this.setProp(propKey, true);\n        }\n    }\n\n    checkKQMoved(move: Move) {\n        if (move.attacker || move.captured) {\n            this.applyJumping('whiteKing', move);\n            this.applyJumping('blackKing', move);\n            this.applyJumping('whiteQueen', move);\n            this.applyJumping('blackQueen', move);\n        }\n        const piece = move.piece;\n        if (piece.isTypeKing) {\n            if (piece.isColorWhite) {\n                this.applyJumping('whiteKing', move);\n            } else {\n                this.applyJumping('blackKing', move);\n            }\n        } else if (piece.isTypeQueen) {\n            if (piece.isColorWhite) {\n                this.applyJumping('whiteQueen', move);\n            } else {\n                this.applyJumping('blackQueen', move);\n            }\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.whiteQueen ? Piece.toWhiteCharCode(PIECE_TYPE_QUEEN) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        str += `${this.blackQueen ? PIECE_TYPE_QUEEN : NOT_SET}`;\n        return str;\n    }\n\n    toNumber() {\n        let str = `${this.whiteKing ? 1 : 0}`;\n        str += `${this.whiteQueen ? 1 : 0}`;\n        str += `${this.blackKing ? 1 : 0}`;\n        str += `${this.blackQueen ? 1 : 0}`;\n        return parseInt(str, 2);\n    }\n    public static fromNumber(n: number) {\n        const b = ('0000' + Number(n).toString(2)).substr(-4);\n        const kqJumped = new KqJumped();\n        kqJumped.whiteKing = b[0] === '1';\n        kqJumped.whiteQueen = b[1] === '1';\n        kqJumped.blackKing = b[2] === '1';\n        kqJumped.blackQueen = b[3] === '1';\n        return kqJumped;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_COLOR_BLACK,\n    PIECE_COLOR_WHITE,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_QUEEN,\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n    PIECE_NAMES,\n    COLOR_NAMES,\n    PIECE_NAMES_ENGLISH,\n    COLOR_NAMES_ENGLISH,\n} from '../brain/constant';\nimport jsis from '../brain/jsis';\n\nexport default class Piece {\n    type: string;\n    color: string;\n    get colorOpponent() {\n        return Piece.oppositeColor(this.color);\n    }\n    get pieceCharCode() {\n        if (this.isColorWhite) {\n            return this.pieceCharCodeWhite;\n        }\n        return this.type;\n    }\n    get pieceCharCodeWhite() {\n        return Piece.toWhiteCharCode(this.type);\n    }\n\n    get title() {\n        return `${PIECE_NAMES[this.type]}${COLOR_NAMES[this.color]}`;\n    }\n    get titleEnglish() {\n        return `${COLOR_NAMES_ENGLISH[this.color]}-${PIECE_NAMES_ENGLISH[this.type]}`;\n    }\n    _isTypeEqual(type: string) {\n        return this.type === type;\n    }\n    get isTypeKing() {\n        return this._isTypeEqual(PIECE_TYPE_KING);\n    }\n    get isTypeQueen() {\n        return this._isTypeEqual(PIECE_TYPE_QUEEN);\n    }\n    get isTypeBoat() {\n        return this._isTypeEqual(PIECE_TYPE_BOAT);\n    }\n    get isTypeHorse() {\n        return this._isTypeEqual(PIECE_TYPE_HORSE);\n    }\n    get isTypeGeneral() {\n        return this._isTypeEqual(PIECE_TYPE_GENERAL);\n    }\n    get isTypeFish() {\n        return this._isTypeEqual(PIECE_TYPE_FISH);\n    }\n    get isTypeTransformedFish() {\n        return this._isTypeEqual(PIECE_TYPE_TRANSFORM_FISH);\n    }\n    get isColorBlack() {\n        return Piece.isBlackColor(this.color);\n    }\n    get isColorWhite() {\n        return Piece.isWhiteColor(this.color);\n    }\n\n\n    constructor(type: string, color: string) {\n        this.type = Piece.toNormalCharCode(type);\n        this.color = color;\n    }\n\n    static fromCharCode(charCode: string) {\n        if (!Piece.isValidPiece(charCode)) {\n            return null;\n        }\n        const color = Piece.isWhiteCharCode(charCode) ? PIECE_COLOR_WHITE : PIECE_COLOR_BLACK;\n        const type = Piece.toNormalCharCode(charCode);\n        return new Piece(type, color);\n    }\n\n    get originPiece(): Piece {\n        if (this.isTypeTransformedFish) {\n            return new Piece(PIECE_TYPE_FISH, this.color);\n        }\n        return this;\n    }\n\n    static get pieceChars() {\n        return [\n            PIECE_TYPE_BOAT,\n            PIECE_TYPE_HORSE,\n            PIECE_TYPE_GENERAL,\n            PIECE_TYPE_KING,\n            PIECE_TYPE_QUEEN,\n            PIECE_TYPE_FISH,\n            PIECE_TYPE_TRANSFORM_FISH,\n        ];\n    }\n    static get colorChars() {\n        return [\n            PIECE_COLOR_WHITE,\n            PIECE_COLOR_BLACK,\n        ];\n    }\n\n\n    static toWhiteCharCode(charCode: string) {\n        return charCode.toUpperCase();\n    }\n    static isWhiteCharCode(charCode: string) {\n        return jsis.isUpperCase(charCode);\n    }\n    static toBlackCharCode(charCode: string) {\n        return charCode.toLowerCase();\n    }\n    static toNormalCharCode(charCode: string) {\n        return Piece.toBlackCharCode(charCode);\n    }\n\n    static isValidPiece(charCode: string) {\n        return charCode !== EMPTY_PIECE;\n    }\n    static isWhiteColor(color: string) {\n        return color === PIECE_COLOR_WHITE;\n    }\n    static isBlackColor(color: string) {\n        return color === PIECE_COLOR_BLACK;\n    }\n    static oppositeColor(color: any) {\n        return Piece.isWhiteColor(color) ? PIECE_COLOR_BLACK : PIECE_COLOR_WHITE;\n    }\n\n    static isValidPiecesString(str: string, onlyPiece?: boolean) {\n        const ruler = onlyPiece ? allPiecesString.filter((c: string) => {\n            return !~[EMPTY_PIECE, BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c: string) => {\n            return !~ruler.indexOf(c);\n        });\n    }\n\n    upgrade() {\n        if (this.isTypeFish) {\n            this.type = PIECE_TYPE_TRANSFORM_FISH;\n            return true;\n        }\n        return false;\n    }\n    downgrade() {\n        if (this.isTypeTransformedFish) {\n            this.type = PIECE_TYPE_FISH;\n            return true;\n        }\n        return false;\n    }\n    clone() {\n        return Piece.fromCharCode(this.pieceCharCode);\n    }\n}\n\nconst allPiecesString: string[] = [\n    ...Piece.pieceChars,\n    ...Piece.pieceChars.map((pieceChar: string) => {\n        return Piece.toWhiteCharCode(pieceChar);\n    }),\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n];\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { EMPTY_PIECE } from '../brain/constant';\nimport jsis from '../brain/jsis';\nimport Piece from './Piece';\nimport Point from './Point';\n\nexport default class PieceIndex {\n    point: Point;\n    piece: Piece | null;\n    canMovePoints: Point[] = [];\n    constructor(point: Point, piece: Piece | null) {\n        this.point = point;\n        this.piece = piece;\n    }\n\n    toCode() {\n        return jsis.isNull(this.piece) ? `${this.piece.pieceCharCode}${this.point.indexCode}` : null;\n    }\n\n    toPieceCharCode() {\n        return jsis.isNull(this.piece) ? EMPTY_PIECE : this.piece.pieceCharCode;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport {\n    CELL_COUNT,\n    HORIZONTAL_CODE_LETTERS,\n    HORIZONTAL_NOTE_LETTERS,\n    ROW_NUMBER,\n    VERTICAL_NOTE_LETTERS,\n} from '../brain/constant';\n\nexport default class Point {\n    x: number;\n    y: number;\n    get index() {\n        return Point.xyToIndex(this.x, this.y);\n    }\n    get graveyardIndex() {\n        return this.x;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    get title() {\n        return `${HORIZONTAL_NOTE_LETTERS[this.x]}${VERTICAL_NOTE_LETTERS[this.y]}`;\n    }\n    get titleEnglish() {\n        return this.indexCode;\n    }\n    get h() {\n        return HORIZONTAL_CODE_LETTERS[this.x];\n    }\n    get v() {\n        return this.y + 1;\n    }\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n    static xyToIndex(x: number, y: number) {\n        return y * ROW_NUMBER + x;\n    }\n    static indexCodeToXY(indexCode: string) {\n        const x = HORIZONTAL_CODE_LETTERS.indexOf(indexCode[0]);\n        const y = Number(indexCode[1]) - 1;\n        return { x, y };\n    }\n    static indexCodeToIndex(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return Point.xyToIndex(x, y);\n    }\n    static fromIndexCode(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return new Point(x, y);\n    }\n    static indexToXY(index: number) {\n        const x = index % ROW_NUMBER;\n        const y = Math.floor(index / ROW_NUMBER);\n        return { x, y };\n    }\n    static fromIndex(index: number) {\n        const { x, y } = Point.indexToXY(index);\n        return new Point(x, y);\n    }\n    static fromIndexGraveyardIndex(index: number) {\n        return new Point(index, 0);\n    }\n    static isIndexInBoard(index: number) {\n        return index >= 0 && index <= CELL_COUNT - 1;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Board from './Board';\nimport KqJumped from './KqJumped';\nimport KAttacked from './KAttacked';\nimport CountDown from './CountDown';\nimport Graveyard from './Graveyard';\nimport {\n    DEFAULT_BOARD_STR,\n    STRING_COUNT,\n} from './constant';\nimport { Captured } from '../kpgn';\nimport Move from '../kpgn/Move';\nimport Point from './Point';\nimport Piece from './Piece';\nimport { PieceIndex } from '.';\nimport MoveHelper from '../brain/MoveHelper';\nimport { PIECE_COLOR_BLACK, PIECE_COLOR_WHITE } from '../brain/constant';\nimport jsis from '../brain/jsis';\n\n/**\n * Raksa-Eng Notation\n * ren: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countdown -.-|-.4> <pieces in graveyard>\n */\nexport type RENPropType = {\n    boardStr: string;\n    turnStr: string;\n    kqJumpedStr: string;\n    kAttackedStr: string;\n    countdownStr: string;\n    graveyardStr: string;\n}\nexport default class REN {\n    board: Board;\n    turn: string;\n    kqJumped: KqJumped;\n    kAttacked: KAttacked;\n    countdown: CountDown;\n    graveyard: Graveyard;\n    moveHelper: MoveHelper;\n    constructor(renProps: RENPropType) {\n        this.moveHelper = new MoveHelper();\n        this.init(renProps);\n    }\n\n    init({\n        boardStr,\n        turnStr,\n        kqJumpedStr,\n        kAttackedStr,\n        countdownStr,\n        graveyardStr }: RENPropType) {\n        // TODO: improve by moving to fromString()\n        this.board = new Board(boardStr);\n        this.turn = turnStr || PIECE_COLOR_WHITE;\n        this.kqJumped = new KqJumped(kqJumpedStr);\n        this.kAttacked = new KAttacked(kAttackedStr);\n        this.countdown = CountDown.fromString(countdownStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            let msg = `Invalid piece string board:${boardStr}`;\n            msg += `, graveyard:${graveyardStr}, count:${invalidPiecesString}`;\n            throw new Error(msg);\n        }\n        this.moveHelper = new MoveHelper();\n    }\n\n    isInvalidPieceCount() {\n        const pieces = this.board.pieceIndices.map((pos) => {\n            return pos.piece;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.originPiece;\n        });\n        const piecesCount = pieces.reduce((obj: any, p) => {\n            obj[p.pieceCharCode] = obj[p.pieceCharCode] || 0;\n            obj[p.pieceCharCode]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => {\n            return `${k}${piecesCount[k]}`;\n        }).sort().join('');\n        if (str === STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n\n    backRen(move: Move) {\n        const ren = REN.fromString(this.toString());\n        ren.moveBack(move);\n        return ren;\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const piece = this.board.getPieceAtIndex(moveFromIndex);\n        if (!piece) {\n            return null;\n        }\n        this.board.setPieceAtIndex(moveFromIndex, null);\n        const move = new Move({\n            moveFrom: Point.fromIndex(moveFromIndex),\n            moveTo: Point.fromIndex(moveToIndex),\n            piece: piece.clone(),\n        });\n        const targetPiece = this.board.getPieceAtIndex(moveToIndex);\n        if (targetPiece) {\n            this.graveyard.pieces.push(targetPiece);\n            move.captured = new Captured({\n                fromBoardPoint: Point.fromIndex(moveToIndex),\n                toGraveyardPoint: Point.fromIndex(this.graveyard.lastIndex),\n                piece: targetPiece,\n            });\n        }\n        this.board.setPieceAtIndex(moveToIndex, piece);\n        this.turn = Piece.oppositeColor(piece.color);\n        move.setRen(this);\n        return move;\n    }\n\n    moveBack(move: Move) {\n        const movedToIndex = move.moveTo.index;\n        const movedFromIndex = move.moveFrom.index;\n        const piece = this.board.getPieceAtIndex(movedToIndex);\n        this.board.setPieceAtIndex(movedToIndex, null);\n        if (!piece) {\n            return false;\n        }\n        this.board.setPieceAtIndex(movedFromIndex, piece);\n        if (move.captured) {\n            const movedToGYIndex = move.captured.toGraveyardPoint.index;\n            const capturedPiece = this.graveyard.get(movedToGYIndex);\n            this.board.setPieceAtIndex(movedToIndex, capturedPiece);\n            this.graveyard.removeAtIndex(movedToGYIndex);\n        }\n        if (move.kqJumping.whiteKing) {\n            this.kqJumped.whiteKing = false;\n        }\n        if (move.kqJumping.whiteQueen) {\n            this.kqJumped.whiteQueen = false;\n        }\n        if (move.kqJumping.blackKing) {\n            this.kqJumped.blackKing = false;\n        }\n        if (move.kqJumping.blackQueen) {\n            this.kqJumped.blackQueen = false;\n        }\n        if (move.startCountingFrom) {\n            if (move.startCountingFrom === this.countdown.blackCountingDownNumber) {\n                this.countdown.blackCountingDownNumber = null;\n            } else if (move.startCountingFrom === this.countdown.whiteCountingDownNumber) {\n                this.countdown.whiteCountingDownNumber = null;\n            }\n        }\n        this.turn = piece.color;\n        return true;\n    }\n\n    static fromString(renStr?: string) {\n        if (!renStr) {\n            renStr = DEFAULT_BOARD_STR;\n        }\n        const renArr = renStr.split(' ');\n        return new REN({\n            boardStr: renArr[0],\n            turnStr: renArr[1],\n            kqJumpedStr: renArr[2],\n            kAttackedStr: renArr[3],\n            countdownStr: renArr[4],\n            graveyardStr: renArr[5],\n        });\n    }\n\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqJumped.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countdown.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n\n    get isQueenMoved() {\n        const isQueenMoved = Piece.isWhiteColor(this.turn) && this.kqJumped.whiteQueen ||\n            Piece.isBlackColor(this.turn) && this.kqJumped.blackQueen;\n        return isQueenMoved;\n    }\n    get isKingMoved() {\n        const isKingMoved = Piece.isWhiteColor(this.turn) && this.kqJumped.whiteKing ||\n            Piece.isBlackColor(this.turn) && this.kqJumped.blackKing;\n        return isKingMoved;\n    }\n    genAllCanMoves(): PieceIndex[] {\n        const canMoves = this.moveHelper.calcCanMove({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: true,\n            genCanMoveForAnother: false,\n        });\n        return canMoves.moves;\n    }\n    isHasMoved(piece: Piece) {\n        let isHasMoved = false;\n        if ((this.kqJumped.blackKing && piece.isColorBlack && piece.isTypeKing) ||\n            (this.kqJumped.whiteKing && piece.isColorWhite && piece.isTypeKing) ||\n            (this.kqJumped.blackQueen && piece.isColorBlack && piece.isTypeQueen) ||\n            (this.kqJumped.whiteQueen && piece.isColorWhite && piece.isTypeQueen)) {\n            isHasMoved = true;\n        }\n        return isHasMoved;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const piece = this.board.getPieceAtIndex(point.index);\n        if (jsis.isNull(piece)) {\n            return [];\n        }\n        return this.moveHelper.genCanMovePointsByPiecePoint(point, piece,\n            this.board.toStringFullNoSeparate(), this.isHasMoved(piece));\n    }\n\n    checkBoardStatus(move: Move) {\n        // TODO: optimize by specific color\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        const force = false; // // force: true => weaker color has 2 pieces but force to cal count\n        if (!this.countdown.isCountingDown && (state.blackCountable || state.whiteCountable)) {\n            const countState = this.moveHelper.calCount({\n                color: state.whiteCountable ? PIECE_COLOR_WHITE : PIECE_COLOR_BLACK,\n                piecesString: this.board.toStringFullNoSeparate(),\n                force,\n            });\n            // TODO: start counting\n            console.log(countState);\n        }\n\n        const kingInDanger = state.blackKingInDanger || state.whiteKingInDanger;\n        if (kingInDanger) {\n            const pieceIndex = kingInDanger.map((point) => {\n                return new PieceIndex(point, this.board.getPieceAtIndex(point.index));\n            }).filter((pieceIndex) => {\n                return !pieceIndex.piece.isTypeKing;\n            })[0];\n            move.boardStatus.attacker = pieceIndex;\n        }\n        move.boardStatus.winColor = state.winColor;\n        move.boardStatus.stuckColor = state.stuckColor;\n        // TODO: drawCountColor\n    }\n    getWinColor(): string | null {\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        return state.winColor;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const DEFAULT_BOARD_STR = 'BHGKQGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgqkghb';\nexport const NOT_SET = '-';\nexport const PIECE_FLAG_KILL = 'x';\nexport const PIECE_FLAG_JUMP = 'j';\nexport const PIECE_FLAG_UPGRADE = 'u';\nexport const PIECE_FLAG_START_COUNTING = 'z';\nexport const EVENT_FLAG_ATTACK = 'attack';\nexport const EVENT_FLAG_WIN = 'win';\nexport const EVENT_FLAG_DRAW = 'draw';\nexport const EVENT_FLAG_START_COUNTING = 'start-counting';\nexport const EVENT_FLAG_COUNTING_DOWN = 'counting-down';\nexport const EVENT_FLAG_COUNT_DOWN_OUT = 'count-down-out';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Board } from './Board';\nexport { default as CountDown } from './CountDown';\nexport { default as Graveyard } from './Graveyard';\nexport { default as KAttacked } from './KAttacked';\nexport { default as KqJumped } from './KqJumped';\nexport { default as Piece } from './Piece';\nexport { default as PieceIndex } from './PieceIndex';\nexport { default as REN } from './REN';\nexport { RENPropType } from './REN';\nexport { default as Point } from './Point';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(303);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","renStr","ren","fromString","this","kpgn","loadKpng","option","fromJson","resetBoard","getCanMoves","genAllCanMoves","getCanMovePointsByPoint","point","validateRENStr","valid","error_number","error","message","getRENStr","toString","board","piecesMultiArray","pieces","graveyard","getKPGN","toJson","loadKpgn","kpgnJosn","options","drawAscii","turn","move","moveFromIndex","moveToIndex","moves","push","clearBoard","getHistories","title","name","version","KhmerChess","h","v","isUndefined","Number","HORIZONTAL_CODE_LETTERS","indexOf","isWhiteColor","currentTurn","init","piecesString","isQueenMoved","isKingMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","winColor","stuckColor","generateCanMoves","filter","filterPieceInBoard","whitePieces","blackPieces","genMoves","pieceIndices","forEach","pieceIndex","isHaveMoved","piece","isTypeKing","isTypeQueen","canMovePoints","genCanMovePointsByPiecePoint","cleanPieceNoMove","cleanMoves","isTrue","length","splice","checkIfKingInDanger","getKingInDanger","PIECE_COLOR_WHITE","getKingWillInDanger","PIECE_COLOR_BLACK","genWinLost","getStuck","isWhiteTurn","calcCanMove","anotherMoves","calcState","blackCountable","checkCountable","whiteCountable","calCount","color","force","checkCount","isHasMoved","index","x","y","width","height","isContainsPoint","isValidPoint","Rectangle","ROW_LAST_INDEX","mask","convertMask","point1","sign","point2","fromIndex","getCharPieceFromString","isIndexInBoard","CELL_COUNT","EMPTY_PIECE","getCharPieceInPos","getPieceByIndex","charCode","isValidPiece","fromCharCode","getPieceCanMovePoses","type","_pos","newIndex","isNull","getPieceCanMovePosesValid","_poses","n","thisPos","p","distPiece","isTypeFish","isTypeBoat","_x","_y","_n","Math","abs","_s","xyToIndex","replacePiecesStringAtIndex","substring","injectPiece","index1","index2","c","isCharPiecesInBoard","kingPos","PIECE_TYPE_KING","pieceCharCode","j","isHaveCaptured","points","str","code","getPiecesInBoard","split","ROW_NUMBER","PieceIndex","isColorWhite","extractPiecesToArray","piecesStringArr","pieceAll","isStateCount","weaker","stronger","oppositeColor","countChar","join","PIECE_TYPE_FISH","count","toukCount","PIECE_TYPE_BOAT","PIECE_TYPE_GENERAL","PIECE_TYPE_HORSE","isUpgradable","isColorBlack","BoardHelper","COLOR_NAMES","COLOR_NAMES_ENGLISH","PIECE_TYPE_QUEEN","PIECE_TYPE_TRANSFORM_FISH","PIECE_NAMES","PIECE_NAMES_ENGLISH","PIECE_COLOR_EMPTY","BOARD_SEPARATOR","ROW_FIRST_INDEX","HORIZONTAL_NOTE_LETTERS","VERTICAL_NOTE_LETTERS","HORIZONTAL_NOTE_LETTERS_ENGLISH","VERTICAL_NOTE_LETTERS_ENGLISH","Array","from","_","concat","default","jsis","isValid","isString","isNotEmpty","isValidString","isNumber","isStringNumber","isNaN","isArray","arr","isFunction","f","isObject","o","Object","isBoolean","b","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","isUpperCase","toUpperCase","fromBoardPoint","toGraveyardPoint","event","date","location","players","white","black","result","last","whiteWin","blackWin","timer","loadRENStr","loadMovesStrings","currentRen","reverse","map","moveStr","backRen","validateOption","Date","m","fromBase64","toBase64","moveFrom","moveTo","isUpgrading","captured","boardStatus","attacker","startCountingColor","countingDownColor","drawCountColor","startCountingFrom","boardHelper","upgrade","kqJumping","KqJumped","setRen","checkBoardStatus","kqJumped","checkKQMoved","whiteKing","whiteQueen","blackKing","blackQueen","isDraw","fromIndexCode","substr","Move","killIndex","PIECE_FLAG_KILL","gyIndex","match","capturedPiece","get","Error","fromIndexGraveyardIndex","jumpingIndex","PIECE_FLAG_JUMP","fromNumber","startCountingIndex","PIECE_FLAG_START_COUNTING","pCode","fIndexCode","indexCode","tIndexCode","flags","isJumped","toNumber","PIECE_FLAG_UPGRADE","getJumpingMessage","isEnglish","jump","isWhiteKingJumping","isWhiteQueenJumping","isBlackKingJumping","isBlackQueenJumping","getMessage","titleEnglish","id","win","draw","lost","totalSecond","bonusTime","currentWhite","currentBlack","_onEventListeners","_propEvent","events","_checkPropEvent","_isLockProp","shift","_checkOnEvent","data","_addPropEvent","_guardEventName","eventName","listener","_addOnEventListener","_removeOnEventListener","reduce","s","subArr","boardStr","DEFAULT_BOARD_STR","newBoardStr","extract","replace","isValidPiecesString","find","getKing","compress","reg","RegExp","$1","toStringFull","toPieceCharCode","toStringFullNoSeparate","getPieceAtIndex","setPieceAtIndex","countingDownFromNumber","whiteCountingDownNumber","blackCountingDownNumber","countdownStr","NOT_SET","countDown","CountDown","countingDown","countingDownWB","isCountDownWhite","isCountDownBlack","isCountingDown","graveyardStr","removeAtIndex","kAttackedStr","toWhiteCharCode","kqJumpedStr","keyCodes","codeKeys","setProp","key","value","applyJumping","propKey","parseInt","Piece","toNormalCharCode","pieceCharCodeWhite","_isTypeEqual","isBlackColor","isWhiteCharCode","isTypeTransformedFish","toBlackCharCode","toLowerCase","onlyPiece","ruler","allPiecesString","some","downgrade","clone","pieceChars","pieceChar","toCode","Point","indexCodeToXY","indexCodeToIndex","indexToXY","floor","renProps","moveHelper","turnStr","kAttacked","countdown","invalidPiecesString","isInvalidPieceCount","msg","piecesCount","pos","originPiece","obj","keys","k","sort","STRING_COUNT","REN","moveBack","targetPiece","Captured","lastIndex","movedToIndex","movedFromIndex","movedToGYIndex","renArr","state","countState","console","log","kingInDanger","getWinColor","EVENT_FLAG_ATTACK","EVENT_FLAG_WIN","EVENT_FLAG_DRAW","EVENT_FLAG_START_COUNTING","EVENT_FLAG_COUNTING_DOWN","EVENT_FLAG_COUNT_DOWN_OUT","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}