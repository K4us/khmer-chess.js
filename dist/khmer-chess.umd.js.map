{"version":3,"file":"khmer-chess.umd.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./KhmerChess.ts","webpack:///./brain/HVPont.ts","webpack:///./brain/MoveHelper.ts","webpack:///./brain/Rectangle.ts","webpack:///./brain/boardEventController.ts","webpack:///./brain/boardHelper.ts","webpack:///./brain/constant.ts","webpack:///./brain/genMask.ts","webpack:///./brain/index.ts","webpack:///./brain/jsis.ts","webpack:///./index.ts","webpack:///./kpgn/Captured.ts","webpack:///./kpgn/KPGN.ts","webpack:///./kpgn/Move.ts","webpack:///./kpgn/Player.ts","webpack:///./kpgn/Result.ts","webpack:///./kpgn/Timer.ts","webpack:///./kpgn/index.ts","webpack:///./other/BoardEventController.ts","webpack:///./other/EventHandler.ts","webpack:///./other/index.ts","webpack:///./other/table.ts","webpack:///./ren/Board.ts","webpack:///./ren/CountDown.ts","webpack:///./ren/Graveyard.ts","webpack:///./ren/KAttacked.ts","webpack:///./ren/KqMoved.ts","webpack:///./ren/Piece.ts","webpack:///./ren/PieceIndex.ts","webpack:///./ren/Point.ts","webpack:///./ren/REN.ts","webpack:///./ren/constant.ts","webpack:///./ren/index.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import config from '../package.json';\nimport KPGN from './kpgn/KPGN';\nimport Move from './kpgn/Move';\nimport BoardEventController, { BoardEvent } from './other/BoardEventController';\nimport { ListenerType } from './other/EventHandler';\nimport asciiTable from './other/table';\nimport { PieceIndex } from './ren';\nimport { EVENT_FLAG_ATTACK, EVENT_FLAG_WINN as EVENT_FLAG_WIN } from './ren/constant';\nimport Point from './ren/Point';\nimport REN from './ren/REN';\n\nexport default class KhmerChess {\n    static title = config.name;\n    static version = config.version;\n    kpgn: KPGN;\n    boardEventController: BoardEventController;\n    constructor(renStr?: string) {\n        const ren = REN.fromString(renStr);\n        this.kpgn = new KPGN(ren);\n        this.boardEventController = new BoardEventController();\n    }\n\n    loadKpng(option: object) {\n        this.kpgn.fromJson(option);\n    }\n\n    resetBoard() {\n        this.kpgn.ren = REN.fromString();\n    }\n\n    getCanMoves(): PieceIndex[] {\n        const pieceIndices = this.kpgn.ren.genAllCanMoves();\n        return pieceIndices;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const canMovePoints = this.kpgn.ren.getCanMovePointsByPoint(point);\n        return canMovePoints;\n    }\n\n    validateRENStr(renStr: string) {\n        try {\n            REN.fromString(renStr);\n            return { valid: true, error_number: 0, error: 'No errors.' };\n        } catch (error) {\n            return { valid: false, error_number: 1, error: error.message };\n        }\n    }\n\n    getRENStr() {\n        return this.kpgn.ren.toString();\n    }\n\n    get piecesInBoardMultiArray() {\n        return this.kpgn.ren.board.piecesMultiArray;\n    }\n\n    get piecesInBoard() {\n        return this.kpgn.ren.board.pieces;\n    }\n\n    get piecesInGraveyard() {\n        return this.kpgn.ren.graveyard.pieces;\n    }\n\n    // Khmer Portable Game Notation <file-name>.kpgn.json\n    getKPGN() {\n        return this.kpgn.toJson();\n    }\n\n    loadKpgn(kpgnJosn: any, options: any) {\n        this.kpgn = new KPGN(this.kpgn.ren);\n    }\n\n    drawAscii() {\n        return asciiTable(this.kpgn.ren);\n    }\n\n    get turn() {\n        return this.kpgn.ren.turn;\n    }\n\n    set turn(turn: string) {\n        this.kpgn.ren.turn = turn;\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const move = this.kpgn.ren.move(moveFromIndex, moveToIndex);\n        this.kpgn.moves.push(move);\n        setTimeout(() => this.checkBoardEvent(), 1);\n        return move;\n    }\n\n    /**\n     * Move all pieces to graveyard except kings\n     * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n     */\n    clearBoard() {\n        this.kpgn.ren = REN.fromString('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n    }\n\n    getHistories() {\n        return this.kpgn.moves;\n    }\n\n    checkBoardEvent() {\n        const pieceIndex = this.kpgn.latestMove.attacker;\n        if (pieceIndex) {\n            const boardEvent = new BoardEvent({\n                flag: EVENT_FLAG_ATTACK,\n                actorPieceIndex: pieceIndex,\n            });\n            this.boardEventController.fireEvent(boardEvent);\n            const winColor = this.kpgn.latestMove.winColor;\n            if (winColor) {\n                const boardEvent = new BoardEvent({\n                    flag: EVENT_FLAG_WIN,\n                    actorPieceIndex: pieceIndex,\n                });\n                this.boardEventController.fireEvent(boardEvent);\n            }\n        }\n    }\n    addBoardEventListener(listener: ListenerType<BoardEvent>) {\n        this.boardEventController.addBoardEventListener(listener);\n    }\n    removeBoardEventListener(listener: ListenerType<BoardEvent>) {\n        this.boardEventController.removeBoardEventListener(listener);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { HORIZONTAL_CODE_LETTERS } from './constant';\nimport jsis from './jsis';\n\nexport default class HVPont {\n    h: string;\n    v: number;\n    get x() {\n        return HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n    }\n    get y() {\n        return this.v - 1;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    constructor(h: string, v?: string | number) {\n        if (jsis.isUndefined(v)) {\n            h = h[0];\n            v = h[1];\n        }\n        this.h = h;\n        this.v = Number(v);\n    }\n\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from '../ren/Piece';\nimport PieceIndex from '../ren/PieceIndex';\nimport Point from '../ren/Point';\nimport boardHelper from './boardHelper';\nimport { PIECE_COLOR_BLACK, PIECE_COLOR_WHITE } from './constant';\n// abcdecbaooooooooffffffffoooooooooooooooommmmmmmmoooooooohijlkjih\nexport type OptionsType = {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n};\nexport type CalCountPropsType = {\n    piecesString: string;\n    force: boolean;\n};\nexport default class MoveHelper implements OptionsType {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n\n    whiteMoves: PieceIndex[];\n    blackMoves: PieceIndex[];\n    whiteKingInDanger: Point[] | null;\n    whiteKingWillInDanger: Point[] | null;\n    blackKingInDanger: Point[] | null;\n    blackKingWillInDanger: Point[] | null;\n    winColor: string | null;\n    stuckColor: string | null;\n\n    get isWhiteTurn() {\n        return Piece.isWhiteColor(this.currentTurn);\n    }\n    init(option: OptionsType) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isQueenMoved = option.isQueenMoved;\n        this.isKingMoved = option.isKingMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieceIndices: PieceIndex[]) => {\n            pieceIndices.forEach((pieceIndex) => {\n                let isHaveMoved = this.isKingMoved;\n                if (!pieceIndex.piece.isTypeKing) {\n                    isHaveMoved = pieceIndex.piece.isTypeQueen ? this.isQueenMoved : false;\n                }\n                const canMovePoints = this.genCanMovePointsByPiecePoint(\n                    pieceIndex.point,\n                    pieceIndex.piece,\n                    this.piecesString,\n                    isHaveMoved\n                );\n                pieceIndex.canMovePoints = canMovePoints;\n            });\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces: any[]) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMovePoints.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (this.isWhiteTurn && !this.whiteMoves.length) {\n            this.stuckColor = PIECE_COLOR_WHITE;\n        } else if (!this.isWhiteTurn && !this.blackMoves.length) {\n            this.stuckColor = PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves: PieceIndex[] = [];\n        if (this.genCanMove) {\n            moves = this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves: PieceIndex[] = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = !this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n\n    calcState(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n            blackCountable: boardHelper.checkCountable(\n                PIECE_COLOR_BLACK,\n                this.piecesString\n            ),\n            whiteCountable: boardHelper.checkCountable(\n                PIECE_COLOR_WHITE,\n                this.piecesString\n            ),\n        };\n    }\n\n    calCount(option: CalCountPropsType) {\n        return {\n            countingBlack: boardHelper.checkCount(\n                PIECE_COLOR_BLACK,\n                option.piecesString, option.force\n            ),\n            countingWhite: boardHelper.checkCount(\n                PIECE_COLOR_WHITE,\n                option.piecesString, option.force\n            ),\n        };\n    }\n\n    genCanMovePointsByPiecePoint(point: Point, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        return boardHelper.genCanMovePointsByPiecePoint(\n            point.index,\n            piece,\n            piecesString,\n            isHasMoved\n        );\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { Point } from '../ren';\nimport { ROW_LAST_INDEX } from './constant';\n\nexport default class Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    isContainsPoint(point: Point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n\n    static isValidPoint(point: Point) {\n        return new Rectangle(0, 0, ROW_LAST_INDEX, ROW_LAST_INDEX).isContainsPoint(point);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import EventHandler from '../other/EventHandler';\r\n\r\nconst TRIGGER_MOVE = 'trigger-move';\r\n\r\nexport default class BoardEventController extends EventHandler {\r\n    constructor() {\r\n        super({\r\n            events: {\r\n                TRIGGER_MOVE,\r\n            },\r\n        });\r\n    }\r\n\r\n    removeOnTriggerMoveEventListener(listener: any) {\r\n        this._removeOnEventListener(TRIGGER_MOVE, listener);\r\n    }\r\n\r\n    addOnTriggerMoveEventListener(listener: any) {\r\n        this._addOnEventListener(TRIGGER_MOVE, listener);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","import jsis from './jsis';\nimport genMask from './genMask';\nimport {\n    PIECE_COLOR_WHITE,\n    PIECE_COLOR_BLACK,\n    EMPTY_PIECE,\n    ROW_NUMBER,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    CELL_COUNT,\n} from './constant';\nimport Point from '../ren/Point';\nimport Piece from '../ren/Piece';\nimport Rectangle from './Rectangle';\nimport { PieceIndex } from '../ren';\n\nconst mask = genMask();\n\nclass BoardHelper {\n    getCharPieceFromString(piecesString: string, index: number) {\n        if (Point.isIndexInBoard(index) && piecesString.length === CELL_COUNT) {\n            return piecesString[index];\n        }\n        return EMPTY_PIECE;\n    }\n    getCharPieceInPos(index: number, piecesString: string) {\n        return this.getCharPieceFromString(piecesString, index);\n    }\n    getPieceByIndex(index: number, piecesString: string): {\n        isValidPiece: boolean, piece: Piece | null\n    } {\n        const charCode = this.getCharPieceInPos(index, piecesString);\n        return {\n            isValidPiece: Piece.isValidPiece(charCode),\n            piece: Piece.fromCharCode(charCode),\n        };\n    }\n    convertMask = (point1: Point, index: number, color: string) => {\n        const sign = Piece.isWhiteColor(color) ? 1 : -1;\n        const point2 = Point.fromIndex(index);\n        point1.x = point1.x * sign + point2.x;\n        point1.y = point1.y * sign + point2.y;\n        return Rectangle.isValidPoint(point1) ? point1.index : null;\n    };\n    getPieceCanMovePoses(index: number, piece: Piece) {\n        const pieceIndices: number[] = [];\n        mask[piece.type].forEach((_pos: number[]) => {\n            const newIndex = this.convertMask(new Point(_pos[0], _pos[1]), index, piece.color);\n            if (!jsis.isNull(newIndex)) {\n                pieceIndices.push(newIndex);\n            }\n        });\n        return pieceIndices;\n    }\n    getPieceCanMovePosesValid(index: number, piece: Piece, piecesString: string) {\n        const _poses = this.getPieceCanMovePoses(index, piece);\n        const pieceIndices = [];\n        const n = _poses.length;\n        const thisPos = Point.fromIndex(index);\n        for (let i = 0; i < n; i++) {\n            let p = Point.fromIndex(_poses[i]);\n            const distPiece = this.getPieceByIndex(p.index, piecesString);\n            if (distPiece.isValidPiece) {\n                if (piece.color === distPiece.piece.color ||\n                    (piece.isTypeFish && p.x === thisPos.x)) {\n                    p = null;\n                }\n            } else {\n                if (piece.isTypeFish && p.x !== thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && piece.isTypeBoat) {\n                const _x = thisPos.x;\n                const _y = thisPos.y;\n                if (p.x === thisPos.x) {\n                    let _n = Math.abs(p.y - thisPos.y);\n                    const _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x, _y + _s * _n), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    let _n = Math.abs(p.x - thisPos.x);\n                    const _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x + _s * _n, _y), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                pieceIndices.push(_poses[i]);\n            }\n        }\n        return pieceIndices;\n    }\n    replacePiecesStringAtIndex(piecesString: string, charCode: string, index: number) {\n        return piecesString.substring(0, index) + charCode + piecesString.substring(index + 1);\n    }\n    injectPiece(piecesString: string, index1: number, index2: number) {\n        const c = piecesString[index1];\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesStringAtIndex(piecesString, EMPTY_PIECE, index1);\n        piecesString = this.replacePiecesStringAtIndex(piecesString, c, index2);\n        return piecesString;\n    }\n    getKingWillInDanger(color: string, piecesString: string) {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color &&\n                p.piece.isTypeBoat) {\n                const _poses = this.getPieceCanMovePoses(i, p.piece);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getKingInDanger(color: string, piecesString: string): Point[] | null {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color) {\n                const _poses = this.getPieceCanMovePosesValid(i, p.piece, piecesString);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    genCanMovePointsByPiecePoint(index: number, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        const _poses = this.getPieceCanMovePosesValid(index, piece, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (piece.isTypeKing) {\n            if (!isHaveCaptured && !isHasMoved) {\n                let p = this.convertMask(new Point(2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(new Point(-2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (piece.isTypeQueen) {\n            if (!isHaveCaptured && !isHasMoved) {\n                const p = this.convertMask(new Point(-0, 2), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const points: Point[] = [];\n        for (let i = 0; i < n; i++) {\n            const str = this.injectPiece(piecesString, index, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(piece.color, str))) {\n                points.push(Point.fromIndex(_poses[i]));\n            }\n        }\n        return points;\n    }\n    isCharPiecesInBoard(code: string, piecesString: string) {\n        return !!~piecesString.indexOf(code);\n    }\n    getPiecesInBoard(piecesString: string) {\n        return piecesString.split('').filter((charCode: string) => {\n            return Piece.isValidPiece(charCode);\n        });\n    }\n    isHaveCaptured(piecesString: string) {\n        return this.getPiecesInBoard(piecesString).length < ROW_NUMBER * 4;\n    }\n    filterPieceInBoard(piecesString: string) {\n        const whitePieces: PieceIndex[] = [];\n        const blackPieces: PieceIndex[] = [];\n        for (let i = 0; i < piecesString.length; i++) {\n            const charCode = piecesString[i];\n            if (Piece.isValidPiece(charCode)) {\n                const pieceIndex = new PieceIndex(Point.fromIndex(i), Piece.fromCharCode(charCode));\n                if (pieceIndex.piece.isColorWhite) {\n                    whitePieces.push(pieceIndex);\n                } else {\n                    blackPieces.push(pieceIndex);\n                }\n            }\n        }\n        return {\n            whitePieces,\n            blackPieces,\n        };\n    }\n    extractPiecesToArray(piecesString: string) {\n        const piecesStringArr = piecesString.split('');\n        const pieceAll: { [key: string]: string[] } = {\n            [PIECE_COLOR_BLACK]: [],\n            [PIECE_COLOR_WHITE]: [],\n        };\n        piecesStringArr.forEach((charCode: string) => {\n            if (charCode === EMPTY_PIECE) {\n                return;\n            }\n            const piece = Piece.fromCharCode(charCode);\n            pieceAll[piece.color].push(piece.type);\n        });\n        return pieceAll;\n    }\n    isStateCount(c: string, piecesString: string) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    }\n    checkCountable(color: string, piecesString: string) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    }\n    checkCount(color: string, piecesString: string, force: boolean) {\n        const countChar = (str: string[], c: string) => {\n            return str.join('').split(c).length - 1;\n        };\n        const charExist = (str: string[], c: string) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, PIECE_TYPE_FISH)) {\n                let count = 64;\n                const toukCount = countChar(stronger, PIECE_TYPE_BOAT);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, PIECE_TYPE_HORSE) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL)) {\n                    count = 44;\n                }\n                return [stronger.length + 1, count];\n            }\n            return [0, 64];\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return [0, 64];\n        }\n        return null;\n    }\n    isUpgradable(piece: Piece, point: Point) {\n        if (piece.isTypeFish) {\n            if (piece.isColorBlack && point.y <= 2) {\n                return true;\n            }\n            if (piece.isColorWhite && point.y >= 5) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nexport default new BoardHelper();\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export const PIECE_COLOR_WHITE = 'w';\nexport const PIECE_COLOR_BLACK = 'b';\nexport const COLOR_NAMES: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'ខ្មៅ',\n    [PIECE_COLOR_WHITE]: 'ស',\n};\nexport const COLOR_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'black',\n    [PIECE_COLOR_WHITE]: 'white',\n};\n\nexport const PIECE_TYPE_BOAT = 'b'; // Boat\nexport const PIECE_TYPE_HORSE = 'h'; // Horse\nexport const PIECE_TYPE_GENERAL = 'g'; // General\nexport const PIECE_TYPE_KING = 'k'; // King\nexport const PIECE_TYPE_QUEEN = 'q'; // Queen\nexport const PIECE_TYPE_FISH = 'f'; // Fish\nexport const PIECE_TYPE_TRANSFORM_FISH = 't'; // Transform fish\nexport const PIECE_NAMES: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'ទូក',\n    [PIECE_TYPE_HORSE]: 'សេះ',\n    [PIECE_TYPE_GENERAL]: 'គោល',\n    [PIECE_TYPE_KING]: 'ស្តេច',\n    [PIECE_TYPE_QUEEN]: 'នាង',\n    [PIECE_TYPE_FISH]: 'ត្រី',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'ត្រីបក',\n};\nexport const PIECE_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'boat',\n    [PIECE_TYPE_HORSE]: 'horse',\n    [PIECE_TYPE_GENERAL]: 'general',\n    [PIECE_TYPE_KING]: 'king',\n    [PIECE_TYPE_QUEEN]: 'queen',\n    [PIECE_TYPE_FISH]: 'fish',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'transformed-fish',\n};\nexport const EMPTY_PIECE = '.';\nexport const PIECE_COLOR_EMPTY = '.';\nexport const BOARD_SEPARATOR = '/';\n\nexport const ROW_NUMBER = 8;\nexport const ROW_FIRST_INDEX = 0;\nexport const ROW_LAST_INDEX = 7;\nexport const CELL_COUNT = ROW_NUMBER * ROW_NUMBER;\n\nexport const HORIZONTAL_CODE_LETTERS = 'abcdefgh';\nexport const HORIZONTAL_NOTE_LETTERS = ['ក', 'ខ', 'គ', 'ឃ', 'ង', 'ច', 'ឆ', 'ជ'];\nexport const VERTICAL_NOTE_LETTERS = ['១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩', '១០',\n    '១១', '១២', '១៣', '១៤', '១៥', '១៦', '១៧', '១៨', '១៩', '២០',\n    '២១', '២២', '២៣', '២៤', '២៥', '២៦', '២៧', '២៨', '២៩', '៣០'];\nexport const HORIZONTAL_NOTE_LETTERS_ENGLISH = 'abcdefgh';\nexport const VERTICAL_NOTE_LETTERS_ENGLISH = Array.from({ length: 30 }, (_, i) => `${i + 1}`);\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_QUEEN,\n} from './constant';\n\nexport default function genMask() {\n    const mask: { [key: string]: number[][] } = {};\n    mask[PIECE_TYPE_BOAT] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[PIECE_TYPE_HORSE] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[PIECE_TYPE_QUEEN] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_GENERAL] = mask[PIECE_TYPE_QUEEN].concat([\n        [0, 1],\n    ]);\n    mask[PIECE_TYPE_KING] = mask[PIECE_TYPE_GENERAL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[PIECE_TYPE_FISH] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_TRANSFORM_FISH] = mask[PIECE_TYPE_QUEEN];\n    return mask;\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Rectangle } from './Rectangle';\nexport { default as boardEventController } from './boardEventController';\nexport { default as boardHelper } from './boardHelper';\nexport { default as genMask } from './genMask';\nexport { default as jsis } from './jsis';\nexport { default as HVPont } from './HVPont';\nexport { default as MoveHelper } from './MoveHelper';\nexport { OptionsType, CalCountPropsType } from './MoveHelper';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","const jsis = {\n    isValid(v: any) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v: any) {\n        return v === null;\n    },\n    isUndefined(v: any) {\n        return typeof v === 'undefined';\n    },\n    isString(str: any) {\n        return this.isValid(str) && typeof str === 'string';\n    },\n    isNotEmpty(str: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isValidString(str) && str != '';\n    },\n    isNumber(n: any) {\n        return this.isValid(n) && typeof n === 'number';\n    },\n    isStringNumber(n: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isString(n) && n != '' && !isNaN(Number(n));\n    },\n    isArray(arr: any) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f: any) {\n        return this.isValid(f) && typeof f === 'function';\n    },\n    isObject(o: any) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b: any) {\n        return this.isValid(b) && typeof b === 'boolean';\n    },\n    isTrue(b: any) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b: any) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p: { x: any; y: any; }) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size: { width: any; height: any; }) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n: number) {\n        return !!(n % 2);\n    },\n    isEven(n: any) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str: string) {\n        return str === str.toUpperCase();\n    },\n};\n\nexport default jsis;\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export * from './brain';\nexport * from './kpgn';\nexport * from './ren';\nexport * from './other';\nexport { default as KhmerChess } from './KhmerChess';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\n\nexport type CapturedPropType = {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n};\nexport default class Captured implements CapturedPropType {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n    constructor({ piece, fromBoardPoint: fromBoardPoint, toGraveyardPoint: toGraveyardPoint }: CapturedPropType) {\n        this.piece = piece;\n        this.fromBoardPoint = fromBoardPoint;\n        this.toGraveyardPoint = toGraveyardPoint;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\nimport Move from './Move';\nimport Player from './Player';\nimport Result from './Result';\nimport Timer from './Timer';\nimport type { Option as TimeOption } from './Timer';\nimport type { Option as ResultOption } from './Result';\nimport type { Option as PlayerOption } from './Player';\n\nexport type Option = {\n    event?: string;\n    date?: string;\n    location?: string;\n    players?: {\n        white: PlayerOption;\n        black: PlayerOption;\n    };\n    result?: {\n        last: {\n            whiteWin: boolean;\n            blackWin: boolean;\n        };\n        white: ResultOption;\n    };\n    moves?: string[];\n    ren?: string;\n    timer?: TimeOption;\n};\n\nexport default class KPGN {\n    event: string = '';\n    date: Date | null = null;\n    location: string = '';\n    players = {\n        white: new Player({}),\n        black: new Player({}),\n    };\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false,\n        },\n        white: new Result({}),\n    };\n\n    moves: Move[];\n    ren: REN;\n    timer: Timer = new Timer({});\n\n    constructor(ren: REN) {\n        this.ren = ren;\n        this.moves = [];\n    }\n\n    get latestMove() {\n        return this.moves[this.moves.length - 1] || null;\n    }\n\n    loadRENStr(renStr?: string) {\n        this.ren = REN.fromString(renStr);\n    }\n\n    loadMovesStrings(moves: string[]) {\n        let currentRen = this.ren;\n        this.moves = moves.reverse().map((moveStr) => {\n            const move = Move.fromMovedString(moveStr, currentRen);\n            currentRen = currentRen.backRen(move);\n            return move;\n        }).reverse();\n    }\n\n    validateOption(option: Option) {\n        // TODO: throw when invalid option's properties\n    }\n\n    fromJson(option: Option) {\n        this.validateOption(option);\n        const { ren, moves, timer, result,\n            players, location, date, event } = option;\n\n        this.event = event || this.event;\n        this.date = date ? new Date(date) : this.date;\n        this.location = location || this.location;\n        if (players) {\n            this.players = {\n                white: new Player(players.white),\n                black: new Player(players.black),\n            };\n        }\n        if (result) {\n            this.result = {\n                last: result.last,\n                white: new Result(result.white),\n            };\n        }\n        this.ren = REN.fromString(ren || '');\n        this.loadMovesStrings(moves || []);\n        this.timer = new Timer(timer || {});\n    }\n\n    toJson(): Option {\n        return {\n            event: this.event,\n            date: this.date ? this.date.toString() : '',\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin,\n                },\n                white: this.result.white.toJson(),\n            },\n            timer: this.timer.toJson(),\n            moves: this.moves.map((m) => m.toString()),\n            ren: this.ren.toString(),\n        };\n    }\n\n    fromBase64(str: string) {\n        // TODO:\n    }\n    toBase64() {\n        // TODO:\n        return '';\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport { boardHelper } from '../brain';\nimport { PieceIndex, REN } from '../ren';\nimport {\n    PIECE_FLAG_JUMP,\n    PIECE_FLAG_KILL,\n    PIECE_FLAG_UPGRADE,\n} from '../ren/constant';\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\nimport Captured from './Captured';\n\nexport type Option = {\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isJumping?: boolean; // King or Queen would jump on first start\n    isUpgrading?: boolean;\n    captured?: Captured;\n};\nexport default class Move {\n    renStr: string;\n    boardStatus: {\n        attacker?: PieceIndex,\n        winColor?: string,\n        stuckColor?: string,\n        drawCountColor?: string,\n    } = {};\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isJumping: boolean;\n    isUpgrading: boolean;\n    captured: Captured | null;\n    constructor({ piece, moveFrom, moveTo, isJumping,\n        isUpgrading, captured,\n    }: Option) {\n        this.piece = piece;\n        this.moveFrom = moveFrom;\n        this.moveTo = moveTo;\n        this.isJumping = !!isJumping;\n        this.isUpgrading = !!isUpgrading;\n        this.captured = captured || null;\n        if (boardHelper.isUpgradable(piece, moveTo)) {\n            this.isUpgrading = true;\n            piece.upgrade();\n        }\n    }\n\n    setRen(ren: REN) {\n        this.renStr = ren.toString();\n        // TODO: preload stuck, draw\n        this.boardStatus.attacker = ren.getAttacker();\n        if (this.boardStatus.attacker) {\n            this.boardStatus.winColor = ren.getWinColor();\n        }\n    }\n\n    get attacker() {\n        return this.boardStatus.attacker || null;\n    }\n\n    get winColor() {\n        return this.boardStatus.winColor || null;\n    }\n\n    get stuckColor() {\n        return this.boardStatus.stuckColor || null;\n    }\n\n    get drawCountColor() {\n        return this.boardStatus.drawCountColor || null;\n    }\n\n    get isDraw() {\n        return this.stuckColor || this.drawCountColor;\n    }\n\n    get isGameOver() {\n        return this.winColor || this.isDraw;\n    }\n\n    static fromMovedString(str: string, ren: REN) {\n        const piece = Piece.fromCharCode(str[0]);\n        const moveFrom = Point.fromIndexCode(str.substr(1, 2));\n        const moveTo = Point.fromIndexCode(str.substr(3, 2));\n        const move = new Move({\n            piece,\n            moveFrom,\n            moveTo,\n        });\n        if (str[5] === PIECE_FLAG_KILL) {\n            const gyIndex = Number(str.substr(6).match(/^(\\d+)/)[1]);\n            const capturedPiece = ren.graveyard.get(gyIndex);\n            if (!capturedPiece) {\n                throw new Error('Invalid captured index');\n            }\n            move.captured = new Captured({\n                fromBoardPoint: moveTo,\n                toGraveyardPoint: Point.fromIndexGraveyardIndex(gyIndex),\n                piece: capturedPiece,\n            });\n\n        } else if (str[5] === PIECE_FLAG_JUMP) {\n            move.isJumping = true;\n        }\n        move.setRen(ren);\n        return move;\n    }\n    toString() {\n        const pCode = this.piece.pieceCharCode;\n        const fIndexCode = this.moveFrom.indexCode;\n        const tIndexCode = this.moveTo.indexCode;\n        let flags = '';\n        if (this.captured) {\n            flags += PIECE_FLAG_KILL + this.captured.toGraveyardPoint.index;\n\n        }\n        if (this.isJumping) {\n            flags += PIECE_FLAG_JUMP;\n        }\n        if (this.isUpgrading) {\n            flags += PIECE_FLAG_UPGRADE;\n        }\n        return `${pCode}${fIndexCode}${tIndexCode}${flags}`;\n    }\n\n    toJson() {\n        return {\n            fromIndex: this.moveFrom.index,\n            toIndex: this.moveTo.index,\n            isJumping: this.isJumping,\n            capturedPiece: this.captured ? this.captured.piece.pieceCharCode : null,\n        };\n    }\n\n    getMessage(isEnglish?: boolean) {\n        if (isEnglish) {\n            let captured = '';\n            if (this.captured) {\n                captured = ` captures ${this.captured.piece.titleEnglish}`;\n            }\n            const upgrade = this.isUpgrading ? ' transforms' : '';\n            return `${this.piece.titleEnglish} moved from ${this.moveFrom.titleEnglish} to ${this.moveTo.titleEnglish}${upgrade}${captured}`;\n        } else {\n            let captured = '';\n            if (this.captured) {\n                captured = ` ស៊ី${this.captured.piece.title}`;\n            }\n            const upgrade = this.isUpgrading ? ' បក' : '';\n            return `${this.piece.title} ដើរ​ពី ${this.moveFrom.title} ទៅ ${this.moveTo.title}${upgrade}${captured}`;\n        }\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    id?: string;\n    name?: string;\n};\nexport default class Player {\n    name: string | null;\n    id: string | null;\n    constructor({ id, name }: Option) {\n        this.id = id || '';\n        this.name = name || '';\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    win?: number;\n    draw?: number;\n    lost?: number;\n};\nexport default class Result {\n    win: number;\n    draw: number;\n    lost: number;\n    constructor({ win, draw, lost }: Option) {\n        this.win = win || 0;\n        this.draw = draw || 0;\n        this.lost = lost || 0;\n    }\n\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost,\n        };\n    }\n}\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    totalSecond?: number;\n    bonusTime?: number;\n    currentWhite?: number;\n    currentBlack?: number;\n};\nexport default class Timer {\n    bonusTime: number;\n    totalSecond: number;\n    currentWhite: number;\n    currentBlack: number;\n    constructor({ totalSecond, bonusTime, currentWhite, currentBlack }: Option) {\n        this.bonusTime = bonusTime || 0;\n        this.totalSecond = totalSecond || 0;\n        this.currentWhite = currentWhite || 0;\n        this.currentBlack = currentBlack || 0;\n    }\n\n    fromJson() {\n\n    }\n\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            bonusTime: this.bonusTime,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as KPGN } from './KPGN';\nexport { default as Move } from './Move';\nexport type { Option as MoveOption } from './Move';\nexport { default as Captured } from './Captured';\nexport { CapturedPropType } from './Captured';\nexport { default as Player } from './Player';\nexport { default as Result } from './Result';\nexport { default as Timer } from './Timer';\nexport type { Option as KPGNOption } from './KPGN';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\r\n    EVENT_FLAG_ATTACK,\r\n    EVENT_FLAG_WINN,\r\n    PieceIndex,\r\n} from '../ren';\r\nimport EventHandler, { ListenerType } from './EventHandler';\r\n\r\nexport class BoardEvent {\r\n    flag: string;\r\n    actorPieceIndex: PieceIndex;\r\n    get isAttack() {\r\n        return this.flag === EVENT_FLAG_ATTACK;\r\n    }\r\n    get isWin() {\r\n        return this.flag === EVENT_FLAG_WINN;\r\n    }\r\n    constructor({ flag, actorPieceIndex }:\r\n        { flag: string, actorPieceIndex: PieceIndex }) {\r\n        this.flag = flag;\r\n        this.actorPieceIndex = actorPieceIndex;\r\n    }\r\n}\r\nexport default class BoardEventController extends EventHandler {\r\n    static EVENT = 'event';\r\n    constructor() {\r\n        super({\r\n            events: {\r\n                EVENT: BoardEventController.EVENT,\r\n            },\r\n        });\r\n    }\r\n    fireEvent(boardEvent: BoardEvent) {\r\n        this._addPropEvent(BoardEventController.EVENT, boardEvent);\r\n    }\r\n    addBoardEventListener(listener: ListenerType<BoardEvent>) {\r\n        this._addOnEventListener(BoardEventController.EVENT, listener);\r\n    }\r\n    removeBoardEventListener(listener: ListenerType<BoardEvent>) {\r\n        this._removeOnEventListener(BoardEventController.EVENT, listener);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","export type ListenerType<T> = (data?: T) => any;\r\n\r\nexport default class EventHandler {\r\n    _onEventListeners: { [key: string]: any } = {};\r\n    _propEvent: any = [];\r\n    events: any;\r\n    _isLockProp: boolean;\r\n    constructor(options: { events: any }) {\r\n        this._onEventListeners = {};\r\n        this._propEvent = [];\r\n        this.events = options.events;\r\n    }\r\n\r\n    _checkPropEvent() {\r\n        if (this._isLockProp) {\r\n            return;\r\n        }\r\n        while (this._propEvent.length) {\r\n            const event = this._propEvent.shift();\r\n            this._checkOnEvent(event.name, event.data);\r\n        }\r\n    }\r\n\r\n    _addPropEvent(event: string, data?: any) {\r\n        this._propEvent.push({\r\n            name: event,\r\n            data,\r\n        });\r\n        this._checkPropEvent();\r\n    }\r\n\r\n    _guardEventName(eventName?: string) {\r\n        if (!eventName) {\r\n            throw new Error('invalid event name');\r\n        }\r\n    }\r\n\r\n    _checkOnEvent(eventName: string, data?: any) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].forEach((listener: ListenerType<any>) => {\r\n            listener(data);\r\n        });\r\n    }\r\n\r\n    _addOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].push(listener);\r\n    }\r\n\r\n    _removeOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        const index = this._onEventListeners[eventName].indexOf(listener);\r\n        ~index && this._onEventListeners[eventName].splice(index, 1);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","export { default as EventHandler } from './EventHandler';\nexport { ListenerType } from './EventHandler';\nexport { default as BoardEventController } from './BoardEventController';\nexport { BoardEvent } from './BoardEventController';\nexport { default as table } from './table';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\n\nexport default function asciiTable(ren: REN) {\n  const arr = ren.board.piecesMultiArray;\n  const str = '  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓';\n  const result = arr.reverse().reduce((s, subArr, i) => {\n    const rs = subArr.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n    const bottom = i === arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n    s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n    return s;\n  }, str);\n  const gyTStr = ren.graveyard.pieces.map(() => '━━━').join('┳');\n  const gyStr = ren.graveyard.pieces.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n  const gyBStr = ren.graveyard.pieces.map(() => '━━━').join('┻');\n  const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n  return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`;\n}\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\nimport PieceIndex from './PieceIndex';\nimport { DEFAULT_BOARD_STR } from './constant';\nimport { BOARD_SEPARATOR, CELL_COUNT, EMPTY_PIECE, ROW_NUMBER } from '../brain/constant';\nimport Point from './Point';\n\n/**\n * BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\n\nexport default class Board {\n    pieceIndices = Array.from({\n        length: CELL_COUNT,\n    }, (_, i) => {\n        const point = Point.fromIndex(i);\n        return new PieceIndex(point, null);\n    });\n\n    constructor(boardStr?: string) {\n        if (!boardStr) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < CELL_COUNT ||\n            !Piece.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.pieceIndices = newBoardStr.split('').map((charCode: string, i: number) => {\n            const point = Point.fromIndex(i);\n            return new PieceIndex(point, charCode === EMPTY_PIECE ? null : Piece.fromCharCode(charCode));\n        });\n    }\n\n    get piecesMultiArray() {\n        const arr: Piece[][] = [[], [], [], [], [], [], [], []];\n        this.pieceIndices.forEach((pieceIndex) => {\n            arr[pieceIndex.point.y][pieceIndex.point.x] = pieceIndex.piece;\n        });\n        return arr;\n    }\n\n    get pieces() {\n        return this.pieceIndices.map((pieceIndex) => {\n            return pieceIndex.piece;\n        });\n    }\n\n    compress(str: string) {\n        const reg = new RegExp(`(\\\\${EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1: any) => $1.length);\n    }\n\n    extract(str: string) {\n        return str.replace(/(\\d+)/g, ($1: any) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1,\n            }, () => EMPTY_PIECE).join('');\n        });\n    }\n\n    toStringFull(pieceIndices: PieceIndex[] = this.pieceIndices) {\n        const str = pieceIndices.map((pieceIndex, i) => {\n            const p = pieceIndex.toPieceCharCode();\n            if (i && i % ROW_NUMBER === 0 && i !== CELL_COUNT) {\n                return `${BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toStringFullNoSeparate() {\n        let str = this.toStringFull();\n        str = str.replace(/\\//g, '');\n        return str;\n    }\n\n    toString(pieceIndices?: PieceIndex[]) {\n        let str = this.toStringFull(pieceIndices);\n        str = this.compress(str);\n        return str;\n    }\n\n    getPieceAtIndex(index: number): Piece | null {\n        return this.pieceIndices[index].piece;\n    }\n\n    setPieceAtIndex(index: number, piece: Piece | null) {\n        this.pieceIndices[index].piece = piece;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import jsis from '../brain/jsis';\nimport { NOT_SET } from './constant';\n\n// 23.-\nexport default class CountDown {\n    white: number | null = null;\n    black: number | null = null;\n    constructor(countdownStr = '') {\n        const newCountdownStr = countdownStr.split('.');\n        this.white = jsis.isStringNumber(newCountdownStr[0]) ? Number(newCountdownStr[0]) : null;\n        this.black = jsis.isStringNumber(newCountdownStr[1]) ? Number(newCountdownStr[1]) : null;\n        if (!jsis.isNull(this.white) && !jsis.isNull(this.white)) {\n            throw new Error(`Invalid countdown string ${countdownStr}`);\n        }\n    }\n\n    toString() {\n        let str = `${jsis.isNull(this.white) ? NOT_SET : this.white}`;\n        str += `.${jsis.isNull(this.black) ? NOT_SET : this.black}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\n\nexport default class Graveyard {\n    pieces: Piece[] = [];\n    get lastIndex() {\n        return this.pieces.length - 1;\n    }\n    get(index: number) {\n        return this.pieces[index];\n    }\n    removeAtIndex(index: number) {\n        if (!!this.get(index)) {\n            this.pieces.splice(index, 1);\n        }\n        return true;\n    }\n    constructor(graveyardStr?: string) {\n        if (graveyardStr) {\n            if (graveyardStr.length > 30 ||\n                !Piece.isValidPiecesString(graveyardStr, true)) {\n                throw new Error(`Invalid graveyard string ${graveyardStr}`);\n            }\n            this.pieces = graveyardStr.split('').map((charCode, i) => {\n                const p = Piece.fromCharCode(charCode);\n                if (p.isTypeKing) {\n                    throw new Error(`King cannot die graveyard:${graveyardStr}`);\n                }\n                return p;\n            });\n        }\n    }\n\n    toString() {\n        return this.pieces.map((p) => {\n            return p.pieceCharCode;\n        }).join('');\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING } from '../brain/constant';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King has attacked, this will effect jumping\n */\nexport default class KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr?: string) {\n        if (kAttackedStr) {\n            this.whiteKing = !!~kAttackedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.blackKing = !!~kAttackedStr.indexOf(PIECE_TYPE_KING);\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING, PIECE_TYPE_QUEEN } from '../brain/constant';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King or Queen has moved, the will effect jumping\n */\nexport default class KqMoved {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    constructor(kqMovedStr?: string) {\n        if (kqMovedStr) {\n            this.whiteKing = !!~kqMovedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.whiteQueen = !!~kqMovedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_QUEEN));\n            this.blackKing = !!~kqMovedStr.indexOf(PIECE_TYPE_KING);\n            this.blackQueen = !!~kqMovedStr.indexOf(PIECE_TYPE_QUEEN);\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.whiteQueen ? Piece.toWhiteCharCode(PIECE_TYPE_QUEEN) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        str += `${this.blackQueen ? PIECE_TYPE_QUEEN : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_COLOR_BLACK,\n    PIECE_COLOR_WHITE,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_QUEEN,\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n    PIECE_NAMES,\n    COLOR_NAMES,\n    PIECE_NAMES_ENGLISH,\n    COLOR_NAMES_ENGLISH,\n} from '../brain/constant';\nimport jsis from '../brain/jsis';\n\nexport default class Piece {\n    type: string;\n    color: string;\n    get colorOpponent() {\n        return Piece.oppositeColor(this.color);\n    }\n    get pieceCharCode() {\n        if (this.isColorWhite) {\n            return this.pieceCharCodeWhite;\n        }\n        return this.type;\n    }\n    get pieceCharCodeWhite() {\n        return Piece.toWhiteCharCode(this.type);\n    }\n\n    get title() {\n        return `${PIECE_NAMES[this.type]}${COLOR_NAMES[this.color]}`;\n    }\n    get titleEnglish() {\n        return `${COLOR_NAMES_ENGLISH[this.color]}-${PIECE_NAMES_ENGLISH[this.type]}`;\n    }\n    _isTypeEqual(type: string) {\n        return this.type === type;\n    }\n    get isTypeKing() {\n        return this._isTypeEqual(PIECE_TYPE_KING);\n    }\n    get isTypeQueen() {\n        return this._isTypeEqual(PIECE_TYPE_QUEEN);\n    }\n    get isTypeBoat() {\n        return this._isTypeEqual(PIECE_TYPE_BOAT);\n    }\n    get isTypeHorse() {\n        return this._isTypeEqual(PIECE_TYPE_HORSE);\n    }\n    get isTypeGeneral() {\n        return this._isTypeEqual(PIECE_TYPE_GENERAL);\n    }\n    get isTypeFish() {\n        return this._isTypeEqual(PIECE_TYPE_FISH);\n    }\n    get isTypeTransformedFish() {\n        return this._isTypeEqual(PIECE_TYPE_TRANSFORM_FISH);\n    }\n    get isColorBlack() {\n        return Piece.isBlackColor(this.color);\n    }\n    get isColorWhite() {\n        return Piece.isWhiteColor(this.color);\n    }\n\n\n    constructor(type: string, color: string) {\n        this.type = Piece.toNormalCharCode(type);\n        this.color = color;\n    }\n\n    static fromCharCode(charCode: string) {\n        if (!Piece.isValidPiece(charCode)) {\n            return null;\n        }\n        const color = Piece.isWhiteCharCode(charCode) ? PIECE_COLOR_WHITE : PIECE_COLOR_BLACK;\n        const type = Piece.toNormalCharCode(charCode);\n        return new Piece(type, color);\n    }\n\n    get originPiece(): Piece {\n        if (this.isTypeTransformedFish) {\n            return new Piece(PIECE_TYPE_FISH, this.color);\n        }\n        return this;\n    }\n\n    static get pieceChars() {\n        return [\n            PIECE_TYPE_BOAT,\n            PIECE_TYPE_HORSE,\n            PIECE_TYPE_GENERAL,\n            PIECE_TYPE_KING,\n            PIECE_TYPE_QUEEN,\n            PIECE_TYPE_FISH,\n            PIECE_TYPE_TRANSFORM_FISH,\n        ];\n    }\n    static get colorChars() {\n        return [\n            PIECE_COLOR_WHITE,\n            PIECE_COLOR_BLACK,\n        ];\n    }\n\n\n    static toWhiteCharCode(charCode: string) {\n        return charCode.toUpperCase();\n    }\n    static isWhiteCharCode(charCode: string) {\n        return jsis.isUpperCase(charCode);\n    }\n    static toBlackCharCode(charCode: string) {\n        return charCode.toLowerCase();\n    }\n    static toNormalCharCode(charCode: string) {\n        return Piece.toBlackCharCode(charCode);\n    }\n\n    static isValidPiece(charCode: string) {\n        return charCode !== EMPTY_PIECE;\n    }\n    static isWhiteColor(color: string) {\n        return color === PIECE_COLOR_WHITE;\n    }\n    static isBlackColor(color: string) {\n        return color === PIECE_COLOR_BLACK;\n    }\n    static oppositeColor(color: any) {\n        return Piece.isWhiteColor(color) ? PIECE_COLOR_BLACK : PIECE_COLOR_WHITE;\n    }\n\n    static isValidPiecesString(str: string, onlyPiece?: boolean) {\n        const ruler = onlyPiece ? allPiecesString.filter((c: string) => {\n            return !~[EMPTY_PIECE, BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c: string) => {\n            return !~ruler.indexOf(c);\n        });\n    }\n\n    upgrade() {\n        if (this.isTypeFish) {\n            this.type = PIECE_TYPE_TRANSFORM_FISH;\n            return true;\n        }\n        return false;\n    }\n    downgrade() {\n        if (this.isTypeTransformedFish) {\n            this.type = PIECE_TYPE_FISH;\n            return true;\n        }\n        return false;\n    }\n    clone() {\n        return Piece.fromCharCode(this.pieceCharCode);\n    }\n}\n\nconst allPiecesString: string[] = [\n    ...Piece.pieceChars,\n    ...Piece.pieceChars.map((pieceChar: string) => {\n        return Piece.toWhiteCharCode(pieceChar);\n    }),\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n];\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { EMPTY_PIECE } from '../brain/constant';\nimport jsis from '../brain/jsis';\nimport Piece from './Piece';\nimport Point from './Point';\n\nexport default class PieceIndex {\n    point: Point;\n    piece: Piece | null;\n    canMovePoints: Point[] = [];\n    constructor(point: Point, piece: Piece | null) {\n        this.point = point;\n        this.piece = piece;\n    }\n\n    toCode() {\n        return jsis.isNull(this.piece) ? `${this.piece.pieceCharCode}${this.point.indexCode}` : null;\n    }\n\n    toPieceCharCode() {\n        return jsis.isNull(this.piece) ? EMPTY_PIECE : this.piece.pieceCharCode;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport {\n    CELL_COUNT,\n    HORIZONTAL_CODE_LETTERS,\n    HORIZONTAL_NOTE_LETTERS,\n    ROW_NUMBER,\n    VERTICAL_NOTE_LETTERS,\n} from '../brain/constant';\n\nexport default class Point {\n    x: number;\n    y: number;\n    get index() {\n        return Point.xyToIndex(this.x, this.y);\n    }\n    get graveyardIndex() {\n        return this.x;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    get title() {\n        return `${HORIZONTAL_NOTE_LETTERS[this.x]}${VERTICAL_NOTE_LETTERS[this.y]}`;\n    }\n    get titleEnglish() {\n        return this.indexCode;\n    }\n    get h() {\n        return HORIZONTAL_CODE_LETTERS[this.x];\n    }\n    get v() {\n        return this.y + 1;\n    }\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n    static xyToIndex(x: number, y: number) {\n        return y * ROW_NUMBER + x;\n    }\n    static indexCodeToXY(indexCode: string) {\n        const x = HORIZONTAL_CODE_LETTERS.indexOf(indexCode[0]);\n        const y = Number(indexCode[1]) - 1;\n        return { x, y };\n    }\n    static indexCodeToIndex(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return Point.xyToIndex(x, y);\n    }\n    static fromIndexCode(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return new Point(x, y);\n    }\n    static indexToXY(index: number) {\n        const x = index % ROW_NUMBER;\n        const y = Math.floor(index / ROW_NUMBER);\n        return { x, y };\n    }\n    static fromIndex(index: number) {\n        const { x, y } = Point.indexToXY(index);\n        return new Point(x, y);\n    }\n    static fromIndexGraveyardIndex(index: number) {\n        return new Point(index, 0);\n    }\n    static isIndexInBoard(index: number) {\n        return index >= 0 && index <= CELL_COUNT - 1;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Board from './Board';\nimport KqMoved from './KqMoved';\nimport KAttacked from './KAttacked';\nimport CountDown from './CountDown';\nimport Graveyard from './Graveyard';\nimport {\n    DEFAULT_BOARD_STR,\n    STRING_COUNT,\n} from './constant';\nimport { Captured } from '../kpgn';\nimport Move from '../kpgn/Move';\nimport Point from './Point';\nimport Piece from './Piece';\nimport { PieceIndex } from '.';\nimport MoveHelper from '../brain/MoveHelper';\nimport { PIECE_COLOR_WHITE } from '../brain/constant';\nimport jsis from '../brain/jsis';\n\n/**\n * Raksa-Eng Notation\n * ren: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countdown -.-|-.4> <pieces in graveyard>\n */\nexport type RENPropType = {\n    boardStr: string;\n    turnStr: string;\n    kqMovedStr: string;\n    kAttackedStr: string;\n    countdownStr: string;\n    graveyardStr: string;\n}\nexport default class REN {\n    board: Board;\n    turn: string;\n    kqMoved: KqMoved;\n    kAttacked: KAttacked;\n    countdown: CountDown;\n    graveyard: Graveyard;\n    moveHelper: MoveHelper;\n    constructor(renProps: RENPropType) {\n        this.moveHelper = new MoveHelper();\n        this.init(renProps);\n    }\n\n    init({\n        boardStr,\n        turnStr,\n        kqMovedStr,\n        kAttackedStr,\n        countdownStr,\n        graveyardStr }: RENPropType) {\n        this.board = new Board(boardStr);\n        this.turn = turnStr || PIECE_COLOR_WHITE;\n        this.kqMoved = new KqMoved(kqMovedStr);\n        this.kAttacked = new KAttacked(kAttackedStr);\n        this.countdown = new CountDown(countdownStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            let msg = `Invalid piece string board:${boardStr}`;\n            msg += `, graveyard:${graveyardStr}, count:${invalidPiecesString}`;\n            throw new Error(msg);\n        }\n        this.moveHelper = new MoveHelper();\n    }\n\n    isInvalidPieceCount() {\n        const pieces = this.board.pieceIndices.map((pos) => {\n            return pos.piece;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.originPiece;\n        });\n        const piecesCount = pieces.reduce((obj: any, p) => {\n            obj[p.pieceCharCode] = obj[p.pieceCharCode] || 0;\n            obj[p.pieceCharCode]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => {\n            return `${k}${piecesCount[k]}`;\n        }).sort().join('');\n        if (str === STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n\n    backRen(move: Move) {\n        const ren = REN.fromString(this.toString());\n        ren.moveBack(move);\n        return ren;\n    }\n\n    static fromString(renStr?: string) {\n        if (!renStr) {\n            renStr = DEFAULT_BOARD_STR;\n        }\n        const renArr = renStr.split(' ');\n        return new REN({\n            boardStr: renArr[0],\n            turnStr: renArr[1],\n            kqMovedStr: renArr[2],\n            kAttackedStr: renArr[3],\n            countdownStr: renArr[4],\n            graveyardStr: renArr[5],\n        });\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const piece = this.board.getPieceAtIndex(moveFromIndex);\n        if (!piece) {\n            return null;\n        }\n        this.board.setPieceAtIndex(moveFromIndex, null);\n        const move = new Move({\n            moveFrom: Point.fromIndex(moveFromIndex),\n            moveTo: Point.fromIndex(moveToIndex),\n            piece: piece.clone(),\n        });\n        const targetPiece = this.board.getPieceAtIndex(moveToIndex);\n        if (targetPiece) {\n            this.graveyard.pieces.push(targetPiece);\n            move.captured = new Captured({\n                fromBoardPoint: Point.fromIndex(moveToIndex),\n                toGraveyardPoint: Point.fromIndex(this.graveyard.lastIndex),\n                piece: targetPiece,\n            });\n        }\n        this.board.setPieceAtIndex(moveToIndex, piece);\n        this.turn = Piece.oppositeColor(piece.color);\n        move.setRen(this);\n        return move;\n    }\n\n    moveBack(move: Move) {\n        const movedToIndex = move.moveTo.index;\n        const movedFromIndex = move.moveFrom.index;\n        const piece = this.board.getPieceAtIndex(movedToIndex);\n        this.board.setPieceAtIndex(movedToIndex, null);\n        if (!piece) {\n            return false;\n        }\n        this.board.setPieceAtIndex(movedFromIndex, piece);\n        if (move.captured) {\n            const movedToGYIndex = move.captured.toGraveyardPoint.index;\n            const capturedPiece = this.graveyard.get(movedToGYIndex);\n            this.board.setPieceAtIndex(movedToIndex, capturedPiece);\n            this.graveyard.removeAtIndex(movedToGYIndex);\n        }\n        this.turn = piece.color;\n        return true;\n    }\n\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqMoved.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countdown.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n\n    get isQueenMoved() {\n        const isQueenMoved = Piece.isWhiteColor(this.turn) && this.kqMoved.whiteQueen ||\n            Piece.isBlackColor(this.turn) && this.kqMoved.blackQueen;\n        return isQueenMoved;\n    }\n    get isKingMoved() {\n        const isKingMoved = Piece.isWhiteColor(this.turn) && this.kqMoved.whiteKing ||\n            Piece.isBlackColor(this.turn) && this.kqMoved.blackKing;\n        return isKingMoved;\n    }\n    genAllCanMoves(): PieceIndex[] {\n        const canMoves = this.moveHelper.calcCanMove({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: true,\n            genCanMoveForAnother: false,\n        });\n        return canMoves.moves;\n    }\n    isHasMoved(piece: Piece) {\n        let isHasMoved = false;\n        if ((this.kqMoved.blackKing && piece.isColorBlack && piece.isTypeKing) ||\n            (this.kqMoved.whiteKing && piece.isColorWhite && piece.isTypeKing) ||\n            (this.kqMoved.blackQueen && piece.isColorBlack && piece.isTypeQueen) ||\n            (this.kqMoved.whiteQueen && piece.isColorWhite && piece.isTypeQueen)) {\n            isHasMoved = true;\n        }\n        return isHasMoved;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const piece = this.board.getPieceAtIndex(point.index);\n        if (jsis.isNull(piece)) {\n            return [];\n        }\n        return this.moveHelper.genCanMovePointsByPiecePoint(point, piece,\n            this.board.toStringFullNoSeparate(), this.isHasMoved(piece));\n    }\n\n    getAttacker(): PieceIndex | null {\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        const kingInDanger = state.blackKingInDanger || state.whiteKingInDanger;\n        if (kingInDanger) {\n            const pieceIndex = kingInDanger.map((point) => {\n                return new PieceIndex(point, this.board.getPieceAtIndex(point.index));\n            }).filter((pieceIndex) => {\n                return !pieceIndex.piece.isTypeKing;\n            })[0];\n            return pieceIndex;\n        }\n        return null;\n    }\n    getWinColor(): string | null {\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        return state.winColor;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const DEFAULT_BOARD_STR = 'BHGKQGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgqkghb';\nexport const NOT_SET = '-';\nexport const PIECE_FLAG_KILL = 'x';\nexport const PIECE_FLAG_JUMP = 'j';\nexport const PIECE_FLAG_UPGRADE = 'u';\nexport const EVENT_FLAG_ATTACK = 'attack';\nexport const EVENT_FLAG_WINN = 'win';\nexport const EVENT_FLAG_DRAW = 'draw';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Board } from './Board';\nexport { default as CountDown } from './CountDown';\nexport { default as Graveyard } from './Graveyard';\nexport { default as KAttacked } from './KAttacked';\nexport { default as KqMoved } from './KqMoved';\nexport { default as Piece } from './Piece';\nexport { default as PieceIndex } from './PieceIndex';\nexport { default as REN } from './REN';\nexport { RENPropType } from './REN';\nexport { default as Point } from './Point';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(303);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","renStr","ren","fromString","this","kpgn","boardEventController","loadKpng","option","fromJson","resetBoard","getCanMoves","genAllCanMoves","getCanMovePointsByPoint","point","validateRENStr","valid","error_number","error","message","getRENStr","toString","board","piecesMultiArray","pieces","graveyard","getKPGN","toJson","loadKpgn","kpgnJosn","options","drawAscii","turn","move","moveFromIndex","moveToIndex","moves","push","setTimeout","checkBoardEvent","clearBoard","getHistories","pieceIndex","latestMove","attacker","boardEvent","BoardEvent","flag","EVENT_FLAG_ATTACK","actorPieceIndex","fireEvent","winColor","addBoardEventListener","listener","removeBoardEventListener","title","name","version","KhmerChess","h","v","isUndefined","Number","HORIZONTAL_CODE_LETTERS","indexOf","isWhiteColor","currentTurn","init","piecesString","isQueenMoved","isKingMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","stuckColor","generateCanMoves","filter","filterPieceInBoard","whitePieces","blackPieces","genMoves","pieceIndices","forEach","isHaveMoved","piece","isTypeKing","isTypeQueen","canMovePoints","genCanMovePointsByPiecePoint","cleanPieceNoMove","cleanMoves","isTrue","length","splice","checkIfKingInDanger","getKingInDanger","PIECE_COLOR_WHITE","getKingWillInDanger","PIECE_COLOR_BLACK","genWinLost","getStuck","isWhiteTurn","calcCanMove","anotherMoves","calcState","blackCountable","checkCountable","whiteCountable","calCount","countingBlack","checkCount","force","countingWhite","isHasMoved","index","x","y","width","height","isContainsPoint","isValidPoint","Rectangle","ROW_LAST_INDEX","TRIGGER_MOVE","events","removeOnTriggerMoveEventListener","_removeOnEventListener","addOnTriggerMoveEventListener","_addOnEventListener","mask","convertMask","point1","color","sign","point2","fromIndex","getCharPieceFromString","isIndexInBoard","CELL_COUNT","EMPTY_PIECE","getCharPieceInPos","getPieceByIndex","charCode","isValidPiece","fromCharCode","getPieceCanMovePoses","type","_pos","newIndex","isNull","getPieceCanMovePosesValid","_poses","n","thisPos","p","distPiece","isTypeFish","isTypeBoat","_x","_y","_n","Math","abs","_s","xyToIndex","replacePiecesStringAtIndex","substring","injectPiece","index1","index2","c","isCharPiecesInBoard","kingPos","PIECE_TYPE_KING","pieceCharCode","j","isHaveCaptured","points","str","code","getPiecesInBoard","split","ROW_NUMBER","PieceIndex","isColorWhite","extractPiecesToArray","piecesStringArr","pieceAll","isStateCount","weaker","stronger","oppositeColor","countChar","join","PIECE_TYPE_FISH","count","toukCount","PIECE_TYPE_BOAT","PIECE_TYPE_GENERAL","PIECE_TYPE_HORSE","isUpgradable","isColorBlack","BoardHelper","COLOR_NAMES","COLOR_NAMES_ENGLISH","PIECE_TYPE_QUEEN","PIECE_TYPE_TRANSFORM_FISH","PIECE_NAMES","PIECE_NAMES_ENGLISH","PIECE_COLOR_EMPTY","BOARD_SEPARATOR","ROW_FIRST_INDEX","HORIZONTAL_NOTE_LETTERS","VERTICAL_NOTE_LETTERS","HORIZONTAL_NOTE_LETTERS_ENGLISH","VERTICAL_NOTE_LETTERS_ENGLISH","Array","from","_","concat","default","jsis","isValid","isString","isNotEmpty","isValidString","isNumber","isStringNumber","isNaN","isArray","arr","isFunction","f","isObject","o","Object","isBoolean","b","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","isUpperCase","toUpperCase","fromBoardPoint","toGraveyardPoint","event","date","location","players","white","black","result","last","whiteWin","blackWin","timer","loadRENStr","loadMovesStrings","currentRen","reverse","map","moveStr","fromMovedString","backRen","validateOption","Date","m","fromBase64","toBase64","moveFrom","moveTo","isJumping","isUpgrading","captured","boardStatus","boardHelper","upgrade","setRen","getAttacker","getWinColor","drawCountColor","isDraw","fromIndexCode","substr","Move","PIECE_FLAG_KILL","gyIndex","match","capturedPiece","get","Error","fromIndexGraveyardIndex","PIECE_FLAG_JUMP","pCode","fIndexCode","indexCode","tIndexCode","flags","PIECE_FLAG_UPGRADE","toIndex","getMessage","isEnglish","titleEnglish","id","win","draw","lost","totalSecond","bonusTime","currentWhite","currentBlack","EVENT_FLAG_WINN","EVENT","BoardEventController","_addPropEvent","_onEventListeners","_propEvent","_checkPropEvent","_isLockProp","shift","_checkOnEvent","data","_guardEventName","eventName","reduce","s","subArr","boardStr","DEFAULT_BOARD_STR","newBoardStr","extract","replace","isValidPiecesString","compress","reg","RegExp","$1","toStringFull","toPieceCharCode","toStringFullNoSeparate","getPieceAtIndex","setPieceAtIndex","countdownStr","newCountdownStr","NOT_SET","graveyardStr","removeAtIndex","kAttackedStr","whiteKing","blackKing","toWhiteCharCode","kqMovedStr","whiteQueen","blackQueen","Piece","toNormalCharCode","pieceCharCodeWhite","_isTypeEqual","isBlackColor","isWhiteCharCode","isTypeTransformedFish","toBlackCharCode","toLowerCase","onlyPiece","ruler","allPiecesString","some","downgrade","clone","pieceChars","pieceChar","toCode","Point","indexCodeToXY","indexCodeToIndex","indexToXY","floor","renProps","moveHelper","turnStr","kqMoved","kAttacked","countdown","invalidPiecesString","isInvalidPieceCount","msg","piecesCount","pos","originPiece","obj","keys","k","sort","STRING_COUNT","REN","moveBack","renArr","targetPiece","Captured","lastIndex","movedToIndex","movedFromIndex","movedToGYIndex","state","kingInDanger","EVENT_FLAG_DRAW","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}