{"version":3,"file":"khmer-chess.umd.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./KhmerChess.ts","webpack:///./brain/HVPont.ts","webpack:///./brain/MoveHelper.ts","webpack:///./brain/Rectangle.ts","webpack:///./brain/boardHelper.ts","webpack:///./brain/constant.ts","webpack:///./brain/genMask.ts","webpack:///./brain/index.ts","webpack:///./brain/jsis.ts","webpack:///./index.ts","webpack:///./kpgn/Captured.ts","webpack:///./kpgn/KPGN.ts","webpack:///./kpgn/Move.ts","webpack:///./kpgn/Player.ts","webpack:///./kpgn/Result.ts","webpack:///./kpgn/Timer.ts","webpack:///./kpgn/index.ts","webpack:///./other/EventHandler.ts","webpack:///./other/base64Helper.ts","webpack:///./other/index.ts","webpack:///./other/table.ts","webpack:///./ren/Board.ts","webpack:///./ren/CountUp.ts","webpack:///./ren/Graveyard.ts","webpack:///./ren/KAttacked.ts","webpack:///./ren/KqJumped.ts","webpack:///./ren/Piece.ts","webpack:///./ren/PieceIndex.ts","webpack:///./ren/Point.ts","webpack:///./ren/REN.ts","webpack:///./ren/constant.ts","webpack:///./ren/index.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import config from '../package.json';\nimport KPGN from './kpgn/KPGN';\nimport Move from './kpgn/Move';\nimport asciiTable from './other/table';\nimport { PieceIndex } from './ren';\nimport Point from './ren/Point';\nimport REN from './ren/REN';\n\nexport default class KhmerChess {\n    static title = config.name;\n    static version = config.version;\n    kpgn: KPGN;\n    constructor(renStr?: string) {\n        const ren = REN.fromString(renStr);\n        this.kpgn = new KPGN(ren);\n    }\n\n    loadKpng(option: object) {\n        this.kpgn.fromJson(option);\n    }\n\n    resetBoard() {\n        this.kpgn.ren = REN.fromString();\n    }\n\n    getCanMoves(): PieceIndex[] {\n        const pieceIndices = this.kpgn.ren.genAllCanMoves();\n        return pieceIndices;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const canMovePoints = this.kpgn.ren.getCanMovePointsByPoint(point);\n        return canMovePoints;\n    }\n\n    validateRENStr(renStr: string) {\n        try {\n            REN.fromString(renStr);\n            return { valid: true, error_number: 0, error: 'No errors.' };\n        } catch (error) {\n            return { valid: false, error_number: 1, error: error.message };\n        }\n    }\n\n    getRENStr() {\n        return this.kpgn.ren.toString();\n    }\n\n    get piecesInBoardMultiArray() {\n        return this.kpgn.ren.board.piecesMultiArray;\n    }\n\n    get piecesInBoard() {\n        return this.kpgn.ren.board.pieces;\n    }\n\n    get piecesInGraveyard() {\n        return this.kpgn.ren.graveyard.pieces;\n    }\n\n    // Khmer Portable Game Notation <file-name>.kpgn.json\n    getKPGN() {\n        return this.kpgn.toJson();\n    }\n\n    loadKpgn(kpgnJosn: any, options: any) {\n        this.kpgn = new KPGN(this.kpgn.ren);\n    }\n\n    drawAscii() {\n        return asciiTable(this.kpgn.ren);\n    }\n\n    get turn() {\n        return this.kpgn.ren.turn;\n    }\n\n    set turn(turn: string) {\n        this.kpgn.ren.turn = turn;\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const move = this.kpgn.ren.move(moveFromIndex, moveToIndex);\n        this.kpgn.addMove(move);\n        return move;\n    }\n\n    /**\n     * Move all pieces to graveyard except kings\n     * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n     */\n    clearBoard() {\n        this.kpgn.ren = REN.fromString('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n    }\n\n    getHistories() {\n        return this.kpgn.moves;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { HORIZONTAL_CODE_LETTERS } from './constant';\nimport jsis from './jsis';\n\nexport default class HVPont {\n    h: string;\n    v: number;\n    get x() {\n        return HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n    }\n    get y() {\n        return this.v - 1;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    constructor(h: string, v?: string | number) {\n        if (jsis.isUndefined(v)) {\n            h = h[0];\n            v = h[1];\n        }\n        this.h = h;\n        this.v = Number(v);\n    }\n\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from '../ren/Piece';\nimport PieceIndex from '../ren/PieceIndex';\nimport Point from '../ren/Point';\nimport boardHelper from './boardHelper';\nimport { PIECE_COLOR_BLACK, PIECE_COLOR_WHITE } from './constant';\n// abcdecbaooooooooffffffffoooooooooooooooommmmmmmmoooooooohijlkjih\nexport type OptionsType = {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n};\nexport type CalCountPropsType = {\n    color: string,\n    piecesString: string;\n    force: boolean;\n};\nexport default class MoveHelper implements OptionsType {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n\n    whiteMoves: PieceIndex[];\n    blackMoves: PieceIndex[];\n    whiteKingInDanger: Point[] | null;\n    whiteKingWillInDanger: Point[] | null;\n    blackKingInDanger: Point[] | null;\n    blackKingWillInDanger: Point[] | null;\n    winColor: string | null;\n    stuckColor: string | null;\n\n    get isWhiteTurn() {\n        return Piece.isWhiteColor(this.currentTurn);\n    }\n    init(option: OptionsType) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isQueenMoved = option.isQueenMoved;\n        this.isKingMoved = option.isKingMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieceIndices: PieceIndex[]) => {\n            pieceIndices.forEach((pieceIndex) => {\n                let isHaveMoved = this.isKingMoved;\n                if (!pieceIndex.piece.isTypeKing) {\n                    isHaveMoved = pieceIndex.piece.isTypeQueen ? this.isQueenMoved : false;\n                }\n                const canMovePoints = this.genCanMovePointsByPiecePoint(\n                    pieceIndex.point,\n                    pieceIndex.piece,\n                    this.piecesString,\n                    isHaveMoved\n                );\n                pieceIndex.canMovePoints = canMovePoints;\n            });\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces: any[]) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMovePoints.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (this.isWhiteTurn && !this.whiteMoves.length) {\n            this.stuckColor = PIECE_COLOR_WHITE;\n        } else if (!this.isWhiteTurn && !this.blackMoves.length) {\n            this.stuckColor = PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves: PieceIndex[] = [];\n        if (this.genCanMove) {\n            moves = this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves: PieceIndex[] = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = !this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n\n    calcState(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n        };\n    }\n\n    calCount({ color, piecesString, force }: CalCountPropsType) {\n        return boardHelper.checkCount(color, piecesString, force);\n    }\n\n    genCanMovePointsByPiecePoint(point: Point, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        return boardHelper.genCanMovePointsByPiecePoint(\n            point.index,\n            piece,\n            piecesString,\n            isHasMoved\n        );\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { Point } from '../ren';\nimport { ROW_LAST_INDEX } from './constant';\n\nexport default class Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    isContainsPoint(point: Point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n\n    static isValidPoint(point: Point) {\n        return new Rectangle(0, 0, ROW_LAST_INDEX, ROW_LAST_INDEX).isContainsPoint(point);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import jsis from './jsis';\nimport genMask from './genMask';\nimport {\n    PIECE_COLOR_WHITE,\n    PIECE_COLOR_BLACK,\n    EMPTY_PIECE,\n    ROW_NUMBER,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    CELL_COUNT,\n} from './constant';\nimport Point from '../ren/Point';\nimport Piece from '../ren/Piece';\nimport Rectangle from './Rectangle';\nimport { PieceIndex } from '../ren';\n\nconst mask = genMask();\n\nexport class CountUpState {\n    countingToNumber: number;\n    countingNumber: number;\n    constructor(countingNumber: number, countingToNumber: number) {\n        this.countingNumber = countingNumber;\n        this.countingToNumber = countingToNumber;\n    }\n}\n\nclass BoardHelper {\n    getCharPieceFromString(piecesString: string, index: number) {\n        if (Point.isIndexInBoard(index) && piecesString.length === CELL_COUNT) {\n            return piecesString[index];\n        }\n        return EMPTY_PIECE;\n    }\n    getCharPieceInPos(index: number, piecesString: string) {\n        return this.getCharPieceFromString(piecesString, index);\n    }\n    getPieceByIndex(index: number, piecesString: string): {\n        isValidPiece: boolean, piece: Piece | null\n    } {\n        const charCode = this.getCharPieceInPos(index, piecesString);\n        return {\n            isValidPiece: Piece.isValidPiece(charCode),\n            piece: Piece.fromCharCode(charCode),\n        };\n    }\n    convertMask = (point1: Point, index: number, color: string) => {\n        const sign = Piece.isWhiteColor(color) ? 1 : -1;\n        const point2 = Point.fromIndex(index);\n        point1.x = point1.x * sign + point2.x;\n        point1.y = point1.y * sign + point2.y;\n        return Rectangle.isValidPoint(point1) ? point1.index : null;\n    };\n    getPieceCanMovePoses(index: number, piece: Piece) {\n        const pieceIndices: number[] = [];\n        mask[piece.type].forEach((_pos: number[]) => {\n            const newIndex = this.convertMask(new Point(_pos[0], _pos[1]), index, piece.color);\n            if (!jsis.isNull(newIndex)) {\n                pieceIndices.push(newIndex);\n            }\n        });\n        return pieceIndices;\n    }\n    getPieceCanMovePosesValid(index: number, piece: Piece, piecesString: string) {\n        const _poses = this.getPieceCanMovePoses(index, piece);\n        const pieceIndices = [];\n        const n = _poses.length;\n        const thisPos = Point.fromIndex(index);\n        for (let i = 0; i < n; i++) {\n            let p = Point.fromIndex(_poses[i]);\n            const distPiece = this.getPieceByIndex(p.index, piecesString);\n            if (distPiece.isValidPiece) {\n                if (piece.color === distPiece.piece.color ||\n                    (piece.isTypeFish && p.x === thisPos.x)) {\n                    p = null;\n                }\n            } else {\n                if (piece.isTypeFish && p.x !== thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && piece.isTypeBoat) {\n                const _x = thisPos.x;\n                const _y = thisPos.y;\n                if (p.x === thisPos.x) {\n                    let _n = Math.abs(p.y - thisPos.y);\n                    const _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x, _y + _s * _n), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    let _n = Math.abs(p.x - thisPos.x);\n                    const _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x + _s * _n, _y), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                pieceIndices.push(_poses[i]);\n            }\n        }\n        return pieceIndices;\n    }\n    replacePiecesStringAtIndex(piecesString: string, charCode: string, index: number) {\n        return piecesString.substring(0, index) + charCode + piecesString.substring(index + 1);\n    }\n    injectPiece(piecesString: string, index1: number, index2: number) {\n        const c = piecesString[index1];\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesStringAtIndex(piecesString, EMPTY_PIECE, index1);\n        piecesString = this.replacePiecesStringAtIndex(piecesString, c, index2);\n        return piecesString;\n    }\n    getKingWillInDanger(color: string, piecesString: string) {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color &&\n                p.piece.isTypeBoat) {\n                const _poses = this.getPieceCanMovePoses(i, p.piece);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getKingInDanger(color: string, piecesString: string): Point[] | null {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color) {\n                const _poses = this.getPieceCanMovePosesValid(i, p.piece, piecesString);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    genCanMovePointsByPiecePoint(index: number, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        const _poses = this.getPieceCanMovePosesValid(index, piece, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (piece.isTypeKing) {\n            if (!isHaveCaptured && !isHasMoved) {\n                let p = this.convertMask(new Point(2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(new Point(-2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (piece.isTypeQueen) {\n            if (!isHaveCaptured && !isHasMoved) {\n                const p = this.convertMask(new Point(-0, 2), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const points: Point[] = [];\n        for (let i = 0; i < n; i++) {\n            const str = this.injectPiece(piecesString, index, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(piece.color, str))) {\n                points.push(Point.fromIndex(_poses[i]));\n            }\n        }\n        return points;\n    }\n    isCharPiecesInBoard(code: string, piecesString: string) {\n        return !!~piecesString.indexOf(code);\n    }\n    getPiecesInBoard(piecesString: string) {\n        return piecesString.split('').filter((charCode: string) => {\n            return Piece.isValidPiece(charCode);\n        });\n    }\n    isHaveCaptured(piecesString: string) {\n        return this.getPiecesInBoard(piecesString).length < ROW_NUMBER * 4;\n    }\n    filterPieceInBoard(piecesString: string) {\n        const whitePieces: PieceIndex[] = [];\n        const blackPieces: PieceIndex[] = [];\n        for (let i = 0; i < piecesString.length; i++) {\n            const charCode = piecesString[i];\n            if (Piece.isValidPiece(charCode)) {\n                const pieceIndex = new PieceIndex(Point.fromIndex(i), Piece.fromCharCode(charCode));\n                if (pieceIndex.piece.isColorWhite) {\n                    whitePieces.push(pieceIndex);\n                } else {\n                    blackPieces.push(pieceIndex);\n                }\n            }\n        }\n        return {\n            whitePieces,\n            blackPieces,\n        };\n    }\n    extractPiecesToArray(piecesString: string) {\n        const piecesStringArr = piecesString.split('');\n        const pieceAll: { [key: string]: string[] } = {\n            [PIECE_COLOR_BLACK]: [],\n            [PIECE_COLOR_WHITE]: [],\n        };\n        piecesStringArr.forEach((charCode: string) => {\n            if (charCode === EMPTY_PIECE) {\n                return;\n            }\n            const piece = Piece.fromCharCode(charCode);\n            pieceAll[piece.color].push(piece.type);\n        });\n        return pieceAll;\n    }\n    isStateCount(c: string, piecesString: string) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    }\n    checkCountable(color: string, piecesString: string) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    }\n    checkCount(color: string, piecesString: string, force: boolean): CountUpState | null {\n        const countChar = (str: string[], c: string) => {\n            return str.join('').split(c).length - 1;\n        };\n        const charExist = (str: string[], c: string) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, PIECE_TYPE_FISH)) {\n                let count = 64;\n                const toukCount = countChar(stronger, PIECE_TYPE_BOAT);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, PIECE_TYPE_HORSE) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL)) {\n                    count = 44;\n                }\n                // FIXME: when touk 2 and stronger.length > 8 => start > count\n                let start = stronger.length;\n                if (start > 4) {\n                    start = 4;\n                }\n                return new CountUpState(start, count);\n            }\n            return new CountUpState(0, 64);\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return new CountUpState(0, 64);\n        }\n        return null;\n    }\n    isUpgradable(piece: Piece, point: Point) {\n        if (piece.isTypeFish) {\n            if (piece.isColorBlack && point.y <= 2) {\n                return true;\n            }\n            if (piece.isColorWhite && point.y >= 5) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nexport default new BoardHelper();\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export const PIECE_COLOR_WHITE = 'w';\nexport const PIECE_COLOR_BLACK = 'b';\nexport const COLOR_NAMES: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'ខ្មៅ',\n    [PIECE_COLOR_WHITE]: 'ស',\n};\nexport const COLOR_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'black',\n    [PIECE_COLOR_WHITE]: 'white',\n};\n\nexport const PIECE_TYPE_BOAT = 'b'; // Boat\nexport const PIECE_TYPE_HORSE = 'h'; // Horse\nexport const PIECE_TYPE_GENERAL = 'g'; // General\nexport const PIECE_TYPE_KING = 'k'; // King\nexport const PIECE_TYPE_QUEEN = 'q'; // Queen\nexport const PIECE_TYPE_FISH = 'f'; // Fish\nexport const PIECE_TYPE_TRANSFORM_FISH = 't'; // Transform fish\nexport const PIECE_NAMES: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'ទូក',\n    [PIECE_TYPE_HORSE]: 'សេះ',\n    [PIECE_TYPE_GENERAL]: 'គោល',\n    [PIECE_TYPE_KING]: 'ស្តេច',\n    [PIECE_TYPE_QUEEN]: 'នាង',\n    [PIECE_TYPE_FISH]: 'ត្រី',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'ត្រីបក',\n};\nexport const PIECE_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'boat',\n    [PIECE_TYPE_HORSE]: 'horse',\n    [PIECE_TYPE_GENERAL]: 'general',\n    [PIECE_TYPE_KING]: 'king',\n    [PIECE_TYPE_QUEEN]: 'queen',\n    [PIECE_TYPE_FISH]: 'fish',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'transformed-fish',\n};\nexport const EMPTY_PIECE = '.';\nexport const PIECE_COLOR_EMPTY = '.';\nexport const BOARD_SEPARATOR = '/';\n\nexport const ROW_NUMBER = 8;\nexport const ROW_FIRST_INDEX = 0;\nexport const ROW_LAST_INDEX = 7;\nexport const CELL_COUNT = ROW_NUMBER * ROW_NUMBER;\n\nexport const HORIZONTAL_CODE_LETTERS = 'abcdefgh';\nexport const HORIZONTAL_NOTE_LETTERS = ['ក', 'ខ', 'គ', 'ឃ', 'ង', 'ច', 'ឆ', 'ជ'];\nexport const VERTICAL_NOTE_LETTERS = ['១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩', '១០',\n    '១១', '១២', '១៣', '១៤', '១៥', '១៦', '១៧', '១៨', '១៩', '២០',\n    '២១', '២២', '២៣', '២៤', '២៥', '២៦', '២៧', '២៨', '២៩', '៣០'];\nexport const HORIZONTAL_NOTE_LETTERS_ENGLISH = 'abcdefgh';\nexport const VERTICAL_NOTE_LETTERS_ENGLISH = Array.from({ length: 30 }, (_, i) => `${i + 1}`);\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_QUEEN,\n} from './constant';\n\nexport default function genMask() {\n    const mask: { [key: string]: number[][] } = {};\n    mask[PIECE_TYPE_BOAT] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[PIECE_TYPE_HORSE] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[PIECE_TYPE_QUEEN] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_GENERAL] = mask[PIECE_TYPE_QUEEN].concat([\n        [0, 1],\n    ]);\n    mask[PIECE_TYPE_KING] = mask[PIECE_TYPE_GENERAL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[PIECE_TYPE_FISH] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_TRANSFORM_FISH] = mask[PIECE_TYPE_QUEEN];\n    return mask;\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Rectangle } from './Rectangle';\nexport { default as boardHelper } from './boardHelper';\nexport { default as genMask } from './genMask';\nexport { default as jsis } from './jsis';\nexport { default as HVPont } from './HVPont';\nexport { default as MoveHelper } from './MoveHelper';\nexport { OptionsType, CalCountPropsType } from './MoveHelper';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","const jsis = {\n    isValid(v: any) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v: any) {\n        return v === null;\n    },\n    isUndefined(v: any) {\n        return typeof v === 'undefined';\n    },\n    isString(str: any) {\n        return this.isValid(str) && typeof str === 'string';\n    },\n    isNotEmpty(str: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isValidString(str) && str != '';\n    },\n    isNumber(n: any) {\n        return this.isValid(n) && typeof n === 'number';\n    },\n    isStringNumber(n: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isString(n) && n != '' && !isNaN(Number(n));\n    },\n    isArray(arr: any) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f: any) {\n        return this.isValid(f) && typeof f === 'function';\n    },\n    isObject(o: any) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b: any) {\n        return this.isValid(b) && typeof b === 'boolean';\n    },\n    isTrue(b: any) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b: any) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p: { x: any; y: any; }) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size: { width: any; height: any; }) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n: number) {\n        return !!(n % 2);\n    },\n    isEven(n: any) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str: string) {\n        return str === str.toUpperCase();\n    },\n};\n\nexport default jsis;\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export * from './brain';\nexport * from './kpgn';\nexport * from './ren';\nexport * from './other';\nexport { default as KhmerChess } from './KhmerChess';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\n\nexport type CapturedPropType = {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n};\nexport default class Captured implements CapturedPropType {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n    constructor({ piece, fromBoardPoint: fromBoardPoint, toGraveyardPoint: toGraveyardPoint }: CapturedPropType) {\n        this.piece = piece;\n        this.fromBoardPoint = fromBoardPoint;\n        this.toGraveyardPoint = toGraveyardPoint;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\nimport Move from './Move';\nimport Player from './Player';\nimport Result from './Result';\nimport Timer from './Timer';\nimport type { Option as TimeOption } from './Timer';\nimport type { Option as ResultOption } from './Result';\nimport type { Option as PlayerOption } from './Player';\nimport base64Helper from '../other/base64Helper';\n\nexport type Option = {\n    event?: string;\n    date?: string;\n    location?: string;\n    players?: {\n        white: PlayerOption;\n        black: PlayerOption;\n    };\n    result?: {\n        last: {\n            whiteWin: boolean;\n            blackWin: boolean;\n        };\n        white: ResultOption;\n    };\n    moves?: string[];\n    ren?: string;\n    timer?: TimeOption;\n};\n\nexport default class KPGN {\n    event: string = '';\n    date: Date | null = null;\n    location: string = '';\n    players = {\n        white: new Player({}),\n        black: new Player({}),\n    };\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false,\n        },\n        white: new Result({}),\n    };\n\n    moves: Move[];\n    ren: REN;\n    timer: Timer = new Timer({});\n\n    constructor(ren: REN) {\n        this.ren = ren;\n        this.moves = [];\n    }\n\n    get isCanMoveNext() {\n        return this.latestMove.isCanMoveNext && this.ren.isCanMoveNext;\n    }\n\n    get latestMove() {\n        return this.moves[this.moves.length - 1] || null;\n    }\n\n    addMove(move: Move) {\n        if (move) {\n            this.moves.push(move);\n            return true;\n        }\n        return false;\n    }\n    getMove(index: number) {\n        return this.moves[index] || null;\n    }\n\n    loadRENStr(renStr?: string) {\n        this.ren = REN.fromString(renStr);\n        if (this.latestMove) {\n            this.ren.syncWithMove(this.latestMove);\n        }\n    }\n\n    loadMovesStrings(moves: string[]) {\n        let currentRen = this.ren;\n        this.moves = moves.reverse().map((moveStr) => {\n            const move = Move.fromString(moveStr, currentRen);\n            currentRen = currentRen.backRen(move);\n            return move;\n        }).reverse();\n        if (this.latestMove) {\n            this.ren.syncWithMove(this.latestMove);\n        }\n    }\n\n    validateOption(option: Option) {\n        // TODO: throw when invalid option's properties\n    }\n\n    fromJson(option: Option) {\n        this.validateOption(option);\n        const { ren, moves, timer, result,\n            players, location, date, event } = option;\n\n        this.event = event || this.event;\n        this.date = date ? new Date(date) : this.date;\n        this.location = location || this.location;\n        if (players) {\n            this.players = {\n                white: new Player(players.white),\n                black: new Player(players.black),\n            };\n        }\n        if (result) {\n            this.result = {\n                last: result.last,\n                white: new Result(result.white),\n            };\n        }\n        this.ren = REN.fromString(ren || '');\n        this.loadMovesStrings(moves || []);\n        this.timer = new Timer(timer || {});\n    }\n\n    toJson(): Option {\n        let renStr = this.ren.toString();\n        if (this.latestMove) {\n            renStr = this.latestMove.renStr;\n        }\n        return {\n            event: this.event,\n            date: this.date ? this.date.toString() : '',\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin,\n                },\n                white: this.result.white.toJson(),\n            },\n            timer: this.timer.toJson(),\n            moves: this.moves.map((m) => m.toString()),\n            ren: renStr,\n        };\n    }\n\n    fromBase64(str: string) {\n        const json = JSON.parse(base64Helper.decode(str));\n        this.fromJson(json);\n    }\n    toBase64() {\n        const jsStr = JSON.stringify(this.toJson());\n        return base64Helper.encode(jsStr);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport { boardHelper } from '../brain';\nimport { KqJumped, PieceIndex, REN } from '../ren';\nimport {\n    PIECE_FLAG_JUMP,\n    PIECE_FLAG_KILL,\n    PIECE_FLAG_START_COUNTING,\n    PIECE_FLAG_UPGRADE,\n} from '../ren/constant';\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\nimport Captured from './Captured';\n\nexport type Option = {\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isUpgrading?: boolean;\n    captured?: Captured;\n};\nexport default class Move {\n    renStr: string;\n    boardStatus: {\n        attacker: PieceIndex | null,\n        winColor: string | null,\n        stuckColor: string | null,\n        drawCountColor: string | null,\n    } = {\n            attacker: null,\n            winColor: null,\n            stuckColor: null,\n            drawCountColor: null,\n        };\n    isStartCounting = false;\n    kqJumping: KqJumped\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isUpgrading: boolean;\n    captured: Captured | null;\n    constructor({ piece, moveFrom, moveTo,\n        isUpgrading, captured,\n    }: Option) {\n        this.piece = piece;\n        this.moveFrom = moveFrom;\n        this.moveTo = moveTo;\n        this.isUpgrading = !!isUpgrading;\n        this.captured = captured || null;\n        if (boardHelper.isUpgradable(piece, moveTo)) {\n            this.isUpgrading = true;\n            piece.upgrade();\n        }\n        this.kqJumping = new KqJumped();\n    }\n\n    setRen(ren: REN) {\n        ren.checkBoardStatus(this);\n        ren.kqJumped.checkKQMoved(this);\n        ren.checkCountStatus(this);\n    }\n    syncRen(ren: REN) {\n        this.renStr = ren.toString();\n    }\n\n    get isCanMoveNext() {\n        return !(this.boardStatus.drawCountColor || this.boardStatus.winColor || this.boardStatus.stuckColor);\n    }\n\n    get isWhiteKingJumping() {\n        return !!this.kqJumping.whiteKing;\n    }\n    get isWhiteQueenJumping() {\n        return !!this.kqJumping.whiteQueen;\n    }\n    get isBlackKingJumping() {\n        return !!this.kqJumping.blackKing;\n    }\n    get isBlackQueenJumping() {\n        return !!this.kqJumping.blackQueen;\n    }\n\n    get attacker() {\n        return this.boardStatus.attacker || null;\n    }\n\n    get winColor() {\n        return this.boardStatus.winColor || null;\n    }\n\n    get stuckColor() {\n        return this.boardStatus.stuckColor || null;\n    }\n\n    get drawCountColor() {\n        return this.boardStatus.drawCountColor || null;\n    }\n\n    get isDraw() {\n        return this.stuckColor || this.drawCountColor;\n    }\n\n    get isGameOver() {\n        return this.winColor || this.isDraw;\n    }\n\n    static fromString(str: string, ren: REN) {\n        const piece = Piece.fromCharCode(str[0]);\n        const moveFrom = Point.fromIndexCode(str.substr(1, 2));\n        const moveTo = Point.fromIndexCode(str.substr(3, 2));\n        const move = new Move({\n            piece,\n            moveFrom,\n            moveTo,\n        });\n        const killIndex = str.indexOf(PIECE_FLAG_KILL);\n        if (!!~killIndex) {\n            const gyIndex = Number(str.substr(killIndex + 1).match(/^(\\d+)/)[1]);\n            const capturedPiece = ren.graveyard.get(gyIndex);\n            if (!capturedPiece) {\n                throw new Error('Invalid captured index');\n            }\n            move.captured = new Captured({\n                fromBoardPoint: moveTo,\n                toGraveyardPoint: Point.fromIndexGraveyardIndex(gyIndex),\n                piece: capturedPiece,\n            });\n\n        }\n        const jumpingIndex = str.indexOf(PIECE_FLAG_JUMP);\n        if (!!~jumpingIndex) {\n            const n = Number(str.substr(jumpingIndex + 1).match(/^(\\d+)/)[1]);\n            move.kqJumping = KqJumped.fromNumber(n);\n        }\n        const startCountingIndex = str.indexOf(PIECE_FLAG_START_COUNTING);\n        if (!!~startCountingIndex) {\n            move.isStartCounting = true;\n        }\n        move.setRen(ren);\n        return move;\n    }\n    toString() {\n        const pCode = this.piece.pieceCharCode;\n        const fIndexCode = this.moveFrom.indexCode;\n        const tIndexCode = this.moveTo.indexCode;\n        let flags = '';\n        if (this.captured) {\n            flags += PIECE_FLAG_KILL + this.captured.toGraveyardPoint.index;\n\n        }\n        if (this.kqJumping.isJumped) {\n            flags += PIECE_FLAG_JUMP + this.kqJumping.toNumber();\n        }\n        if (this.isUpgrading) {\n            flags += PIECE_FLAG_UPGRADE;\n        }\n        if (this.isStartCounting) {\n            flags += PIECE_FLAG_START_COUNTING;\n        }\n        return `${pCode}${fIndexCode}${tIndexCode}${flags}`;\n    }\n\n    getJumpingMessage(isEnglish?: boolean) {\n        let jump = '';\n        if (isEnglish) {\n            if (this.isWhiteKingJumping) {\n                jump += ' white king jumping';\n            }\n            if (this.isWhiteQueenJumping) {\n                jump += ' white queen jumping';\n            }\n            if (this.isBlackKingJumping) {\n                jump += ' black king jumping';\n            }\n            if (this.isBlackQueenJumping) {\n                jump += ' black queen jumping';\n            }\n        } else {\n            if (this.isWhiteKingJumping) {\n                jump += ' ស្តេច​ស​ភ្លោះ';\n            }\n            if (this.isWhiteQueenJumping) {\n                jump += ' នាង​ស​ភ្លោះ';\n            }\n            if (this.isBlackKingJumping) {\n                jump += ' ស្តេច​ខ្មៅ​ភ្លោះ';\n            }\n            if (this.isBlackQueenJumping) {\n                jump += ' នាង​ខ្មៅ​ភ្លោះ';\n            }\n        }\n        return jump;\n    }\n    getMessage(isEnglish?: boolean) {\n        if (isEnglish) {\n            let captured = '';\n            if (this.captured) {\n                captured = ` captures ${this.captured.piece.titleEnglish}`;\n            }\n            const upgrade = this.isUpgrading ? ' transforms' : '';\n            const jump = this.getJumpingMessage(isEnglish);\n            return `${this.piece.titleEnglish} moved from ${this.moveFrom.titleEnglish} to ${this.moveTo.titleEnglish}${upgrade}${captured} ${jump}`;\n        } else {\n            let captured = '';\n            if (this.captured) {\n                captured = ` ស៊ី${this.captured.piece.title}`;\n            }\n            const upgrade = this.isUpgrading ? ' បក' : '';\n            const jump = this.getJumpingMessage(isEnglish);\n            return `${this.piece.title} ដើរ​ពី ${this.moveFrom.title} ទៅ ${this.moveTo.title}${upgrade}${captured} ${jump}`;\n        }\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    id?: string;\n    name?: string;\n};\nexport default class Player {\n    name: string | null;\n    id: string | null;\n    constructor({ id, name }: Option) {\n        this.id = id || '';\n        this.name = name || '';\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    win?: number;\n    draw?: number;\n    lost?: number;\n};\nexport default class Result {\n    win: number;\n    draw: number;\n    lost: number;\n    constructor({ win, draw, lost }: Option) {\n        this.win = win || 0;\n        this.draw = draw || 0;\n        this.lost = lost || 0;\n    }\n\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost,\n        };\n    }\n}\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type Option = {\n    totalSecond?: number;\n    bonusTime?: number;\n    currentWhite?: number;\n    currentBlack?: number;\n};\nexport default class Timer {\n    bonusTime: number;\n    totalSecond: number;\n    currentWhite: number;\n    currentBlack: number;\n    constructor({ totalSecond, bonusTime, currentWhite, currentBlack }: Option) {\n        this.bonusTime = bonusTime || 0;\n        this.totalSecond = totalSecond || 0;\n        this.currentWhite = currentWhite || 0;\n        this.currentBlack = currentBlack || 0;\n    }\n\n    fromJson() {\n\n    }\n\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            bonusTime: this.bonusTime,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as KPGN } from './KPGN';\nexport { default as Move } from './Move';\nexport type { Option as MoveOption } from './Move';\nexport { default as Captured } from './Captured';\nexport { CapturedPropType } from './Captured';\nexport { default as Player } from './Player';\nexport { default as Result } from './Result';\nexport { default as Timer } from './Timer';\nexport type { Option as KPGNOption } from './KPGN';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export type ListenerType<T> = (data?: T) => any;\r\n\r\nexport default class EventHandler {\r\n    _onEventListeners: { [key: string]: any } = {};\r\n    _propEvent: any = [];\r\n    events: any;\r\n    _isLockProp: boolean;\r\n    constructor(options: { events: any }) {\r\n        this._onEventListeners = {};\r\n        this._propEvent = [];\r\n        this.events = options.events;\r\n    }\r\n\r\n    _checkPropEvent() {\r\n        if (this._isLockProp) {\r\n            return;\r\n        }\r\n        while (this._propEvent.length) {\r\n            const event = this._propEvent.shift();\r\n            this._checkOnEvent(event.name, event.data);\r\n        }\r\n    }\r\n\r\n    _addPropEvent(event: string, data?: any) {\r\n        this._propEvent.push({\r\n            name: event,\r\n            data,\r\n        });\r\n        this._checkPropEvent();\r\n    }\r\n\r\n    _guardEventName(eventName?: string) {\r\n        if (!eventName) {\r\n            throw new Error('invalid event name');\r\n        }\r\n    }\r\n\r\n    _checkOnEvent(eventName: string, data?: any) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].forEach((listener: ListenerType<any>) => {\r\n            listener(data);\r\n        });\r\n    }\r\n\r\n    _addOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].push(listener);\r\n    }\r\n\r\n    _removeOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        const index = this._onEventListeners[eventName].indexOf(listener);\r\n        ~index && this._onEventListeners[eventName].splice(index, 1);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","// https://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript\n/**\n*\n*  Base64 encode / decode\n*  http://www.webtoolkit.info/\n*\n**/\nvar Base64 = {\n\n    // private property\n    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\n    // public method for encoding\n    encode: function (input: string) {\n        var output = '';\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = Base64._utf8_encode(input);\n\n        while (i < input.length) {\n\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n        return output;\n    },\n\n    // public method for decoding\n    decode: function (input: string) {\n        var output = '';\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n        while (i < input.length) {\n\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n\n        output = Base64._utf8_decode(output);\n\n        return output;\n    },\n\n    // private method for UTF-8 encoding\n    _utf8_encode: function (string: string) {\n        string = string.replace(/\\r\\n/g, '\\n');\n        var utftext = '';\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n        return utftext;\n    },\n\n    // private method for UTF-8 decoding\n    _utf8_decode: function (utftext: string) {\n        var string = '';\n        var i = 0;\n        var c, c1, c2 = 0;\n        c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            }\n            else if ((c > 191) && (c < 224)) {\n                c1 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c1 & 63));\n                i += 2;\n            }\n            else {\n                c1 = utftext.charCodeAt(i + 1);\n                c2 = utftext.charCodeAt(i + 2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c1 & 63) << 6) | (c2 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    },\n};\n\nexport default Base64;","export { default as EventHandler } from './EventHandler';\nexport { ListenerType } from './EventHandler';\nexport { default as table } from './table';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\n\nexport default function asciiTable(ren: REN) {\n  const arr = ren.board.piecesMultiArray;\n  const str = '  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓';\n  const result = arr.reverse().reduce((s, subArr, i) => {\n    const rs = subArr.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n    const bottom = i === arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n    s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n    return s;\n  }, str);\n  const gyTStr = ren.graveyard.pieces.map(() => '━━━').join('┳');\n  const gyStr = ren.graveyard.pieces.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n  const gyBStr = ren.graveyard.pieces.map(() => '━━━').join('┻');\n  const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n  return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`;\n}\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\nimport PieceIndex from './PieceIndex';\nimport { DEFAULT_BOARD_STR } from './constant';\nimport { BOARD_SEPARATOR, CELL_COUNT, EMPTY_PIECE, ROW_NUMBER } from '../brain/constant';\nimport Point from './Point';\n\n/**\n * BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\n\nexport default class Board {\n    pieceIndices = Array.from({\n        length: CELL_COUNT,\n    }, (_, i) => {\n        const point = Point.fromIndex(i);\n        return new PieceIndex(point, null);\n    });\n\n    constructor(boardStr?: string) {\n        if (!boardStr) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < CELL_COUNT ||\n            !Piece.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.pieceIndices = newBoardStr.split('').map((charCode: string, i: number) => {\n            const point = Point.fromIndex(i);\n            return new PieceIndex(point, charCode === EMPTY_PIECE ? null : Piece.fromCharCode(charCode));\n        });\n    }\n\n    get piecesMultiArray() {\n        const arr: Piece[][] = [[], [], [], [], [], [], [], []];\n        this.pieceIndices.forEach((pieceIndex) => {\n            arr[pieceIndex.point.y][pieceIndex.point.x] = pieceIndex.piece;\n        });\n        return arr;\n    }\n\n    get pieces() {\n        return this.pieceIndices.map((pieceIndex) => {\n            return pieceIndex.piece;\n        });\n    }\n\n    get whiteKing() {\n        return this.pieceIndices.find((pieceIndex) => {\n            return pieceIndex.piece && pieceIndex.piece.isTypeKing && pieceIndex.piece.isColorWhite;\n        });\n    }\n\n    get blackKing() {\n        return this.pieceIndices.find((pieceIndex) => {\n            return pieceIndex.piece && pieceIndex.piece.isTypeKing && pieceIndex.piece.isColorBlack;\n        });\n    }\n\n    getKing(color: string) {\n        return Piece.isWhiteColor(color) ? this.whiteKing : this.blackKing;\n    }\n\n    compress(str: string) {\n        const reg = new RegExp(`(\\\\${EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1: any) => $1.length);\n    }\n\n    extract(str: string) {\n        return str.replace(/(\\d+)/g, ($1: any) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1,\n            }, () => EMPTY_PIECE).join('');\n        });\n    }\n\n    toStringFull(pieceIndices: PieceIndex[] = this.pieceIndices) {\n        const str = pieceIndices.map((pieceIndex, i) => {\n            const p = pieceIndex.toPieceCharCode();\n            if (i && i % ROW_NUMBER === 0 && i !== CELL_COUNT) {\n                return `${BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toStringFullNoSeparate() {\n        let str = this.toStringFull();\n        str = str.replace(/\\//g, '');\n        return str;\n    }\n\n    toString(pieceIndices?: PieceIndex[]) {\n        let str = this.toStringFull(pieceIndices);\n        str = this.compress(str);\n        return str;\n    }\n\n    getPieceAtIndex(index: number): Piece | null {\n        return this.pieceIndices[index].piece;\n    }\n\n    setPieceAtIndex(index: number, piece: Piece | null) {\n        this.pieceIndices[index].piece = piece;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_COLOR_BLACK, PIECE_COLOR_WHITE } from '../brain';\nimport { NOT_SET } from './constant';\n\n// 23.-\nexport default class CountUp {\n    countingToNumber: number | null = null;\n    countingNumber: number | null = null;\n    isCountingUp = false;\n    color: string | null = null;\n\n    get isWhite() {\n        return this.color === PIECE_COLOR_WHITE;\n    }\n    get isBlack() {\n        return this.color === PIECE_COLOR_BLACK;\n    }\n    get isWhiteCounting() {\n        return this.isCounting && this.isWhite;\n    }\n    get isBlackCounting() {\n        return this.isCounting && !this.isWhite;\n    }\n    get isCounting() {\n        return this.countingToNumber !== null;\n    }\n    get isCountingOut() {\n        return this.isCounting && this.countingNumber >= this.countingToNumber;\n    }\n\n    set(color: string, countingToNumber: number, countingNumber: number) {\n        this.color = color;\n        this.countingToNumber = countingToNumber;\n        this.countingNumber = countingNumber;\n    }\n\n    clear() {\n        this.color = null;\n        this.countingToNumber = null;\n        this.countingNumber = null;\n    }\n\n    checkUp(color: string) {\n        if (color === this.color) {\n            this.countingNumber++;\n            this.isCountingUp = true;\n        } else {\n            this.isCountingUp = false;\n        }\n    }\n\n    static fromString(countUpStr: string) {\n        if (!countUpStr) {\n            countUpStr = `${NOT_SET}.${NOT_SET}@${NOT_SET}`;\n        }\n        const countUp = new CountUp();\n        const countingUp = countUpStr.split('@');\n        if (countingUp[1] !== NOT_SET) {\n            countUp.countingToNumber = Number(countingUp[1]);\n        }\n        const countingUpWB = countingUp[0].split('.');\n        if (countingUpWB[0] !== NOT_SET) {\n            countUp.color = PIECE_COLOR_WHITE;\n            countUp.countingNumber = Number(countingUpWB[0]);\n        }\n        if (countingUpWB[1] !== NOT_SET) {\n            countUp.color = PIECE_COLOR_BLACK;\n            countUp.countingNumber = Number(countingUpWB[1]);\n        }\n        return countUp;\n    }\n\n    toString() {\n        const whiteCountingDow = this.isCounting && this.isWhite ? this.countingNumber : NOT_SET;\n        const blackCountingDow = this.isCounting && !this.isWhite ? this.countingNumber : NOT_SET;\n        let str = `${whiteCountingDow}`;\n        str += `.${blackCountingDow}`;\n        str += `@${this.isCounting ? this.countingToNumber : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\n\nexport default class Graveyard {\n    pieces: Piece[] = [];\n    get lastIndex() {\n        return this.pieces.length - 1;\n    }\n    get(index: number) {\n        return this.pieces[index];\n    }\n    removeAtIndex(index: number) {\n        if (!!this.get(index)) {\n            this.pieces.splice(index, 1);\n        }\n        return true;\n    }\n    constructor(graveyardStr?: string) {\n        if (graveyardStr) {\n            if (graveyardStr.length > 30 ||\n                !Piece.isValidPiecesString(graveyardStr, true)) {\n                throw new Error(`Invalid graveyard string ${graveyardStr}`);\n            }\n            this.pieces = graveyardStr.split('').map((charCode, i) => {\n                const p = Piece.fromCharCode(charCode);\n                if (p.isTypeKing) {\n                    throw new Error(`King cannot die graveyard:${graveyardStr}`);\n                }\n                return p;\n            });\n        }\n    }\n\n    toString() {\n        return this.pieces.map((p) => {\n            return p.pieceCharCode;\n        }).join('');\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING } from '../brain/constant';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King has attacked, this will effect jumping\n */\nexport default class KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr?: string) {\n        if (kAttackedStr) {\n            this.whiteKing = !!~kAttackedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.blackKing = !!~kAttackedStr.indexOf(PIECE_TYPE_KING);\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING, PIECE_TYPE_QUEEN } from '../brain/constant';\nimport { Move } from '../kpgn';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King or Queen has jumped, the will effect jumping\n */\nexport default class KqJumped {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    keyCodes: { [key: string]: string } = {\n        blackKing: Piece.toWhiteCharCode(PIECE_TYPE_QUEEN),\n        whiteKing: Piece.toWhiteCharCode(PIECE_TYPE_KING),\n        whiteQueen: PIECE_TYPE_KING,\n        blackQueen: PIECE_TYPE_QUEEN,\n    };\n    codeKeys: { [key: string]: string } = {\n        [Piece.toWhiteCharCode(PIECE_TYPE_QUEEN)]: 'blackKing: ',\n        [Piece.toWhiteCharCode(PIECE_TYPE_KING)]: 'whiteKing: ',\n        [PIECE_TYPE_KING]: 'whiteQueen: ',\n        [PIECE_TYPE_QUEEN]: 'blackQueen: ',\n    };\n    constructor(kqJumpedStr?: string) {\n        if (kqJumpedStr) {\n            this.whiteKing = !!~kqJumpedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.whiteQueen = !!~kqJumpedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_QUEEN));\n            this.blackKing = !!~kqJumpedStr.indexOf(PIECE_TYPE_KING);\n            this.blackQueen = !!~kqJumpedStr.indexOf(PIECE_TYPE_QUEEN);\n        }\n    }\n\n    get isJumped() {\n        return this.whiteKing || this.whiteQueen || this.blackKing || this.blackQueen;\n    }\n\n    setProp(key: string, value: boolean) {\n        (this as any)[key] = value;\n    }\n    applyJumping(propKey: string, move: Move) {\n        if (!(this as any)[propKey]) {\n            move.kqJumping.setProp(propKey, true);\n            this.setProp(propKey, true);\n        }\n    }\n\n    checkKQMoved(move: Move) {\n        if (move.attacker || move.captured) {\n            this.applyJumping('whiteKing', move);\n            this.applyJumping('blackKing', move);\n            this.applyJumping('whiteQueen', move);\n            this.applyJumping('blackQueen', move);\n        }\n        const piece = move.piece;\n        if (piece.isTypeKing) {\n            if (piece.isColorWhite) {\n                this.applyJumping('whiteKing', move);\n            } else {\n                this.applyJumping('blackKing', move);\n            }\n        } else if (piece.isTypeQueen) {\n            if (piece.isColorWhite) {\n                this.applyJumping('whiteQueen', move);\n            } else {\n                this.applyJumping('blackQueen', move);\n            }\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.whiteQueen ? Piece.toWhiteCharCode(PIECE_TYPE_QUEEN) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        str += `${this.blackQueen ? PIECE_TYPE_QUEEN : NOT_SET}`;\n        return str;\n    }\n\n    toNumber() {\n        let str = `${this.whiteKing ? 1 : 0}`;\n        str += `${this.whiteQueen ? 1 : 0}`;\n        str += `${this.blackKing ? 1 : 0}`;\n        str += `${this.blackQueen ? 1 : 0}`;\n        return parseInt(str, 2);\n    }\n    public static fromNumber(n: number) {\n        const b = ('0000' + Number(n).toString(2)).substr(-4);\n        const kqJumped = new KqJumped();\n        kqJumped.whiteKing = b[0] === '1';\n        kqJumped.whiteQueen = b[1] === '1';\n        kqJumped.blackKing = b[2] === '1';\n        kqJumped.blackQueen = b[3] === '1';\n        return kqJumped;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_COLOR_BLACK,\n    PIECE_COLOR_WHITE,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_QUEEN,\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n    PIECE_NAMES,\n    COLOR_NAMES,\n    PIECE_NAMES_ENGLISH,\n    COLOR_NAMES_ENGLISH,\n} from '../brain/constant';\nimport jsis from '../brain/jsis';\n\nexport default class Piece {\n    type: string;\n    color: string;\n    get colorOpponent() {\n        return Piece.oppositeColor(this.color);\n    }\n    get pieceCharCode() {\n        if (this.isColorWhite) {\n            return this.pieceCharCodeWhite;\n        }\n        return this.type;\n    }\n    get pieceCharCodeWhite() {\n        return Piece.toWhiteCharCode(this.type);\n    }\n\n    get title() {\n        return `${PIECE_NAMES[this.type]}${COLOR_NAMES[this.color]}`;\n    }\n    get titleEnglish() {\n        return `${COLOR_NAMES_ENGLISH[this.color]}-${PIECE_NAMES_ENGLISH[this.type]}`;\n    }\n    _isTypeEqual(type: string) {\n        return this.type === type;\n    }\n    get isTypeKing() {\n        return this._isTypeEqual(PIECE_TYPE_KING);\n    }\n    get isTypeQueen() {\n        return this._isTypeEqual(PIECE_TYPE_QUEEN);\n    }\n    get isTypeBoat() {\n        return this._isTypeEqual(PIECE_TYPE_BOAT);\n    }\n    get isTypeHorse() {\n        return this._isTypeEqual(PIECE_TYPE_HORSE);\n    }\n    get isTypeGeneral() {\n        return this._isTypeEqual(PIECE_TYPE_GENERAL);\n    }\n    get isTypeFish() {\n        return this._isTypeEqual(PIECE_TYPE_FISH);\n    }\n    get isTypeTransformedFish() {\n        return this._isTypeEqual(PIECE_TYPE_TRANSFORM_FISH);\n    }\n    get isColorBlack() {\n        return Piece.isBlackColor(this.color);\n    }\n    get isColorWhite() {\n        return Piece.isWhiteColor(this.color);\n    }\n\n\n    constructor(type: string, color: string) {\n        this.type = Piece.toNormalCharCode(type);\n        this.color = color;\n    }\n\n    static fromCharCode(charCode: string) {\n        if (!Piece.isValidPiece(charCode)) {\n            return null;\n        }\n        const color = Piece.isWhiteCharCode(charCode) ? PIECE_COLOR_WHITE : PIECE_COLOR_BLACK;\n        const type = Piece.toNormalCharCode(charCode);\n        return new Piece(type, color);\n    }\n\n    get originPiece(): Piece {\n        if (this.isTypeTransformedFish) {\n            return new Piece(PIECE_TYPE_FISH, this.color);\n        }\n        return this;\n    }\n\n    static get pieceChars() {\n        return [\n            PIECE_TYPE_BOAT,\n            PIECE_TYPE_HORSE,\n            PIECE_TYPE_GENERAL,\n            PIECE_TYPE_KING,\n            PIECE_TYPE_QUEEN,\n            PIECE_TYPE_FISH,\n            PIECE_TYPE_TRANSFORM_FISH,\n        ];\n    }\n    static get colorChars() {\n        return [\n            PIECE_COLOR_WHITE,\n            PIECE_COLOR_BLACK,\n        ];\n    }\n\n\n    static toWhiteCharCode(charCode: string) {\n        return charCode.toUpperCase();\n    }\n    static isWhiteCharCode(charCode: string) {\n        return jsis.isUpperCase(charCode);\n    }\n    static toBlackCharCode(charCode: string) {\n        return charCode.toLowerCase();\n    }\n    static toNormalCharCode(charCode: string) {\n        return Piece.toBlackCharCode(charCode);\n    }\n\n    static isValidPiece(charCode: string) {\n        return charCode !== EMPTY_PIECE;\n    }\n    static isWhiteColor(color: string) {\n        return color === PIECE_COLOR_WHITE;\n    }\n    static isBlackColor(color: string) {\n        return color === PIECE_COLOR_BLACK;\n    }\n    static oppositeColor(color: any) {\n        return Piece.isWhiteColor(color) ? PIECE_COLOR_BLACK : PIECE_COLOR_WHITE;\n    }\n\n    static isValidPiecesString(str: string, onlyPiece?: boolean) {\n        const ruler = onlyPiece ? allPiecesString.filter((c: string) => {\n            return !~[EMPTY_PIECE, BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c: string) => {\n            return !~ruler.indexOf(c);\n        });\n    }\n\n    upgrade() {\n        if (this.isTypeFish) {\n            this.type = PIECE_TYPE_TRANSFORM_FISH;\n            return true;\n        }\n        return false;\n    }\n    downgrade() {\n        if (this.isTypeTransformedFish) {\n            this.type = PIECE_TYPE_FISH;\n            return true;\n        }\n        return false;\n    }\n    clone() {\n        return Piece.fromCharCode(this.pieceCharCode);\n    }\n}\n\nconst allPiecesString: string[] = [\n    ...Piece.pieceChars,\n    ...Piece.pieceChars.map((pieceChar: string) => {\n        return Piece.toWhiteCharCode(pieceChar);\n    }),\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n];\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>, K4us Net <k4us.net@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { EMPTY_PIECE } from '../brain/constant';\nimport jsis from '../brain/jsis';\nimport Piece from './Piece';\nimport Point from './Point';\n\nexport default class PieceIndex {\n    point: Point;\n    piece: Piece | null;\n    canMovePoints: Point[] = [];\n    constructor(point: Point, piece: Piece | null) {\n        this.point = point;\n        this.piece = piece;\n    }\n\n    toCode() {\n        return jsis.isNull(this.piece) ? `${this.piece.pieceCharCode}${this.point.indexCode}` : null;\n    }\n\n    toPieceCharCode() {\n        return jsis.isNull(this.piece) ? EMPTY_PIECE : this.piece.pieceCharCode;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport {\n    CELL_COUNT,\n    HORIZONTAL_CODE_LETTERS,\n    HORIZONTAL_NOTE_LETTERS,\n    ROW_NUMBER,\n    VERTICAL_NOTE_LETTERS,\n} from '../brain/constant';\n\nexport default class Point {\n    x: number;\n    y: number;\n    get index() {\n        return Point.xyToIndex(this.x, this.y);\n    }\n    get graveyardIndex() {\n        return this.x;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    get title() {\n        return `${HORIZONTAL_NOTE_LETTERS[this.x]}${VERTICAL_NOTE_LETTERS[this.y]}`;\n    }\n    get titleEnglish() {\n        return this.indexCode;\n    }\n    get h() {\n        return HORIZONTAL_CODE_LETTERS[this.x];\n    }\n    get v() {\n        return this.y + 1;\n    }\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n    static xyToIndex(x: number, y: number) {\n        return y * ROW_NUMBER + x;\n    }\n    static indexCodeToXY(indexCode: string) {\n        const x = HORIZONTAL_CODE_LETTERS.indexOf(indexCode[0]);\n        const y = Number(indexCode[1]) - 1;\n        return { x, y };\n    }\n    static indexCodeToIndex(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return Point.xyToIndex(x, y);\n    }\n    static fromIndexCode(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return new Point(x, y);\n    }\n    static indexToXY(index: number) {\n        const x = index % ROW_NUMBER;\n        const y = Math.floor(index / ROW_NUMBER);\n        return { x, y };\n    }\n    static fromIndex(index: number) {\n        const { x, y } = Point.indexToXY(index);\n        return new Point(x, y);\n    }\n    static fromIndexGraveyardIndex(index: number) {\n        return new Point(index, 0);\n    }\n    static isIndexInBoard(index: number) {\n        return index >= 0 && index <= CELL_COUNT - 1;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Board from './Board';\nimport KqJumped from './KqJumped';\nimport KAttacked from './KAttacked';\nimport CountUp from './CountUp';\nimport Graveyard from './Graveyard';\nimport {\n    DEFAULT_BOARD_STR,\n    STRING_COUNT,\n} from './constant';\nimport { Captured } from '../kpgn';\nimport Move from '../kpgn/Move';\nimport Point from './Point';\nimport Piece from './Piece';\nimport { PieceIndex } from '.';\nimport MoveHelper from '../brain/MoveHelper';\nimport { PIECE_COLOR_WHITE } from '../brain/constant';\nimport jsis from '../brain/jsis';\n\n/**\n * Raksa-Eng Notation\n * ren: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countUp -.-|-.4> <pieces in graveyard>\n */\nexport type RENPropType = {\n    boardStr: string;\n    turnStr: string;\n    kqJumpedStr: string;\n    kAttackedStr: string;\n    countUpStr: string;\n    graveyardStr: string;\n}\nexport default class REN {\n    board: Board;\n    turn: string;\n    kqJumped: KqJumped;\n    kAttacked: KAttacked;\n    countUp: CountUp;\n    graveyard: Graveyard;\n    moveHelper: MoveHelper;\n    constructor(renProps: RENPropType) {\n        this.moveHelper = new MoveHelper();\n        this.init(renProps);\n    }\n\n    init({\n        boardStr,\n        turnStr,\n        kqJumpedStr,\n        kAttackedStr,\n        countUpStr: countUpStr,\n        graveyardStr }: RENPropType) {\n        // TODO: improve by moving to fromString()\n        this.board = new Board(boardStr);\n        this.turn = turnStr || PIECE_COLOR_WHITE;\n        this.kqJumped = new KqJumped(kqJumpedStr);\n        this.kAttacked = new KAttacked(kAttackedStr);\n        this.countUp = CountUp.fromString(countUpStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            let msg = `Invalid piece string board:${boardStr}`;\n            msg += `, graveyard:${graveyardStr}, count:${invalidPiecesString}`;\n            throw new Error(msg);\n        }\n        this.moveHelper = new MoveHelper();\n    }\n\n    isInvalidPieceCount() {\n        const pieces = this.board.pieceIndices.map((pos) => {\n            return pos.piece;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.originPiece;\n        });\n        const piecesCount = pieces.reduce((obj: any, p) => {\n            obj[p.pieceCharCode] = obj[p.pieceCharCode] || 0;\n            obj[p.pieceCharCode]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => {\n            return `${k}${piecesCount[k]}`;\n        }).sort().join('');\n        if (str === STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n\n    backRen(move: Move) {\n        const ren = REN.fromString(this.toString());\n        ren.moveBack(move);\n        return ren;\n    }\n\n    get isCanMoveNext() {\n        return !this.countUp.isCountingOut;\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        if (!this.isCanMoveNext) {\n            return null;\n        }\n        const piece = this.board.getPieceAtIndex(moveFromIndex);\n        if (!piece) {\n            return null;\n        }\n        this.board.setPieceAtIndex(moveFromIndex, null);\n        const move = new Move({\n            moveFrom: Point.fromIndex(moveFromIndex),\n            moveTo: Point.fromIndex(moveToIndex),\n            piece: piece.clone(),\n        });\n        if (move.isUpgrading) {\n            piece.upgrade();\n        }\n        const targetPiece = this.board.getPieceAtIndex(moveToIndex);\n        if (targetPiece) {\n            this.graveyard.pieces.push(targetPiece);\n            move.captured = new Captured({\n                fromBoardPoint: Point.fromIndex(moveToIndex),\n                toGraveyardPoint: Point.fromIndex(this.graveyard.lastIndex),\n                piece: targetPiece,\n            });\n        }\n        this.board.setPieceAtIndex(moveToIndex, piece);\n        this.turn = Piece.oppositeColor(piece.color);\n        move.setRen(this);\n        return move;\n    }\n\n    moveBack(move: Move) {\n        const movedToIndex = move.moveTo.index;\n        const movedFromIndex = move.moveFrom.index;\n        const piece = this.board.getPieceAtIndex(movedToIndex);\n        this.board.setPieceAtIndex(movedToIndex, null);\n        if (!piece) {\n            return false;\n        }\n        this.board.setPieceAtIndex(movedFromIndex, piece);\n        if (move.captured) {\n            const movedToGYIndex = move.captured.toGraveyardPoint.index;\n            const capturedPiece = this.graveyard.get(movedToGYIndex);\n            this.board.setPieceAtIndex(movedToIndex, capturedPiece);\n            this.graveyard.removeAtIndex(movedToGYIndex);\n        }\n        if (move.kqJumping.whiteKing) {\n            this.kqJumped.whiteKing = false;\n        }\n        if (move.kqJumping.whiteQueen) {\n            this.kqJumped.whiteQueen = false;\n        }\n        if (move.kqJumping.blackKing) {\n            this.kqJumped.blackKing = false;\n        }\n        if (move.kqJumping.blackQueen) {\n            this.kqJumped.blackQueen = false;\n        }\n        if (this.countUp) {\n            this.countUp.clear();\n        }\n        this.turn = piece.color;\n        return true;\n    }\n\n    static fromString(renStr?: string) {\n        if (!renStr) {\n            renStr = DEFAULT_BOARD_STR;\n        }\n        const renArr = renStr.split(' ');\n        return new REN({\n            boardStr: renArr[0],\n            turnStr: renArr[1],\n            kqJumpedStr: renArr[2],\n            kAttackedStr: renArr[3],\n            countUpStr: renArr[4],\n            graveyardStr: renArr[5],\n        });\n    }\n\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqJumped.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countUp.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n\n    get isQueenMoved() {\n        const isQueenMoved = Piece.isWhiteColor(this.turn) && this.kqJumped.whiteQueen ||\n            Piece.isBlackColor(this.turn) && this.kqJumped.blackQueen;\n        return isQueenMoved;\n    }\n    get isKingMoved() {\n        const isKingMoved = Piece.isWhiteColor(this.turn) && this.kqJumped.whiteKing ||\n            Piece.isBlackColor(this.turn) && this.kqJumped.blackKing;\n        return isKingMoved;\n    }\n    genAllCanMoves(): PieceIndex[] {\n        const canMoves = this.moveHelper.calcCanMove({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: true,\n            genCanMoveForAnother: false,\n        });\n        return canMoves.moves;\n    }\n    isHasMoved(piece: Piece) {\n        let isHasMoved = false;\n        if ((this.kqJumped.blackKing && piece.isColorBlack && piece.isTypeKing) ||\n            (this.kqJumped.whiteKing && piece.isColorWhite && piece.isTypeKing) ||\n            (this.kqJumped.blackQueen && piece.isColorBlack && piece.isTypeQueen) ||\n            (this.kqJumped.whiteQueen && piece.isColorWhite && piece.isTypeQueen)) {\n            isHasMoved = true;\n        }\n        return isHasMoved;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const piece = this.board.getPieceAtIndex(point.index);\n        if (jsis.isNull(piece)) {\n            return [];\n        }\n        return this.moveHelper.genCanMovePointsByPiecePoint(point, piece,\n            this.board.toStringFullNoSeparate(), this.isHasMoved(piece));\n    }\n\n    checkBoardStatus(move: Move, force?: boolean) {\n        const piecesString = this.board.toStringFullNoSeparate();\n        // TODO: optimize by specific color\n        const state = this.moveHelper.calcState({\n            piecesString,\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n\n        const kingInDanger = state.blackKingInDanger || state.whiteKingInDanger;\n        if (kingInDanger) {\n            const pieceIndex = kingInDanger.map((point) => {\n                return new PieceIndex(point, this.board.getPieceAtIndex(point.index));\n            }).filter((pieceIndex) => {\n                return !pieceIndex.piece.isTypeKing;\n            })[0];\n            move.boardStatus.attacker = pieceIndex;\n        }\n        move.boardStatus.winColor = state.winColor;\n        move.boardStatus.stuckColor = state.stuckColor;\n    }\n\n    checkCountStatus(move: Move, force?: boolean) {\n        if (move.isCanMoveNext) {\n            const piecesString = this.board.toStringFullNoSeparate();\n            if (this.countUp.isCounting) {\n                move.isStartCounting = false;\n                this.countUp.checkUp(move.piece.color);\n                if (this.countUp.isCountingOut) {\n                    move.boardStatus.drawCountColor = this.countUp.color;\n                }\n            } else {\n                const color = Piece.oppositeColor(move.piece.color);\n                const countState = this.moveHelper.calCount({\n                    color: Piece.oppositeColor(move.piece.color),\n                    piecesString,\n                    force,\n                });\n                if (countState) {\n                    this.countUp.set(color, countState.countingToNumber, countState.countingNumber);\n                    move.isStartCounting = true;\n                }\n            }\n        }\n        move.syncRen(this);\n    }\n\n    getWinColor(): string | null {\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        return state.winColor;\n    }\n    syncWithMove(move: Move) {\n        if (move) {\n            const countUp = this.countUp;\n            if (countUp.isCounting && this.turn !== countUp.color && !move.isStartCounting) {\n                countUp.isCountingUp = true;\n            }\n        }\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const DEFAULT_BOARD_STR = 'BHGKQGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgqkghb';\nexport const NOT_SET = '-';\nexport const PIECE_FLAG_KILL = '<';\nexport const PIECE_FLAG_JUMP = '^';\nexport const PIECE_FLAG_UPGRADE = '*';\nexport const PIECE_FLAG_START_COUNTING = '#';\nexport const EVENT_FLAG_ATTACK = 'attack';\nexport const EVENT_FLAG_WIN = 'win';\nexport const EVENT_FLAG_DRAW = 'draw';\nexport const EVENT_FLAG_START_COUNTING = 'start-counting';\nexport const EVENT_FLAG_COUNTING_UP = 'counting-up';\nexport const EVENT_FLAG_COUNT_UP_OUT = 'count-up-out';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Board } from './Board';\nexport { default as CountUp } from './CountUp';\nexport { default as Graveyard } from './Graveyard';\nexport { default as KAttacked } from './KAttacked';\nexport { default as KqJumped } from './KqJumped';\nexport { default as Piece } from './Piece';\nexport { default as PieceIndex } from './PieceIndex';\nexport { default as REN } from './REN';\nexport { RENPropType } from './REN';\nexport { default as Point } from './Point';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(303);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","renStr","ren","fromString","this","kpgn","loadKpng","option","fromJson","resetBoard","getCanMoves","genAllCanMoves","getCanMovePointsByPoint","point","validateRENStr","valid","error_number","error","message","getRENStr","toString","board","piecesMultiArray","pieces","graveyard","getKPGN","toJson","loadKpgn","kpgnJosn","options","drawAscii","turn","move","moveFromIndex","moveToIndex","addMove","clearBoard","getHistories","moves","title","name","version","KhmerChess","h","v","isUndefined","Number","HORIZONTAL_CODE_LETTERS","indexOf","isWhiteColor","currentTurn","init","piecesString","isQueenMoved","isKingMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","winColor","stuckColor","generateCanMoves","filter","filterPieceInBoard","whitePieces","blackPieces","genMoves","pieceIndices","forEach","pieceIndex","isHaveMoved","piece","isTypeKing","isTypeQueen","canMovePoints","genCanMovePointsByPiecePoint","cleanPieceNoMove","cleanMoves","isTrue","length","splice","checkIfKingInDanger","getKingInDanger","PIECE_COLOR_WHITE","getKingWillInDanger","PIECE_COLOR_BLACK","genWinLost","getStuck","isWhiteTurn","calcCanMove","anotherMoves","calcState","calCount","color","force","checkCount","isHasMoved","index","x","y","width","height","isContainsPoint","isValidPoint","Rectangle","ROW_LAST_INDEX","mask","countingNumber","countingToNumber","CountUpState","convertMask","point1","sign","point2","fromIndex","getCharPieceFromString","isIndexInBoard","CELL_COUNT","EMPTY_PIECE","getCharPieceInPos","getPieceByIndex","charCode","isValidPiece","fromCharCode","getPieceCanMovePoses","type","_pos","newIndex","isNull","push","getPieceCanMovePosesValid","_poses","n","thisPos","p","distPiece","isTypeFish","isTypeBoat","_x","_y","_n","Math","abs","_s","xyToIndex","replacePiecesStringAtIndex","substring","injectPiece","index1","index2","c","isCharPiecesInBoard","kingPos","PIECE_TYPE_KING","pieceCharCode","j","isHaveCaptured","points","str","code","getPiecesInBoard","split","ROW_NUMBER","PieceIndex","isColorWhite","extractPiecesToArray","piecesStringArr","pieceAll","isStateCount","checkCountable","weaker","stronger","oppositeColor","countChar","join","PIECE_TYPE_FISH","count","toukCount","PIECE_TYPE_BOAT","PIECE_TYPE_GENERAL","PIECE_TYPE_HORSE","start","isUpgradable","isColorBlack","BoardHelper","COLOR_NAMES","COLOR_NAMES_ENGLISH","PIECE_TYPE_QUEEN","PIECE_TYPE_TRANSFORM_FISH","PIECE_NAMES","PIECE_NAMES_ENGLISH","PIECE_COLOR_EMPTY","BOARD_SEPARATOR","ROW_FIRST_INDEX","HORIZONTAL_NOTE_LETTERS","VERTICAL_NOTE_LETTERS","HORIZONTAL_NOTE_LETTERS_ENGLISH","VERTICAL_NOTE_LETTERS_ENGLISH","Array","from","_","concat","default","jsis","isValid","isString","isNotEmpty","isValidString","isNumber","isStringNumber","isNaN","isArray","arr","isFunction","f","isObject","o","Object","isBoolean","b","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","isUpperCase","toUpperCase","fromBoardPoint","toGraveyardPoint","event","date","location","players","white","black","result","last","whiteWin","blackWin","timer","latestMove","isCanMoveNext","getMove","loadRENStr","syncWithMove","loadMovesStrings","currentRen","reverse","map","moveStr","backRen","validateOption","Date","m","fromBase64","json","JSON","parse","decode","toBase64","jsStr","stringify","encode","moveFrom","moveTo","isUpgrading","captured","boardStatus","attacker","drawCountColor","isStartCounting","boardHelper","upgrade","kqJumping","KqJumped","setRen","checkBoardStatus","kqJumped","checkKQMoved","checkCountStatus","syncRen","whiteKing","whiteQueen","blackKing","blackQueen","isDraw","fromIndexCode","substr","Move","killIndex","PIECE_FLAG_KILL","gyIndex","match","capturedPiece","get","Error","fromIndexGraveyardIndex","jumpingIndex","PIECE_FLAG_JUMP","fromNumber","PIECE_FLAG_START_COUNTING","pCode","fIndexCode","indexCode","tIndexCode","flags","isJumped","toNumber","PIECE_FLAG_UPGRADE","getJumpingMessage","isEnglish","jump","isWhiteKingJumping","isWhiteQueenJumping","isBlackKingJumping","isBlackQueenJumping","getMessage","titleEnglish","id","win","draw","lost","totalSecond","bonusTime","currentWhite","currentBlack","_onEventListeners","_propEvent","events","_checkPropEvent","_isLockProp","shift","_checkOnEvent","data","_addPropEvent","_guardEventName","eventName","listener","_addOnEventListener","_removeOnEventListener","Base64","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_utf8_encode","charCodeAt","charAt","replace","String","_utf8_decode","string","utftext","c1","c2","reduce","s","subArr","boardStr","DEFAULT_BOARD_STR","newBoardStr","extract","isValidPiecesString","find","getKing","compress","reg","RegExp","$1","toStringFull","toPieceCharCode","toStringFullNoSeparate","getPieceAtIndex","setPieceAtIndex","isCountingUp","isCounting","isWhite","set","clear","checkUp","countUpStr","NOT_SET","countUp","CountUp","countingUp","countingUpWB","graveyardStr","removeAtIndex","kAttackedStr","toWhiteCharCode","kqJumpedStr","keyCodes","codeKeys","setProp","key","value","applyJumping","propKey","parseInt","Piece","toNormalCharCode","pieceCharCodeWhite","_isTypeEqual","isBlackColor","isWhiteCharCode","isTypeTransformedFish","toBlackCharCode","toLowerCase","onlyPiece","ruler","allPiecesString","some","downgrade","clone","pieceChars","pieceChar","toCode","Point","indexCodeToXY","indexCodeToIndex","indexToXY","floor","renProps","moveHelper","turnStr","kAttacked","invalidPiecesString","isInvalidPieceCount","msg","piecesCount","pos","originPiece","obj","keys","k","sort","STRING_COUNT","REN","moveBack","isCountingOut","targetPiece","Captured","lastIndex","movedToIndex","movedFromIndex","movedToGYIndex","renArr","state","kingInDanger","countState","getWinColor","EVENT_FLAG_ATTACK","EVENT_FLAG_WIN","EVENT_FLAG_DRAW","EVENT_FLAG_START_COUNTING","EVENT_FLAG_COUNTING_UP","EVENT_FLAG_COUNT_UP_OUT","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}