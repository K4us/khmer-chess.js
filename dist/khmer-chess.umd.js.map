{"version":3,"file":"khmer-chess.umd.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./KhmerChess.ts","webpack:///./brain/HVPont.ts","webpack:///./brain/MoveHelper.ts","webpack:///./brain/Rectangle.ts","webpack:///./brain/boardEventController.ts","webpack:///./brain/boardHelper.ts","webpack:///./brain/constant.ts","webpack:///./brain/genMask.ts","webpack:///./brain/index.ts","webpack:///./brain/jsis.ts","webpack:///./index.ts","webpack:///./kpgn/Captured.ts","webpack:///./kpgn/KPGN.ts","webpack:///./kpgn/Move.ts","webpack:///./kpgn/Player.ts","webpack:///./kpgn/Result.ts","webpack:///./kpgn/Timer.ts","webpack:///./kpgn/index.ts","webpack:///./other/BoardEventController.ts","webpack:///./other/EventHandler.ts","webpack:///./other/index.ts","webpack:///./other/table.ts","webpack:///./ren/Board.ts","webpack:///./ren/CountDown.ts","webpack:///./ren/Graveyard.ts","webpack:///./ren/KAttacked.ts","webpack:///./ren/KqMoved.ts","webpack:///./ren/Piece.ts","webpack:///./ren/PieceIndex.ts","webpack:///./ren/Point.ts","webpack:///./ren/REN.ts","webpack:///./ren/constant.ts","webpack:///./ren/index.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","import config from '../package.json';\nimport { jsis } from './brain';\nimport KPGN from './kpgn/KPGN';\nimport Move from './kpgn/Move';\nimport BoardEventController, { BoardEvent } from './other/BoardEventController';\nimport { ListenerType } from './other/EventHandler';\nimport asciiTable from './other/table';\nimport { PieceIndex } from './ren';\nimport { EVENT_FLAG_ATTACK, EVENT_FLAG_WINN as EVENT_FLAG_WIN } from './ren/constant';\nimport Point from './ren/Point';\nimport REN from './ren/REN';\n\nexport default class KhmerChess {\n    static title = config.name;\n    static version = config.version;\n    renInstance: REN;\n    kpgnInstance: KPGN;\n    boardEventController: BoardEventController;\n    constructor(renStr?: string) {\n        this.renInstance = REN.fromString(renStr);\n        this.kpgnInstance = new KPGN(this.renInstance);\n        this.boardEventController = new BoardEventController();\n    }\n\n    loadRENStr(renStr?: string) {\n        this.renInstance = REN.fromString(renStr);\n    }\n\n    resetBoard() {\n        this.renInstance = REN.fromString();\n    }\n\n    getCanMoves(): PieceIndex[] {\n        const pieceIndices = this.renInstance.genAllCanMoves();\n        return pieceIndices;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const canMovePoints = this.renInstance.getCanMovePointsByPoint(point);\n        return canMovePoints;\n    }\n\n    getAttacker(): PieceIndex | null {\n        return this.renInstance.getAttacker();\n    }\n\n    getWinColor(): string | null {\n        return this.renInstance.getWinColor();\n    }\n\n    getStuckColor(): string | null {\n        // TODO:\n        return null;\n    }\n\n    isDraw() {\n        return this.getStuckColor() || this.getDrawCountColor();\n    }\n\n    getDrawCountColor(): string | null {\n        // TODO:\n        return null;\n    }\n\n    gameOver() {\n        return this.getWinColor() || this.isDraw();\n    }\n\n    validateRENStr(renStr: string) {\n        try {\n            REN.fromString(renStr);\n            return { valid: true, error_number: 0, error: 'No errors.' };\n        } catch (error) {\n            return { valid: false, error_number: 1, error: error.message };\n        }\n    }\n\n    getRENStr() {\n        return this.renInstance.toString();\n    }\n\n    get piecesInBoardMultiArray() {\n        return this.renInstance.board.piecesMultiArray;\n    }\n\n    get piecesInBoard() {\n        return this.renInstance.board.pieces;\n    }\n\n    get piecesInGraveyard() {\n        return this.renInstance.graveyard.pieces;\n    }\n\n    // Khmer Portable Game Notation <file-name>.kpgn.json\n    getKPGN() {\n        return this.kpgnInstance.toJson();\n    }\n\n    loadKpgn(kpgnJosn: any, options: any) {\n        this.kpgnInstance = new KPGN(this.renInstance);\n    }\n\n    drawAscii() {\n        return asciiTable(this.renInstance);\n    }\n\n    get turn() {\n        return this.renInstance.turn;\n    }\n\n    set turn(turn: string) {\n        this.renInstance.turn = turn;\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const move = this.renInstance.move(moveFromIndex, moveToIndex);\n        this.kpgnInstance.moves.push(move);\n        return move;\n    }\n\n    undoMove() {\n        // TODO:\n        return false;\n    }\n\n    /**\n     * Move all pieces to graveyard except kings\n     * -> 4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB\n     */\n    clearBoard() {\n        this.renInstance = REN.fromString('4k3/8/8/8/8/8/8/3K4 w ---- -- -.- bhgqghbffffffffFFFFFFFFBHGQGHB');\n    }\n\n    getHistories() {\n        return this.kpgnInstance.moves;\n    }\n\n    checkBoardEvent() {\n        const pieceIndex = this.getAttacker();\n        if (!jsis.isNull(pieceIndex)) {\n            const boardEvent = new BoardEvent({\n                flag: EVENT_FLAG_ATTACK,\n                actorPieceIndex: pieceIndex,\n            });\n            this.boardEventController.fireEvent(boardEvent);\n        }\n        const winColor = this.getWinColor();\n        if (!jsis.isNull(winColor)) {\n            const boardEvent = new BoardEvent({\n                flag: EVENT_FLAG_WIN,\n                actorPieceIndex: pieceIndex,\n            });\n            this.boardEventController.fireEvent(boardEvent);\n        }\n    }\n    addBoardEventListener(listener: ListenerType<BoardEvent>) {\n        this.boardEventController.addBoardEventListener(listener);\n    }\n    removeBoardEventListener(listener: ListenerType<BoardEvent>) {\n        this.boardEventController.removeBoardEventListener(listener);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { HORIZONTAL_CODE_LETTERS } from './constant';\nimport jsis from './jsis';\n\nexport default class HVPont {\n    h: string;\n    v: number;\n    get x() {\n        return HORIZONTAL_CODE_LETTERS.indexOf(this.h);\n    }\n    get y() {\n        return this.v - 1;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    constructor(h: string, v?: string | number) {\n        if (jsis.isUndefined(v)) {\n            h = h[0];\n            v = h[1];\n        }\n        this.h = h;\n        this.v = Number(v);\n    }\n\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from '../ren/Piece';\nimport PieceIndex from '../ren/PieceIndex';\nimport Point from '../ren/Point';\nimport boardHelper from './boardHelper';\nimport { PIECE_COLOR_BLACK, PIECE_COLOR_WHITE } from './constant';\n// abcdecbaooooooooffffffffoooooooooooooooommmmmmmmoooooooohijlkjih\nexport type OptionsType = {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n};\nexport type CalCountPropsType = {\n    piecesString: string;\n    force: boolean;\n};\nexport default class MoveHelper implements OptionsType {\n    piecesString: string;\n    currentTurn: string;\n    isQueenMoved: boolean;\n    isKingMoved: boolean;\n    genCanMove: boolean;\n    genCanMoveForAnother: boolean;\n\n    whiteMoves: PieceIndex[];\n    blackMoves: PieceIndex[];\n    whiteKingInDanger: Point[] | null;\n    whiteKingWillInDanger: Point[] | null;\n    blackKingInDanger: Point[] | null;\n    blackKingWillInDanger: Point[] | null;\n    winColor: string | null;\n    stuckColor: string | null;\n\n    get isWhiteTurn() {\n        return Piece.isWhiteColor(this.currentTurn);\n    }\n    init(option: OptionsType) {\n        this.piecesString = option.piecesString;\n        this.currentTurn = option.currentTurn;\n        this.isQueenMoved = option.isQueenMoved;\n        this.isKingMoved = option.isKingMoved;\n\n        this.genCanMove = option.genCanMove;\n        this.genCanMoveForAnother = option.genCanMoveForAnother;\n\n        this.whiteMoves = [];\n        this.blackMoves = [];\n\n        this.whiteKingInDanger = null;\n        this.whiteKingWillInDanger = null;\n        this.blackKingInDanger = null;\n        this.blackKingWillInDanger = null;\n\n        this.winColor = null;\n        this.stuckColor = null;\n    }\n\n    generateCanMoves() {\n        const filter = boardHelper.filterPieceInBoard(this.piecesString);\n        this.whiteMoves = filter.whitePieces;\n        this.blackMoves = filter.blackPieces;\n        const genMoves = (pieceIndices: PieceIndex[]) => {\n            pieceIndices.forEach((pieceIndex) => {\n                let isHaveMoved = this.isKingMoved;\n                if (!pieceIndex.piece.isTypeKing) {\n                    isHaveMoved = pieceIndex.piece.isTypeQueen ? this.isQueenMoved : false;\n                }\n                const canMovePoints = this.genCanMovePointsByPiecePoint(\n                    pieceIndex.point,\n                    pieceIndex.piece,\n                    this.piecesString,\n                    isHaveMoved\n                );\n                pieceIndex.canMovePoints = canMovePoints;\n            });\n        };\n        genMoves(this.whiteMoves);\n        genMoves(this.blackMoves);\n    }\n\n    cleanPieceNoMove() {\n        const cleanMoves = (pieces: any[]) => {\n            let isTrue = true;\n            while (isTrue) {\n                isTrue = false;\n                for (let i = 0; i < pieces.length; i++) {\n                    const piece = pieces[i];\n                    if (!piece.canMovePoints.length) {\n                        pieces.splice(i, 1);\n                        isTrue = true;\n                        break;\n                    }\n                }\n            }\n        };\n        cleanMoves(this.whiteMoves);\n        cleanMoves(this.blackMoves);\n    }\n\n    checkIfKingInDanger() {\n        this.whiteKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.whiteKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_WHITE,\n            this.piecesString\n        );\n        this.blackKingInDanger = boardHelper.getKingInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n        this.blackKingWillInDanger = boardHelper.getKingWillInDanger(\n            PIECE_COLOR_BLACK,\n            this.piecesString\n        );\n    }\n\n    genWinLost() {\n        if (this.whiteKingInDanger && !this.whiteMoves.length) {\n            this.winColor = PIECE_COLOR_BLACK;\n        } else if (this.blackKingInDanger && !this.blackMoves.length) {\n            this.winColor = PIECE_COLOR_WHITE;\n        }\n    }\n\n    getStuck() {\n        if (this.winColor) {\n            return;\n        }\n        if (this.isWhiteTurn && !this.whiteMoves.length) {\n            this.stuckColor = PIECE_COLOR_WHITE;\n        } else if (!this.isWhiteTurn && !this.blackMoves.length) {\n            this.stuckColor = PIECE_COLOR_BLACK;\n        }\n    }\n\n    calcCanMove(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n        let moves: PieceIndex[] = [];\n        if (this.genCanMove) {\n            moves = this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        let anotherMoves: PieceIndex[] = [];\n        if (this.genCanMoveForAnother) {\n            anotherMoves = !this.isWhiteTurn ? this.whiteMoves : this.blackMoves;\n        }\n        return {\n            moves,\n            anotherMoves,\n        };\n    }\n\n    calcState(option: OptionsType) {\n        this.init(option);\n        this.generateCanMoves();\n        this.cleanPieceNoMove();\n\n        this.checkIfKingInDanger();\n        this.genWinLost();\n        this.getStuck();\n        return {\n            blackKingInDanger: this.blackKingInDanger,\n            whiteKingInDanger: this.whiteKingInDanger,\n            blackKingWillInDanger: this.blackKingWillInDanger,\n            whiteKingWillInDanger: this.whiteKingWillInDanger,\n            winColor: this.winColor,\n            stuckColor: this.stuckColor,\n            blackCountable: boardHelper.checkCountable(\n                PIECE_COLOR_BLACK,\n                this.piecesString\n            ),\n            whiteCountable: boardHelper.checkCountable(\n                PIECE_COLOR_WHITE,\n                this.piecesString\n            ),\n        };\n    }\n\n    calCount(option: CalCountPropsType) {\n        return {\n            countingBlack: boardHelper.checkCount(\n                PIECE_COLOR_BLACK,\n                option.piecesString, option.force\n            ),\n            countingWhite: boardHelper.checkCount(\n                PIECE_COLOR_WHITE,\n                option.piecesString, option.force\n            ),\n        };\n    }\n\n    genCanMovePointsByPiecePoint(point: Point, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        return boardHelper.genCanMovePointsByPiecePoint(\n            point.index,\n            piece,\n            piecesString,\n            isHasMoved\n        );\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { Point } from '../ren';\nimport { ROW_LAST_INDEX } from './constant';\n\nexport default class Rectangle {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    isContainsPoint(point: Point) {\n        const { x, y } = point;\n        const isContainsPoint = this.x <= x &&\n            (this.x + this.width) >= x &&\n            this.y <= y &&\n            (this.y + this.height) >= y;\n        return isContainsPoint;\n    }\n\n    static isValidPoint(point: Point) {\n        return new Rectangle(0, 0, ROW_LAST_INDEX, ROW_LAST_INDEX).isContainsPoint(point);\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import EventHandler from '../other/EventHandler';\r\n\r\nconst TRIGGER_MOVE = 'trigger-move';\r\n\r\nexport default class BoardEventController extends EventHandler {\r\n    constructor() {\r\n        super({\r\n            events: {\r\n                TRIGGER_MOVE,\r\n            },\r\n        });\r\n    }\r\n\r\n    removeOnTriggerMoveEventListener(listener: any) {\r\n        this._removeOnEventListener(TRIGGER_MOVE, listener);\r\n    }\r\n\r\n    addOnTriggerMoveEventListener(listener: any) {\r\n        this._addOnEventListener(TRIGGER_MOVE, listener);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","import jsis from './jsis';\nimport genMask from './genMask';\nimport {\n    PIECE_COLOR_WHITE,\n    PIECE_COLOR_BLACK,\n    EMPTY_PIECE,\n    ROW_NUMBER,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    CELL_COUNT,\n} from './constant';\nimport Point from '../ren/Point';\nimport Piece from '../ren/Piece';\nimport Rectangle from './Rectangle';\nimport { PieceIndex } from '../ren';\n\nconst mask = genMask();\n\nclass BoardHelper {\n    getCharPieceFromString(piecesString: string, index: number) {\n        if (Point.isIndexInBoard(index) && piecesString.length === CELL_COUNT) {\n            return piecesString[index];\n        }\n        return EMPTY_PIECE;\n    }\n    getCharPieceInPos(index: number, piecesString: string) {\n        return this.getCharPieceFromString(piecesString, index);\n    }\n    getPieceByIndex(index: number, piecesString: string): {\n        isValidPiece: boolean, piece: Piece | null\n    } {\n        const charCode = this.getCharPieceInPos(index, piecesString);\n        return {\n            isValidPiece: Piece.isValidPiece(charCode),\n            piece: Piece.fromCharCode(charCode),\n        };\n    }\n    convertMask = (point1: Point, index: number, color: string) => {\n        const sign = Piece.isWhiteColor(color) ? 1 : -1;\n        const point2 = Point.fromIndex(index);\n        point1.x = point1.x * sign + point2.x;\n        point1.y = point1.y * sign + point2.y;\n        return Rectangle.isValidPoint(point1) ? point1.index : null;\n    };\n    getPieceCanMovePoses(index: number, piece: Piece) {\n        const pieceIndices: number[] = [];\n        mask[piece.type].forEach((_pos: number[]) => {\n            const newIndex = this.convertMask(new Point(_pos[0], _pos[1]), index, piece.color);\n            if (!jsis.isNull(newIndex)) {\n                pieceIndices.push(newIndex);\n            }\n        });\n        return pieceIndices;\n    }\n    getPieceCanMovePosesValid(index: number, piece: Piece, piecesString: string) {\n        const _poses = this.getPieceCanMovePoses(index, piece);\n        const pieceIndices = [];\n        const n = _poses.length;\n        const thisPos = Point.fromIndex(index);\n        for (let i = 0; i < n; i++) {\n            let p = Point.fromIndex(_poses[i]);\n            const distPiece = this.getPieceByIndex(p.index, piecesString);\n            if (distPiece.isValidPiece) {\n                if (piece.color === distPiece.piece.color ||\n                    (piece.isTypeFish && p.x === thisPos.x)) {\n                    p = null;\n                }\n            } else {\n                if (piece.isTypeFish && p.x !== thisPos.x) {\n                    p = null;\n                }\n            }\n            if (!jsis.isNull(p) && piece.isTypeBoat) {\n                const _x = thisPos.x;\n                const _y = thisPos.y;\n                if (p.x === thisPos.x) {\n                    let _n = Math.abs(p.y - thisPos.y);\n                    const _s = thisPos.y < p.y ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x, _y + _s * _n), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                } else if (p.y === thisPos.y) {\n                    let _n = Math.abs(p.x - thisPos.x);\n                    const _s = thisPos.x < p.x ? 1 : -1;\n                    while (--_n > 0) {\n                        if (this.getPieceByIndex(Point.xyToIndex(_x + _s * _n, _y), piecesString).isValidPiece) {\n                            p = null;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!jsis.isNull(p)) {\n                pieceIndices.push(_poses[i]);\n            }\n        }\n        return pieceIndices;\n    }\n    replacePiecesStringAtIndex(piecesString: string, charCode: string, index: number) {\n        return piecesString.substring(0, index) + charCode + piecesString.substring(index + 1);\n    }\n    injectPiece(piecesString: string, index1: number, index2: number) {\n        const c = piecesString[index1];\n        if (!this.isCharPiecesInBoard(c, piecesString)) {\n            return null;\n        }\n        piecesString = this.replacePiecesStringAtIndex(piecesString, EMPTY_PIECE, index1);\n        piecesString = this.replacePiecesStringAtIndex(piecesString, c, index2);\n        return piecesString;\n    }\n    getKingWillInDanger(color: string, piecesString: string) {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color &&\n                p.piece.isTypeBoat) {\n                const _poses = this.getPieceCanMovePoses(i, p.piece);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    getKingInDanger(color: string, piecesString: string): Point[] | null {\n        const kingPos = piecesString.indexOf(new Piece(PIECE_TYPE_KING, color).pieceCharCode);\n        const n = piecesString.length;\n        for (let i = 0; i < n; i++) {\n            const p = this.getPieceByIndex(i, piecesString);\n            if (p.isValidPiece && p.piece.color !== color) {\n                const _poses = this.getPieceCanMovePosesValid(i, p.piece, piecesString);\n                for (let j = 0; j < _poses.length; j++) {\n                    if (_poses[j] === kingPos) {\n                        return [Point.fromIndex(i), Point.fromIndex(kingPos)];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    genCanMovePointsByPiecePoint(index: number, piece: Piece,\n        piecesString: string, isHasMoved?: boolean) {\n        const _poses = this.getPieceCanMovePosesValid(index, piece, piecesString);\n        const isHaveCaptured = this.isHaveCaptured(piecesString);\n        if (piece.isTypeKing) {\n            if (!isHaveCaptured && !isHasMoved) {\n                let p = this.convertMask(new Point(2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n                p = this.convertMask(new Point(-2, 1), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        } else if (piece.isTypeQueen) {\n            if (!isHaveCaptured && !isHasMoved) {\n                const p = this.convertMask(new Point(-0, 2), index, piece.color);\n                if (p && !this.getPieceByIndex(p, piecesString).isValidPiece) {\n                    _poses.push(p);\n                }\n            }\n        }\n        const n = _poses.length;\n        const points: Point[] = [];\n        for (let i = 0; i < n; i++) {\n            const str = this.injectPiece(piecesString, index, _poses[i]);\n            if (jsis.isNull(this.getKingInDanger(piece.color, str))) {\n                points.push(Point.fromIndex(_poses[i]));\n            }\n        }\n        return points;\n    }\n    isCharPiecesInBoard(code: string, piecesString: string) {\n        return !!~piecesString.indexOf(code);\n    }\n    getPiecesInBoard(piecesString: string) {\n        return piecesString.split('').filter((charCode: string) => {\n            return Piece.isValidPiece(charCode);\n        });\n    }\n    isHaveCaptured(piecesString: string) {\n        return this.getPiecesInBoard(piecesString).length < ROW_NUMBER * 4;\n    }\n    filterPieceInBoard(piecesString: string) {\n        const whitePieces: PieceIndex[] = [];\n        const blackPieces: PieceIndex[] = [];\n        for (let i = 0; i < piecesString.length; i++) {\n            const charCode = piecesString[i];\n            if (Piece.isValidPiece(charCode)) {\n                const pieceIndex = new PieceIndex(Point.fromIndex(i), Piece.fromCharCode(charCode));\n                if (pieceIndex.piece.isColorWhite) {\n                    whitePieces.push(pieceIndex);\n                } else {\n                    blackPieces.push(pieceIndex);\n                }\n            }\n        }\n        return {\n            whitePieces,\n            blackPieces,\n        };\n    }\n    extractPiecesToArray(piecesString: string) {\n        const piecesStringArr = piecesString.split('');\n        const pieceAll: { [key: string]: string[] } = {\n            [PIECE_COLOR_BLACK]: [],\n            [PIECE_COLOR_WHITE]: [],\n        };\n        piecesStringArr.forEach((charCode: string) => {\n            if (charCode === EMPTY_PIECE) {\n                return;\n            }\n            const piece = Piece.fromCharCode(charCode);\n            pieceAll[piece.color].push(piece.type);\n        });\n        return pieceAll;\n    }\n    isStateCount(c: string, piecesString: string) {\n        const allPieces = this.extractPiecesToArray(piecesString);\n        return allPieces[c].length === 1;\n    }\n    checkCountable(color: string, piecesString: string) {\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        return weaker.length <= 2 && stronger.length >= 2;\n    }\n    checkCount(color: string, piecesString: string, force: boolean) {\n        const countChar = (str: string[], c: string) => {\n            return str.join('').split(c).length - 1;\n        };\n        const charExist = (str: string[], c: string) => {\n            return !!~str.indexOf(c);\n        };\n\n        const pieceAll = this.extractPiecesToArray(piecesString);\n        const weaker = pieceAll[color];\n        const stronger = pieceAll[Piece.oppositeColor(color)];\n        if (weaker.length === 1 && stronger.length > 1) {\n            if (!charExist(stronger, PIECE_TYPE_FISH)) {\n                let count = 64;\n                const toukCount = countChar(stronger, PIECE_TYPE_BOAT);\n                if (toukCount) {\n                    count = toukCount > 1 ? 8 : 16;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL) > 1) {\n                    count = 22;\n                } else if (countChar(stronger, PIECE_TYPE_HORSE) > 1) {\n                    count = 32;\n                } else if (countChar(stronger, PIECE_TYPE_GENERAL)) {\n                    count = 44;\n                }\n                return [stronger.length + 1, count];\n            }\n            return [0, 64];\n        } else if (force && this.checkCountable(color, piecesString)) {\n            return [0, 64];\n        }\n        return null;\n    }\n    isUpgradable(piece: Piece, point: Point) {\n        if (piece.isTypeFish) {\n            if (piece.isColorBlack && point.y <= 2) {\n                return true;\n            }\n            if (piece.isColorWhite && point.y >= 5) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nexport default new BoardHelper();\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export const PIECE_COLOR_WHITE = 'w';\nexport const PIECE_COLOR_BLACK = 'b';\nexport const COLOR_NAMES: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'ខ្មៅ',\n    [PIECE_COLOR_WHITE]: 'ស',\n};\nexport const COLOR_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_COLOR_BLACK]: 'black',\n    [PIECE_COLOR_WHITE]: 'white',\n};\n\nexport const PIECE_TYPE_BOAT = 'b'; // Boat\nexport const PIECE_TYPE_HORSE = 'h'; // Horse\nexport const PIECE_TYPE_GENERAL = 'g'; // General\nexport const PIECE_TYPE_KING = 'k'; // King\nexport const PIECE_TYPE_QUEEN = 'q'; // Queen\nexport const PIECE_TYPE_FISH = 'f'; // Fish\nexport const PIECE_TYPE_TRANSFORM_FISH = 't'; // Transform fish\nexport const PIECE_NAMES: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'ទូក',\n    [PIECE_TYPE_HORSE]: 'សេះ',\n    [PIECE_TYPE_GENERAL]: 'គោល',\n    [PIECE_TYPE_KING]: 'ស្តេច',\n    [PIECE_TYPE_QUEEN]: 'នាង',\n    [PIECE_TYPE_FISH]: 'ត្រី',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'ត្រីបក',\n};\nexport const PIECE_NAMES_ENGLISH: { [key: string]: string } = {\n    [PIECE_TYPE_BOAT]: 'boat',\n    [PIECE_TYPE_HORSE]: 'horse',\n    [PIECE_TYPE_GENERAL]: 'general',\n    [PIECE_TYPE_KING]: 'king',\n    [PIECE_TYPE_QUEEN]: 'queen',\n    [PIECE_TYPE_FISH]: 'fish',\n    [PIECE_TYPE_TRANSFORM_FISH]: 'transformed-fish',\n};\nexport const EMPTY_PIECE = '.';\nexport const PIECE_COLOR_EMPTY = '.';\nexport const BOARD_SEPARATOR = '/';\n\nexport const ROW_NUMBER = 8;\nexport const ROW_FIRST_INDEX = 0;\nexport const ROW_LAST_INDEX = 7;\nexport const CELL_COUNT = ROW_NUMBER * ROW_NUMBER;\n\nexport const HORIZONTAL_CODE_LETTERS = 'abcdefgh';\nexport const HORIZONTAL_NOTE_LETTERS = ['ក', 'ខ', 'គ', 'ឃ', 'ង', 'ច', 'ឆ', 'ជ'];\nexport const VERTICAL_NOTE_LETTERS = ['១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩', '១០',\n    '១១', '១២', '១៣', '១៤', '១៥', '១៦', '១៧', '១៨', '១៩', '២០',\n    '២១', '២២', '២៣', '២៤', '២៥', '២៦', '២៧', '២៨', '២៩', '៣០'];\nexport const HORIZONTAL_NOTE_LETTERS_ENGLISH = 'abcdefgh';\nexport const VERTICAL_NOTE_LETTERS_ENGLISH = Array.from({ length: 30 }, (_, i) => `${i + 1}`);\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_QUEEN,\n} from './constant';\n\nexport default function genMask() {\n    const mask: { [key: string]: number[][] } = {};\n    mask[PIECE_TYPE_BOAT] = [\n        [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8],\n        [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8],\n        [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0],\n        [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0],\n    ];\n    mask[PIECE_TYPE_HORSE] = [\n        [-1, -2],\n        [1, -2],\n        [-2, -1],\n        [2, -1],\n        [-1, 2],\n        [1, 2],\n        [-2, 1],\n        [2, 1],\n    ];\n    mask[PIECE_TYPE_QUEEN] = [\n        [-1, -1],\n        [1, -1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_GENERAL] = mask[PIECE_TYPE_QUEEN].concat([\n        [0, 1],\n    ]);\n    mask[PIECE_TYPE_KING] = mask[PIECE_TYPE_GENERAL].concat([\n        [0, -1],\n        [1, 0],\n        [-1, 0],\n    ]);\n    mask[PIECE_TYPE_FISH] = [\n        [0, 1],\n        [-1, 1],\n        [1, 1],\n    ];\n    mask[PIECE_TYPE_TRANSFORM_FISH] = mask[PIECE_TYPE_QUEEN];\n    return mask;\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Rectangle } from './Rectangle';\nexport { default as boardEventController } from './boardEventController';\nexport { default as boardHelper } from './boardHelper';\nexport { default as genMask } from './genMask';\nexport { default as jsis } from './jsis';\nexport { default as HVPont } from './HVPont';\nexport { default as MoveHelper } from './MoveHelper';\nexport { OptionsType, CalCountPropsType } from './MoveHelper';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","const jsis = {\n    isValid(v: any) {\n        return !this.isNull(v) && !this.isUndefined(v);\n    },\n    isNull(v: any) {\n        return v === null;\n    },\n    isUndefined(v: any) {\n        return typeof v === 'undefined';\n    },\n    isString(str: any) {\n        return this.isValid(str) && typeof str === 'string';\n    },\n    isNotEmpty(str: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isValidString(str) && str != '';\n    },\n    isNumber(n: any) {\n        return this.isValid(n) && typeof n === 'number';\n    },\n    isStringNumber(n: string) {\n        // eslint-disable-next-line eqeqeq\n        return this.isString(n) && n != '' && !isNaN(Number(n));\n    },\n    isArray(arr: any) {\n        return this.isValid(arr) && arr instanceof Array;\n    },\n    isFunction(f: any) {\n        return this.isValid(f) && typeof f === 'function';\n    },\n    isObject(o: any) {\n        return this.isValid(o) && o instanceof Object;\n    },\n    isBoolean(b: any) {\n        return this.isValid(b) && typeof b === 'boolean';\n    },\n    isTrue(b: any) {\n        return this.isValidBoolean(b) && b;\n    },\n    isFalse(b: any) {\n        return this.isValidBoolean(b) && !b;\n    },\n    isPoint(p: { x: any; y: any; }) {\n        const isPoint = this.isValid(p) &&\n            this.isValidObject(p) &&\n            this.isValidNumber(p.x) &&\n            this.isValidNumber(p.y);\n        return isPoint;\n    },\n    isSize(size: { width: any; height: any; }) {\n        const isSize = this.isValid(size) &&\n            this.isValidObject(size) &&\n            this.isValidNumber(size.width) &&\n            this.isValidNumber(size.height);\n        return isSize;\n    },\n    isOdd(n: number) {\n        return !!(n % 2);\n    },\n    isEven(n: any) {\n        return !this.isOdd(n);\n    },\n    isUpperCase(str: string) {\n        return str === str.toUpperCase();\n    },\n};\n\nexport default jsis;\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export * from './brain';\nexport * from './kpgn';\nexport * from './ren';\nexport * from './other';\nexport { default as KhmerChess } from './KhmerChess';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\n\nexport type CapturedPropType = {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n};\nexport default class Captured implements CapturedPropType {\n    piece: Piece;\n    fromBoardPoint: Point;\n    toGraveyardPoint: Point;\n    constructor({ piece, fromBoardPoint: fromBoardPoint, toGraveyardPoint: toGraveyardPoint }: CapturedPropType) {\n        this.piece = piece;\n        this.fromBoardPoint = fromBoardPoint;\n        this.toGraveyardPoint = toGraveyardPoint;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\nimport Move from './Move';\nimport Player from './Player';\nimport Result from './Result';\nimport Timer from './Timer';\n\n/**\n * Khmer portable game notation\n */\n// TODO: improve KPGN\nexport default class KPGN {\n    event: string;\n    date: string;\n    location: string;\n    players = {\n        white: new Player(),\n        black: new Player(),\n    };\n    result = {\n        last: {\n            whiteWin: false,\n            blackWin: false,\n        },\n        white: new Result(),\n    };\n\n    moves: Move[];\n    renInstant: REN;\n    timer: Timer;\n\n    constructor(renInstant: REN) {\n        this.renInstant = renInstant;\n        this.moves = [];\n    }\n\n    toJson() {\n        return {\n            event: this.event,\n            date: this.date,\n            location: this.location,\n            players: {\n                white: this.players.white.toJson(),\n                black: this.players.black.toJson(),\n            },\n            result: {\n                last: {\n                    whiteWin: this.result.last.whiteWin,\n                    blackWin: this.result.last.blackWin,\n                },\n                white: this.result.white.toJson(),\n            },\n            moves: this.moves.map((m) => m.toJson()),\n            ren: this.renInstant.toString(),\n            timer: this.timer.toJson(),\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport { boardHelper, PIECE_TYPE_TRANSFORM_FISH } from '../brain';\nimport {\n    PIECE_FLAG_JUMP,\n    PIECE_FLAG_KILL,\n    PIECE_FLAG_UPGRADE,\n} from '../ren/constant';\nimport Piece from '../ren/Piece';\nimport Point from '../ren/Point';\nimport Captured from './Captured';\n\nexport type MovePropType = {\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isJumping?: boolean; // King or Queen would jump on first start\n    isUpgrading?: boolean;\n    captured?: Captured;\n};\nexport default class Move implements MovePropType {\n    piece: Piece;\n    moveFrom: Point;\n    moveTo: Point;\n    isJumping?: boolean;\n    isUpgrading?: boolean;\n    captured?: Captured;\n    constructor({ piece, moveFrom, moveTo, isJumping,\n        isUpgrading, captured,\n    }: MovePropType) {\n        this.piece = piece;\n        this.moveFrom = moveFrom;\n        this.moveTo = moveTo;\n        this.isJumping = !!isJumping;\n        this.isUpgrading = !!isUpgrading;\n        this.captured = captured || null;\n        if (boardHelper.isUpgradable(piece, moveTo)) {\n            this.isUpgrading = true;\n            piece.type = PIECE_TYPE_TRANSFORM_FISH;\n        }\n    }\n\n    // Spec: Fc5d6xf => White fish (F) moved from c5 to d6 killed black fish (f)\n    static fromMovedString(graveyardLastIndex: number) {\n        // const str = 'Fc5d6j';\n        const str = 'Fc5d6xf';\n        const piece = Piece.fromCharCode(str[0]);\n        const moveFrom = Point.fromIndexCode(str.substr(1, 2));\n        const moveTo = Point.fromIndexCode(str.substr(3, 2));\n        const move = new Move({\n            piece,\n            moveFrom,\n            moveTo,\n        });\n        if (str[5] === PIECE_FLAG_KILL) {\n            const capturedPieceChar = str[6];\n            move.captured = new Captured({\n                fromBoardPoint: moveTo,\n                toGraveyardPoint: Point.fromIndexGraveyardIndex(graveyardLastIndex),\n                piece: Piece.fromCharCode(capturedPieceChar),\n            });\n        } else if (str[5] === PIECE_FLAG_JUMP) {\n            move.isJumping = true;\n        }\n        return move;\n    }\n    // Fc5d6j: jump, Fc5d6x: kill, Fc5d6xt: kill&upgrade\n    toString() {\n        const pCode = this.piece.pieceCharCode;\n        const fIndexCode = this.moveFrom.indexCode;\n        const tIndexCode = this.moveTo.indexCode;\n        let flags = this.captured ? PIECE_FLAG_KILL : '';\n        if (this.isJumping) {\n            flags += PIECE_FLAG_JUMP;\n        }\n        if (this.isUpgrading) {\n            flags += PIECE_FLAG_UPGRADE;\n        }\n        return `${pCode}${fIndexCode}${tIndexCode}${flags}`;\n    }\n\n    toJson() {\n        return {\n            fromIndex: this.moveFrom.index,\n            toIndex: this.moveTo.index,\n            isJumping: this.isJumping,\n            capturedPiece: this.captured ? this.captured.piece.pieceCharCode : null,\n        };\n    }\n\n    getMessage(isEnglish?: boolean) {\n        if (isEnglish) {\n            let captured = '';\n            if (this.captured) {\n                captured = ` captures ${this.captured.piece.titleEnglish}`;\n            }\n            const upgrade = this.isUpgrading ? ' transforms' : '';\n            return `${this.piece.titleEnglish} moved from ${this.moveFrom.titleEnglish} to ${this.moveTo.titleEnglish}${upgrade}${captured}`;\n        } else {\n            let captured = '';\n            if (this.captured) {\n                captured = ` ស៊ី${this.captured.piece.title}`;\n            }\n            const upgrade = this.isUpgrading ? ' បក' : '';\n            return `${this.piece.title} ដើរ​ពី ${this.moveFrom.title} ទៅ ${this.moveTo.title}${upgrade}${captured}`;\n        }\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export default class Player {\n    name: string | null = null;\n    id: string | null = null;\n    constructor(id?: string, name?: string) {\n        this.id = id;\n        this.name = name;\n    }\n\n    toJson() {\n        return {\n            id: this.id,\n            name: this.name,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export default class Result {\n    win = 0;\n    draw = 0;\n    lost = 0;\n    constructor(win = 0, draw = 0, lost = 0) {\n        this.win = win;\n        this.draw = draw;\n        this.lost = lost;\n    }\n\n    toJson() {\n        return {\n            win: this.win,\n            draw: this.draw,\n            lost: this.lost,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export default class Timer {\n    totalSecond: string;\n    currentWhite: string;\n    currentBlack: string;\n    constructor(totalSecond: string, currentWhite: string, currentBlack: string) {\n        this.totalSecond = totalSecond;\n        this.currentWhite = currentWhite;\n        this.currentBlack = currentBlack;\n    }\n\n    toJson() {\n        return {\n            totalSecond: this.totalSecond,\n            currentWhite: this.currentWhite,\n            currentBlack: this.currentBlack,\n        };\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as KPGN } from './KPGN';\nexport { default as Move } from './Move';\nexport { MovePropType } from './Move';\nexport { default as Captured } from './Captured';\nexport { CapturedPropType } from './Captured';\nexport { default as Player } from './Player';\nexport { default as Result } from './Result';\nexport { default as Timer } from './Timer';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\r\n    EVENT_FLAG_ATTACK,\r\n    EVENT_FLAG_WINN,\r\n    PieceIndex,\r\n} from '../ren';\r\nimport EventHandler, { ListenerType } from './EventHandler';\r\n\r\nexport class BoardEvent {\r\n    flag: string;\r\n    actorPieceIndex: PieceIndex;\r\n    get isAttack() {\r\n        return this.flag === EVENT_FLAG_ATTACK;\r\n    }\r\n    get isWin() {\r\n        return this.flag === EVENT_FLAG_WINN;\r\n    }\r\n    constructor({ flag, actorPieceIndex }:\r\n        { flag: string, actorPieceIndex: PieceIndex }) {\r\n        this.flag = flag;\r\n        this.actorPieceIndex = actorPieceIndex;\r\n    }\r\n}\r\nexport default class BoardEventController extends EventHandler {\r\n    static EVENT = 'event';\r\n    constructor() {\r\n        super({\r\n            events: {\r\n                EVENT: BoardEventController.EVENT,\r\n            },\r\n        });\r\n    }\r\n    fireEvent(boardEvent: BoardEvent) {\r\n        this._addPropEvent(BoardEventController.EVENT, boardEvent);\r\n    }\r\n    addBoardEventListener(listener: ListenerType<BoardEvent>) {\r\n        this._addOnEventListener(BoardEventController.EVENT, listener);\r\n    }\r\n    removeBoardEventListener(listener: ListenerType<BoardEvent>) {\r\n        this._removeOnEventListener(BoardEventController.EVENT, listener);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","export type ListenerType<T> = (data?: T) => any;\r\n\r\nexport default class EventHandler {\r\n    _onEventListeners: { [key: string]: any } = {};\r\n    _propEvent: any = [];\r\n    events: any;\r\n    _isLockProp: boolean;\r\n    constructor(options: { events: any }) {\r\n        this._onEventListeners = {};\r\n        this._propEvent = [];\r\n        this.events = options.events;\r\n    }\r\n\r\n    _checkPropEvent() {\r\n        if (this._isLockProp) {\r\n            return;\r\n        }\r\n        while (this._propEvent.length) {\r\n            const event = this._propEvent.shift();\r\n            this._checkOnEvent(event.name, event.data);\r\n        }\r\n    }\r\n\r\n    _addPropEvent(event: string, data?: any) {\r\n        this._propEvent.push({\r\n            name: event,\r\n            data,\r\n        });\r\n        this._checkPropEvent();\r\n    }\r\n\r\n    _guardEventName(eventName?: string) {\r\n        if (!eventName) {\r\n            throw new Error('invalid event name');\r\n        }\r\n    }\r\n\r\n    _checkOnEvent(eventName: string, data?: any) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].forEach((listener: ListenerType<any>) => {\r\n            listener(data);\r\n        });\r\n    }\r\n\r\n    _addOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        this._onEventListeners[eventName].push(listener);\r\n    }\r\n\r\n    _removeOnEventListener(eventName: string, listener: ListenerType<any>) {\r\n        this._guardEventName(eventName);\r\n        this._onEventListeners[eventName] = this._onEventListeners[eventName] || [];\r\n        const index = this._onEventListeners[eventName].indexOf(listener);\r\n        ~index && this._onEventListeners[eventName].splice(index, 1);\r\n    }\r\n}\r\n/*\r\n * Copyright (c) 2021, K4us\r\n * Author: Raksa Eng <eng.raksa@gmail.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n *---------------------------------------------------------------------------- */","export { default as EventHandler } from './EventHandler';\nexport { ListenerType } from './EventHandler';\nexport { default as BoardEventController } from './BoardEventController';\nexport { BoardEvent } from './BoardEventController';\nexport { default as table } from './table';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import REN from '../ren/REN';\n\nexport default function asciiTable(renInstance: REN) {\n  const arr = renInstance.board.piecesMultiArray;\n  const str = '  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓';\n  const result = arr.reverse().reduce((s, subArr, i) => {\n    const rs = subArr.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n    const bottom = i === arr.length - 1 ? '┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛' : '┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫';\n    s += `\n${8 - i} ┃${rs}┃\n  ${bottom}`;\n    return s;\n  }, str);\n  const gyTStr = renInstance.graveyard.pieces.map(() => '━━━').join('┳');\n  const gyStr = renInstance.graveyard.pieces.map((p) => ` ${p ? p.pieceCharCode : ' '} `).join('┃');\n  const gyBStr = renInstance.graveyard.pieces.map(() => '━━━').join('┻');\n  const graveyardStr = `  ┏${gyTStr}┓\n  ┃${gyStr}┃\n  ┗${gyBStr}┛`;\n  return `${result}\n    a   b   c   d   e   f   g   h\n${graveyardStr}`;\n}\n\n/*\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n8 ┃   ┃   ┃   ┃   ┃ k ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n7 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n6 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n5 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n4 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n3 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n2 ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n  ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫\n1 ┃   ┃   ┃   ┃ K ┃   ┃   ┃   ┃   ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n    a   b   c   d   e   f   g   h\n  ┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓\n  ┃ b ┃ h ┃ g ┃ q ┃ g ┃ h ┃ b ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ f ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ F ┃ B ┃ H ┃ G ┃ Q ┃ G ┃ H ┃ B ┃\n  ┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛\n */\n\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\nimport PieceIndex from './PieceIndex';\nimport { DEFAULT_BOARD_STR } from './constant';\nimport { BOARD_SEPARATOR, CELL_COUNT, EMPTY_PIECE, ROW_NUMBER } from '../brain/constant';\nimport jsis from '../brain/jsis';\nimport Point from './Point';\n\n/**\n * BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb => bhgqkghb/......../ffffffff/......../......../FFFFFFFF/......../BHGKQGHB\n */\n\nexport default class Board {\n    pieceIndices = Array.from({\n        length: CELL_COUNT,\n    }, (_, i) => {\n        const point = Point.fromIndex(i);\n        return new PieceIndex(point, null);\n    });\n\n    constructor(boardStr: any) {\n        if (jsis.isUndefined(boardStr)) {\n            boardStr = DEFAULT_BOARD_STR;\n        }\n        const newBoardStr = this.extract(boardStr).replace(/\\//g, '');\n        if (newBoardStr.length < CELL_COUNT ||\n            !Piece.isValidPiecesString(newBoardStr)) {\n            throw new Error(`Invalid board string ${boardStr}`);\n        }\n        this.pieceIndices = newBoardStr.split('').map((charCode: string, i: number) => {\n            const point = Point.fromIndex(i);\n            return new PieceIndex(point, charCode === EMPTY_PIECE ? null : Piece.fromCharCode(charCode));\n        });\n    }\n\n    get piecesMultiArray() {\n        const arr: Piece[][] = [[], [], [], [], [], [], [], []];\n        this.pieceIndices.forEach((pieceIndex) => {\n            arr[pieceIndex.point.y][pieceIndex.point.x] = pieceIndex.piece;\n        });\n        return arr;\n    }\n\n    get pieces() {\n        return this.pieceIndices.map((pieceIndex) => {\n            return pieceIndex.piece;\n        });\n    }\n\n    compress(str: string) {\n        const reg = new RegExp(`(\\\\${EMPTY_PIECE}+)`, 'g');\n        return str.replace(reg, ($1: any) => $1.length);\n    }\n\n    extract(str: string) {\n        return str.replace(/(\\d+)/g, ($1: any) => {\n            // $1 == 3 => '...', bh6 => 'bh......'\n            return Array.from({\n                length: $1,\n            }, () => EMPTY_PIECE).join('');\n        });\n    }\n\n    toStringFull(pieceIndices: PieceIndex[] = this.pieceIndices) {\n        const str = pieceIndices.map((pieceIndex, i) => {\n            const p = pieceIndex.toPieceCharCode();\n            if (i && i % ROW_NUMBER === 0 && i !== CELL_COUNT) {\n                return `${BOARD_SEPARATOR}${p}`;\n            }\n            return p;\n        }).join('');\n        return str;\n    }\n    toStringFullNoSeparate() {\n        let str = this.toStringFull();\n        str = str.replace(/\\//g, '');\n        return str;\n    }\n\n    toString(pieceIndices?: PieceIndex[]) {\n        let str = this.toStringFull(pieceIndices);\n        str = this.compress(str);\n        return str;\n    }\n\n    getPieceAtIndex(index: number): Piece | null {\n        return this.pieceIndices[index].piece;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import jsis from '../brain/jsis';\nimport { NOT_SET } from './constant';\n\n// 23.-\nexport default class CountDown {\n    white: number | null = null;\n    black: number | null = null;\n    constructor(countdownStr = '') {\n        const newCountdownStr = countdownStr.split('.');\n        this.white = jsis.isStringNumber(newCountdownStr[0]) ? Number(newCountdownStr[0]) : null;\n        this.black = jsis.isStringNumber(newCountdownStr[1]) ? Number(newCountdownStr[1]) : null;\n        if (!jsis.isNull(this.white) && !jsis.isNull(this.white)) {\n            throw new Error(`Invalid countdown string ${countdownStr}`);\n        }\n    }\n\n    toString() {\n        let str = `${jsis.isNull(this.white) ? NOT_SET : this.white}`;\n        str += `.${jsis.isNull(this.black) ? NOT_SET : this.black}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Piece from './Piece';\n\nexport default class Graveyard {\n    pieces: Piece[] = [];\n    get lastIndex() {\n        return this.pieces.length - 1;\n    }\n    constructor(graveyardStr?: string) {\n        if (graveyardStr) {\n            if (graveyardStr.length > 30 ||\n                !Piece.isValidPiecesString(graveyardStr, true)) {\n                throw new Error(`Invalid graveyard string ${graveyardStr}`);\n            }\n            this.pieces = graveyardStr.split('').map((charCode, i) => {\n                const p = Piece.fromCharCode(charCode);\n                if (p.isTypeKing) {\n                    throw new Error(`King cannot die graveyard:${graveyardStr}`);\n                }\n                return p;\n            });\n        }\n    }\n\n    toString() {\n        return this.pieces.map((p) => {\n            return p.pieceCharCode;\n        }).join('');\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING } from '../brain/constant';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King has attacked, this will effect jumping\n */\nexport default class KAttacked {\n    whiteKing = false;\n    blackKing = false;\n    constructor(kAttackedStr?: string) {\n        if (kAttackedStr) {\n            this.whiteKing = !!~kAttackedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.blackKing = !!~kAttackedStr.indexOf(PIECE_TYPE_KING);\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { PIECE_TYPE_KING, PIECE_TYPE_QUEEN } from '../brain/constant';\nimport { NOT_SET } from './constant';\nimport Piece from './Piece';\n\n/**\n * King or Queen has moved, the will effect jumping\n */\nexport default class KqMoved {\n    whiteKing = false;\n    whiteQueen = false;\n    blackKing = false;\n    blackQueen = false;\n    constructor(kqMovedStr?: string) {\n        if (kqMovedStr) {\n            this.whiteKing = !!~kqMovedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_KING));\n            this.whiteQueen = !!~kqMovedStr.indexOf(Piece.toWhiteCharCode(PIECE_TYPE_QUEEN));\n            this.blackKing = !!~kqMovedStr.indexOf(PIECE_TYPE_KING);\n            this.blackQueen = !!~kqMovedStr.indexOf(PIECE_TYPE_QUEEN);\n        }\n    }\n\n    toString() {\n        let str = `${this.whiteKing ? Piece.toWhiteCharCode(PIECE_TYPE_KING) : NOT_SET}`;\n        str += `${this.whiteQueen ? Piece.toWhiteCharCode(PIECE_TYPE_QUEEN) : NOT_SET}`;\n        str += `${this.blackKing ? PIECE_TYPE_KING : NOT_SET}`;\n        str += `${this.blackQueen ? PIECE_TYPE_QUEEN : NOT_SET}`;\n        return str;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import {\n    PIECE_COLOR_BLACK,\n    PIECE_COLOR_WHITE,\n    PIECE_TYPE_TRANSFORM_FISH,\n    PIECE_TYPE_FISH,\n    PIECE_TYPE_BOAT,\n    PIECE_TYPE_HORSE,\n    PIECE_TYPE_GENERAL,\n    PIECE_TYPE_KING,\n    PIECE_TYPE_QUEEN,\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n    PIECE_NAMES,\n    COLOR_NAMES,\n    PIECE_NAMES_ENGLISH,\n    COLOR_NAMES_ENGLISH,\n} from '../brain/constant';\nimport jsis from '../brain/jsis';\n\nexport default class Piece {\n    type: string;\n    color: string;\n    get colorOpponent() {\n        return Piece.oppositeColor(this.color);\n    }\n    get pieceCharCode() {\n        if (this.isColorWhite) {\n            return this.pieceCharCodeWhite;\n        }\n        return this.type;\n    }\n    get pieceCharCodeWhite() {\n        return Piece.toWhiteCharCode(this.type);\n    }\n\n    get title() {\n        return `${PIECE_NAMES[this.type]}${COLOR_NAMES[this.color]}`;\n    }\n    get titleEnglish() {\n        return `${COLOR_NAMES_ENGLISH[this.color]}-${PIECE_NAMES_ENGLISH[this.type]}`;\n    }\n    _isTypeEqual(type: string) {\n        return this.type === type;\n    }\n    get isTypeKing() {\n        return this._isTypeEqual(PIECE_TYPE_KING);\n    }\n    get isTypeQueen() {\n        return this._isTypeEqual(PIECE_TYPE_QUEEN);\n    }\n    get isTypeBoat() {\n        return this._isTypeEqual(PIECE_TYPE_BOAT);\n    }\n    get isTypeHorse() {\n        return this._isTypeEqual(PIECE_TYPE_HORSE);\n    }\n    get isTypeGeneral() {\n        return this._isTypeEqual(PIECE_TYPE_GENERAL);\n    }\n    get isTypeFish() {\n        return this._isTypeEqual(PIECE_TYPE_FISH);\n    }\n    get isTypeTransformedFish() {\n        return this._isTypeEqual(PIECE_TYPE_TRANSFORM_FISH);\n    }\n    get isColorBlack() {\n        return Piece.isBlackColor(this.color);\n    }\n    get isColorWhite() {\n        return Piece.isWhiteColor(this.color);\n    }\n\n\n    constructor(type: string, color: string) {\n        this.type = Piece.toNormalCharCode(type);\n        this.color = color;\n    }\n\n    static fromCharCode(charCode: string) {\n        if (!Piece.isValidPiece(charCode)) {\n            return null;\n        }\n        const color = Piece.isWhiteCharCode(charCode) ? PIECE_COLOR_WHITE : PIECE_COLOR_BLACK;\n        const type = Piece.toNormalCharCode(charCode);\n        return new Piece(type, color);\n    }\n\n    get originPiece(): Piece {\n        if (this.isTypeTransformedFish) {\n            return new Piece(PIECE_TYPE_FISH, this.color);\n        }\n        return this;\n    }\n\n    static get pieceChars() {\n        return [\n            PIECE_TYPE_BOAT,\n            PIECE_TYPE_HORSE,\n            PIECE_TYPE_GENERAL,\n            PIECE_TYPE_KING,\n            PIECE_TYPE_QUEEN,\n            PIECE_TYPE_FISH,\n            PIECE_TYPE_TRANSFORM_FISH,\n        ];\n    }\n    static get colorChars() {\n        return [\n            PIECE_COLOR_WHITE,\n            PIECE_COLOR_BLACK,\n        ];\n    }\n\n\n    static toWhiteCharCode(charCode: string) {\n        return charCode.toUpperCase();\n    }\n    static isWhiteCharCode(charCode: string) {\n        return jsis.isUpperCase(charCode);\n    }\n    static toBlackCharCode(charCode: string) {\n        return charCode.toLowerCase();\n    }\n    static toNormalCharCode(charCode: string) {\n        return Piece.toBlackCharCode(charCode);\n    }\n\n    static isValidPiece(charCode: string) {\n        return charCode !== EMPTY_PIECE;\n    }\n    static isWhiteColor(color: string) {\n        return color === PIECE_COLOR_WHITE;\n    }\n    static isBlackColor(color: string) {\n        return color === PIECE_COLOR_BLACK;\n    }\n    static oppositeColor(color: any) {\n        return Piece.isWhiteColor(color) ? PIECE_COLOR_BLACK : PIECE_COLOR_WHITE;\n    }\n\n    static isValidPiecesString(str: string, onlyPiece?: boolean) {\n        const ruler = onlyPiece ? allPiecesString.filter((c: string) => {\n            return !~[EMPTY_PIECE, BOARD_SEPARATOR].indexOf(c);\n        }) : allPiecesString;\n        return !str.split('').some((c: string) => {\n            return !~ruler.indexOf(c);\n        });\n    }\n}\n\nconst allPiecesString: string[] = [\n    ...Piece.pieceChars,\n    ...Piece.pieceChars.map((pieceChar: string) => {\n        return Piece.toWhiteCharCode(pieceChar);\n    }),\n    EMPTY_PIECE,\n    BOARD_SEPARATOR,\n];\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import { EMPTY_PIECE } from '../brain/constant';\nimport jsis from '../brain/jsis';\nimport Piece from './Piece';\nimport Point from './Point';\n\nexport default class PieceIndex {\n    point: Point;\n    piece: Piece | null;\n    canMovePoints: Point[] = [];\n    constructor(point: Point, piece: Piece | null) {\n        this.point = point;\n        this.piece = piece;\n    }\n\n    toCode() {\n        return jsis.isNull(this.piece) ? `${this.piece.pieceCharCode}${this.point.indexCode}` : null;\n    }\n\n    toPieceCharCode() {\n        return jsis.isNull(this.piece) ? EMPTY_PIECE : this.piece.pieceCharCode;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","\nimport {\n    CELL_COUNT,\n    HORIZONTAL_CODE_LETTERS,\n    HORIZONTAL_NOTE_LETTERS,\n    ROW_NUMBER,\n    VERTICAL_NOTE_LETTERS,\n} from '../brain/constant';\n\nexport default class Point {\n    x: number;\n    y: number;\n    get index() {\n        return Point.xyToIndex(this.x, this.y);\n    }\n    get graveyardIndex() {\n        return this.x;\n    }\n    get indexCode() {\n        return `${this.h}${this.v}`;\n    }\n    get title() {\n        return `${HORIZONTAL_NOTE_LETTERS[this.x]}${VERTICAL_NOTE_LETTERS[this.y]}`;\n    }\n    get titleEnglish() {\n        return this.indexCode;\n    }\n    get h() {\n        return HORIZONTAL_CODE_LETTERS[this.x];\n    }\n    get v() {\n        return this.y + 1;\n    }\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n    static xyToIndex(x: number, y: number) {\n        return y * ROW_NUMBER + x;\n    }\n    static indexCodeToXY(indexCode: string) {\n        const x = HORIZONTAL_CODE_LETTERS.indexOf(indexCode[0]);\n        const y = Number(indexCode[1]) - 1;\n        return { x, y };\n    }\n    static indexCodeToIndex(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return Point.xyToIndex(x, y);\n    }\n    static fromIndexCode(indexCode: string) {\n        const { x, y } = Point.indexCodeToXY(indexCode);\n        return new Point(x, y);\n    }\n    static indexToXY(index: number) {\n        const x = index % ROW_NUMBER;\n        const y = Math.floor(index / ROW_NUMBER);\n        return { x, y };\n    }\n    static fromIndex(index: number) {\n        const { x, y } = Point.indexToXY(index);\n        return new Point(x, y);\n    }\n    static fromIndexGraveyardIndex(index: number) {\n        return new Point(index, 0);\n    }\n    static isIndexInBoard(index: number) {\n        return index >= 0 && index <= CELL_COUNT - 1;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","import Board from './Board';\nimport KqMoved from './KqMoved';\nimport KAttacked from './KAttacked';\nimport CountDown from './CountDown';\nimport Graveyard from './Graveyard';\nimport {\n    DEFAULT_BOARD_STR,\n    STRING_COUNT,\n} from './constant';\nimport { Captured } from '../kpgn';\nimport Move from '../kpgn/Move';\nimport Point from './Point';\nimport Piece from './Piece';\nimport { PieceIndex } from '.';\nimport MoveHelper from '../brain/MoveHelper';\nimport { PIECE_COLOR_WHITE } from '../brain/constant';\nimport jsis from '../brain/jsis';\n\n/**\n * Raksa-Eng Notation\n * ren: <pieces on board> <turn w|b> <king&queen moved ----|SNsn> <king attack --|Kk> <countdown -.-|-.4> <pieces in graveyard>\n */\nexport type RENPropType = {\n    boardStr: string;\n    turnStr: string;\n    kqMovedStr: string;\n    kAttackedStr: string;\n    countdownStr: string;\n    graveyardStr: string;\n}\nexport default class REN {\n    board: Board;\n    turn: string;\n    kqMoved: KqMoved;\n    kAttacked: KAttacked;\n    countdown: CountDown;\n    graveyard: Graveyard;\n    moveHelper: MoveHelper;\n    constructor(renProps: RENPropType) {\n        this.moveHelper = new MoveHelper();\n        this.init(renProps);\n    }\n\n    init({\n        boardStr,\n        turnStr,\n        kqMovedStr,\n        kAttackedStr,\n        countdownStr,\n        graveyardStr }: RENPropType) {\n        this.board = new Board(boardStr);\n        this.turn = turnStr || PIECE_COLOR_WHITE;\n        this.kqMoved = new KqMoved(kqMovedStr);\n        this.kAttacked = new KAttacked(kAttackedStr);\n        this.countdown = new CountDown(countdownStr);\n        this.graveyard = new Graveyard(graveyardStr);\n        const invalidPiecesString = this.isInvalidPieceCount();\n        if (invalidPiecesString) {\n            let msg = `Invalid piece string board:${boardStr}`;\n            msg += `, graveyard:${graveyardStr}, count:${invalidPiecesString}`;\n            throw new Error(msg);\n        }\n        this.moveHelper = new MoveHelper();\n    }\n\n    isInvalidPieceCount() {\n        const pieces = this.board.pieceIndices.map((pos) => {\n            return pos.piece;\n        }).filter((p) => {\n            return !jsis.isNull(p);\n        }).concat(this.graveyard.pieces).map((p) => {\n            return p.originPiece;\n        });\n        const piecesCount = pieces.reduce((obj: any, p) => {\n            obj[p.pieceCharCode] = obj[p.pieceCharCode] || 0;\n            obj[p.pieceCharCode]++;\n            return obj;\n        }, {});\n        const str = Object.keys(piecesCount).map((k) => {\n            return `${k}${piecesCount[k]}`;\n        }).sort().join('');\n        if (str === STRING_COUNT) {\n            return false;\n        }\n        return str;\n    }\n\n    static fromString(renStr?: string) {\n        if (jsis.isUndefined(renStr)) {\n            renStr = DEFAULT_BOARD_STR;\n        }\n        const renArr = renStr.split(' ');\n        return new REN({\n            boardStr: renArr[0],\n            turnStr: renArr[1],\n            kqMovedStr: renArr[2],\n            kAttackedStr: renArr[3],\n            countdownStr: renArr[4],\n            graveyardStr: renArr[5],\n        });\n    }\n\n    move(moveFromIndex: number, moveToIndex: number): Move | null {\n        const piece = this.board.getPieceAtIndex(moveFromIndex);\n        if (jsis.isNull(piece)) {\n            return null;\n        }\n        this.board.pieceIndices[moveFromIndex].piece = null;\n        const move = new Move({\n            moveFrom: Point.fromIndex(moveFromIndex),\n            moveTo: Point.fromIndex(moveToIndex),\n            piece,\n        });\n        const targetPiece = this.board.getPieceAtIndex(moveToIndex);\n        if (targetPiece) {\n            this.graveyard.pieces.push(targetPiece);\n            move.captured = new Captured({\n                fromBoardPoint: Point.fromIndex(moveToIndex),\n                toGraveyardPoint: Point.fromIndex(this.graveyard.lastIndex),\n                piece: targetPiece,\n            });\n        }\n        this.board.pieceIndices[moveToIndex].piece = piece;\n        return move;\n    }\n\n    toString() {\n        let str = this.board.toString();\n        str += ` ${this.turn.toString()}`;\n        str += ` ${this.kqMoved.toString()}`;\n        str += ` ${this.kAttacked.toString()}`;\n        str += ` ${this.countdown.toString()}`;\n        str += ` ${this.graveyard.toString()}`;\n        return str;\n    }\n\n    get isQueenMoved() {\n        const isQueenMoved = Piece.isWhiteColor(this.turn) && this.kqMoved.whiteQueen ||\n            Piece.isBlackColor(this.turn) && this.kqMoved.blackQueen;\n        return isQueenMoved;\n    }\n    get isKingMoved() {\n        const isKingMoved = Piece.isWhiteColor(this.turn) && this.kqMoved.whiteKing ||\n            Piece.isBlackColor(this.turn) && this.kqMoved.blackKing;\n        return isKingMoved;\n    }\n    genAllCanMoves(): PieceIndex[] {\n        const canMoves = this.moveHelper.calcCanMove({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: true,\n            genCanMoveForAnother: false,\n        });\n        return canMoves.moves;\n    }\n    isHasMoved(piece: Piece) {\n        let isHasMoved = false;\n        if ((this.kqMoved.blackKing && piece.isColorBlack && piece.isTypeKing) ||\n            (this.kqMoved.whiteKing && piece.isColorWhite && piece.isTypeKing) ||\n            (this.kqMoved.blackQueen && piece.isColorBlack && piece.isTypeQueen) ||\n            (this.kqMoved.whiteQueen && piece.isColorWhite && piece.isTypeQueen)) {\n            isHasMoved = true;\n        }\n        return isHasMoved;\n    }\n    getCanMovePointsByPoint(point: Point): Point[] {\n        const piece = this.board.getPieceAtIndex(point.index);\n        if (jsis.isNull(piece)) {\n            return [];\n        }\n        return this.moveHelper.genCanMovePointsByPiecePoint(point, piece,\n            this.board.toStringFullNoSeparate(), this.isHasMoved(piece));\n    }\n\n    getAttacker(): PieceIndex | null {\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        const kingInDanger = state.blackKingInDanger || state.whiteKingInDanger;\n        if (kingInDanger) {\n            const pieceIndex = kingInDanger.map((point) => {\n                return new PieceIndex(point, this.board.getPieceAtIndex(point.index));\n            }).filter((pieceIndex) => {\n                return !pieceIndex.piece.isTypeKing;\n            })[0];\n            return pieceIndex;\n        }\n        return null;\n    }\n    getWinColor(): string | null {\n        const state = this.moveHelper.calcState({\n            piecesString: this.board.toStringFullNoSeparate(),\n            currentTurn: this.turn,\n            isQueenMoved: this.isQueenMoved,\n            isKingMoved: this.isKingMoved,\n            genCanMove: false,\n            genCanMoveForAnother: false,\n        });\n        return state.winColor;\n    }\n}\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const STRING_COUNT = 'B2F8G2H2K1Q1b2f8g2h2k1q1';\n// BHGQKGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgkqghb w ---- -- -.-\nexport const DEFAULT_BOARD_STR = 'BHGKQGHB/8/FFFFFFFF/8/8/ffffffff/8/bhgqkghb';\nexport const NOT_SET = '-';\nexport const PIECE_FLAG_KILL = 'x';\nexport const PIECE_FLAG_JUMP = 'j';\nexport const PIECE_FLAG_UPGRADE = 'u';\nexport const EVENT_FLAG_ATTACK = 'attack';\nexport const EVENT_FLAG_WINN = 'win';\nexport const EVENT_FLAG_DRAW = 'draw';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","export { default as Board } from './Board';\nexport { default as CountDown } from './CountDown';\nexport { default as Graveyard } from './Graveyard';\nexport { default as KAttacked } from './KAttacked';\nexport { default as KqMoved } from './KqMoved';\nexport { default as Piece } from './Piece';\nexport { default as PieceIndex } from './PieceIndex';\nexport { default as REN } from './REN';\nexport { RENPropType } from './REN';\nexport { default as Point } from './Point';\nexport * from './constant';\n/*\n * Copyright (c) 2021, K4us\n * Author: Raksa Eng <eng.raksa@gmail.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *---------------------------------------------------------------------------- */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(303);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","renStr","this","renInstance","fromString","kpgnInstance","boardEventController","loadRENStr","resetBoard","getCanMoves","genAllCanMoves","getCanMovePointsByPoint","point","getAttacker","getWinColor","getStuckColor","isDraw","getDrawCountColor","gameOver","validateRENStr","valid","error_number","error","message","getRENStr","toString","board","piecesMultiArray","pieces","graveyard","getKPGN","toJson","loadKpgn","kpgnJosn","options","drawAscii","turn","move","moveFromIndex","moveToIndex","moves","push","undoMove","clearBoard","getHistories","checkBoardEvent","pieceIndex","jsis","isNull","boardEvent","BoardEvent","flag","EVENT_FLAG_ATTACK","actorPieceIndex","fireEvent","winColor","addBoardEventListener","listener","removeBoardEventListener","title","name","version","KhmerChess","h","v","isUndefined","Number","HORIZONTAL_CODE_LETTERS","indexOf","isWhiteColor","currentTurn","init","option","piecesString","isQueenMoved","isKingMoved","genCanMove","genCanMoveForAnother","whiteMoves","blackMoves","whiteKingInDanger","whiteKingWillInDanger","blackKingInDanger","blackKingWillInDanger","stuckColor","generateCanMoves","filter","filterPieceInBoard","whitePieces","blackPieces","genMoves","pieceIndices","forEach","isHaveMoved","piece","isTypeKing","isTypeQueen","canMovePoints","genCanMovePointsByPiecePoint","cleanPieceNoMove","cleanMoves","isTrue","length","splice","checkIfKingInDanger","getKingInDanger","PIECE_COLOR_WHITE","getKingWillInDanger","PIECE_COLOR_BLACK","genWinLost","getStuck","isWhiteTurn","calcCanMove","anotherMoves","calcState","blackCountable","checkCountable","whiteCountable","calCount","countingBlack","checkCount","force","countingWhite","isHasMoved","index","x","y","width","height","isContainsPoint","isValidPoint","Rectangle","ROW_LAST_INDEX","TRIGGER_MOVE","events","removeOnTriggerMoveEventListener","_removeOnEventListener","addOnTriggerMoveEventListener","_addOnEventListener","mask","convertMask","point1","color","sign","point2","fromIndex","getCharPieceFromString","isIndexInBoard","CELL_COUNT","EMPTY_PIECE","getCharPieceInPos","getPieceByIndex","charCode","isValidPiece","fromCharCode","getPieceCanMovePoses","type","_pos","newIndex","getPieceCanMovePosesValid","_poses","n","thisPos","p","distPiece","isTypeFish","isTypeBoat","_x","_y","_n","Math","abs","_s","xyToIndex","replacePiecesStringAtIndex","substring","injectPiece","index1","index2","c","isCharPiecesInBoard","kingPos","PIECE_TYPE_KING","pieceCharCode","j","isHaveCaptured","points","str","code","getPiecesInBoard","split","ROW_NUMBER","PieceIndex","isColorWhite","extractPiecesToArray","piecesStringArr","pieceAll","isStateCount","weaker","stronger","oppositeColor","countChar","join","PIECE_TYPE_FISH","count","toukCount","PIECE_TYPE_BOAT","PIECE_TYPE_GENERAL","PIECE_TYPE_HORSE","isUpgradable","isColorBlack","BoardHelper","COLOR_NAMES","COLOR_NAMES_ENGLISH","PIECE_TYPE_QUEEN","PIECE_TYPE_TRANSFORM_FISH","PIECE_NAMES","PIECE_NAMES_ENGLISH","PIECE_COLOR_EMPTY","BOARD_SEPARATOR","ROW_FIRST_INDEX","HORIZONTAL_NOTE_LETTERS","VERTICAL_NOTE_LETTERS","HORIZONTAL_NOTE_LETTERS_ENGLISH","VERTICAL_NOTE_LETTERS_ENGLISH","Array","from","_","concat","default","isValid","isString","isNotEmpty","isValidString","isNumber","isStringNumber","isNaN","isArray","arr","isFunction","f","isObject","o","Object","isBoolean","b","isValidBoolean","isFalse","isPoint","isValidObject","isValidNumber","isSize","size","isOdd","isEven","isUpperCase","toUpperCase","fromBoardPoint","toGraveyardPoint","renInstant","players","white","black","result","last","whiteWin","blackWin","event","date","location","map","m","ren","timer","moveFrom","moveTo","isJumping","isUpgrading","captured","boardHelper","fromMovedString","graveyardLastIndex","fromIndexCode","substr","Move","PIECE_FLAG_KILL","capturedPieceChar","fromIndexGraveyardIndex","PIECE_FLAG_JUMP","pCode","fIndexCode","indexCode","tIndexCode","flags","PIECE_FLAG_UPGRADE","toIndex","capturedPiece","getMessage","isEnglish","titleEnglish","upgrade","id","win","draw","lost","totalSecond","currentWhite","currentBlack","EVENT_FLAG_WINN","EVENT","BoardEventController","_addPropEvent","_onEventListeners","_propEvent","_checkPropEvent","_isLockProp","shift","_checkOnEvent","data","_guardEventName","eventName","Error","reverse","reduce","s","subArr","boardStr","DEFAULT_BOARD_STR","newBoardStr","extract","replace","isValidPiecesString","compress","reg","RegExp","$1","toStringFull","toPieceCharCode","toStringFullNoSeparate","getPieceAtIndex","countdownStr","newCountdownStr","NOT_SET","graveyardStr","kAttackedStr","whiteKing","blackKing","toWhiteCharCode","kqMovedStr","whiteQueen","blackQueen","Piece","toNormalCharCode","pieceCharCodeWhite","_isTypeEqual","isBlackColor","isWhiteCharCode","isTypeTransformedFish","toBlackCharCode","toLowerCase","onlyPiece","ruler","allPiecesString","some","pieceChars","pieceChar","toCode","Point","indexCodeToXY","indexCodeToIndex","indexToXY","floor","renProps","moveHelper","turnStr","kqMoved","kAttacked","countdown","invalidPiecesString","isInvalidPieceCount","msg","piecesCount","pos","originPiece","obj","keys","k","sort","STRING_COUNT","renArr","REN","targetPiece","Captured","lastIndex","state","kingInDanger","EVENT_FLAG_DRAW","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}